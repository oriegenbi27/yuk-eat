{
  "version": 3,
  "sources": ["../../datatables.net/js/jquery.dataTables.js", "../../datatables.net-bs4/js/dataTables.bootstrap4.js"],
  "sourcesContent": ["/*! DataTables 1.12.1\n * \u00A92008-2022 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     DataTables\n * @description Paginate, search and order HTML tables\n * @version     1.12.1\n * @author      SpryMedia Ltd\n * @contact     www.datatables.net\n * @copyright   SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/*jslint evil: true, undef: true, browser: true */\n/*globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidate,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/\n\n(function( factory ) {\n\t\"use strict\";\n\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\t// CommonJS environments without a window global must pass a\n\t\t\t\t// root. This will give an error otherwise\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ ) {\n\t\t\t\t$ = typeof window !== 'undefined' ? // jQuery's factory checks for a global window\n\t\t\t\t\trequire('jquery') :\n\t\t\t\t\trequire('jquery')( root );\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\twindow.DataTable = factory( jQuery, window, document );\n\t}\n}\n(function( $, window, document, undefined ) {\n\t\"use strict\";\n\n\t\n\tvar DataTable = function ( selector, options )\n\t{\n\t\t// When creating with `new`, create a new DataTable, returning the API instance\n\t\tif (this instanceof DataTable) {\n\t\t\treturn $(selector).DataTable(options);\n\t\t}\n\t\telse {\n\t\t\t// Argument switching\n\t\t\toptions = selector;\n\t\t}\n\t\n\t\t/**\n\t\t * Perform a jQuery selector action on the table's TR elements (from the tbody) and\n\t\t * return the resulting jQuery object.\n\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\n\t\t *    criterion (\"applied\") or all TR elements (i.e. no filter).\n\t\t *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\n\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t *  @returns {object} jQuery object, filtered by the given selector.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Highlight every second row\n\t\t *      oTable.$('tr:odd').css('backgroundColor', 'blue');\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to rows with 'Webkit' in them, add a background colour and then\n\t\t *      // remove the filter, thus highlighting the 'Webkit' rows only.\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\n\t\t *      oTable.fnFilter('');\n\t\t *    } );\n\t\t */\n\t\tthis.$ = function ( sSelector, oOpts )\n\t\t{\n\t\t\treturn this.api(true).$( sSelector, oOpts );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Almost identical to $ in operation, but in this case returns the data for the matched\n\t\t * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\n\t\t * rather than any descendants, so the data can be obtained for the row/cell. If matching\n\t\t * rows are found, the data returned is the original data array/object that was used to\n\t\t * create the row (or a generated array if from a DOM source).\n\t\t *\n\t\t * This method is often useful in-combination with $ where both functions are given the\n\t\t * same parameters and the array indexes will match identically.\n\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\n\t\t *    criterion (\"applied\") or all elements (i.e. no filter).\n\t\t *  @param {string} [oOpts.order=current] Order of the data in the processed array.\n\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t *  @returns {array} Data for the matched elements. If any elements, as a result of the\n\t\t *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\n\t\t *    entry in the array.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the data from the first row in the table\n\t\t *      var data = oTable._('tr:first');\n\t\t *\n\t\t *      // Do something useful with the data\n\t\t *      alert( \"First cell is: \"+data[0] );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to 'Webkit' and get all data for\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      var data = oTable._('tr', {\"search\": \"applied\"});\n\t\t *\n\t\t *      // Do something with the data\n\t\t *      alert( data.length+\" rows matched the search\" );\n\t\t *    } );\n\t\t */\n\t\tthis._ = function ( sSelector, oOpts )\n\t\t{\n\t\t\treturn this.api(true).rows( sSelector, oOpts ).data();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Create a DataTables Api instance, with the currently selected tables for\n\t\t * the Api's context.\n\t\t * @param {boolean} [traditional=false] Set the API instance's context to be\n\t\t *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\n\t\t *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\n\t\t *   or if all tables captured in the jQuery object should be used.\n\t\t * @return {DataTables.Api}\n\t\t */\n\t\tthis.api = function ( traditional )\n\t\t{\n\t\t\treturn traditional ?\n\t\t\t\tnew _Api(\n\t\t\t\t\t_fnSettingsFromNode( this[ _ext.iApiIndex ] )\n\t\t\t\t) :\n\t\t\t\tnew _Api( this );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Add a single new row or multiple rows of data to the table. Please note\n\t\t * that this is suitable for client-side processing only - if you are using\n\t\t * server-side processing (i.e. \"bServerSide\": true), then to add data, you\n\t\t * must add it to the data source, i.e. the server-side, through an Ajax call.\n\t\t *  @param {array|object} data The data to be added to the table. This can be:\n\t\t *    <ul>\n\t\t *      <li>1D array of data - add a single row with the data provided</li>\n\t\t *      <li>2D array of arrays - add multiple rows in a single call</li>\n\t\t *      <li>object - data object when using <i>mData</i></li>\n\t\t *      <li>array of objects - multiple data objects when using <i>mData</i></li>\n\t\t *    </ul>\n\t\t *  @param {bool} [redraw=true] redraw the table or not\n\t\t *  @returns {array} An array of integers, representing the list of indexes in\n\t\t *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\n\t\t *    the table.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    // Global var for counter\n\t\t *    var giCount = 2;\n\t\t *\n\t\t *    $(document).ready(function() {\n\t\t *      $('#example').dataTable();\n\t\t *    } );\n\t\t *\n\t\t *    function fnClickAddRow() {\n\t\t *      $('#example').dataTable().fnAddData( [\n\t\t *        giCount+\".1\",\n\t\t *        giCount+\".2\",\n\t\t *        giCount+\".3\",\n\t\t *        giCount+\".4\" ]\n\t\t *      );\n\t\t *\n\t\t *      giCount++;\n\t\t *    }\n\t\t */\n\t\tthis.fnAddData = function( data, redraw )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\t/* Check if we want to add multiple rows or not */\n\t\t\tvar rows = Array.isArray(data) && ( Array.isArray(data[0]) || $.isPlainObject(data[0]) ) ?\n\t\t\t\tapi.rows.add( data ) :\n\t\t\t\tapi.row.add( data );\n\t\t\n\t\t\tif ( redraw === undefined || redraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\n\t\t\treturn rows.flatten().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * This function will make DataTables recalculate the column sizes, based on the data\n\t\t * contained in the table and the sizes applied to the columns (in the DOM, CSS or\n\t\t * through the sWidth parameter). This can be useful when the width of the table's\n\t\t * parent element changes (for example a window resize).\n\t\t *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable( {\n\t\t *        \"sScrollY\": \"200px\",\n\t\t *        \"bPaginate\": false\n\t\t *      } );\n\t\t *\n\t\t *      $(window).on('resize', function () {\n\t\t *        oTable.fnAdjustColumnSizing();\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tthis.fnAdjustColumnSizing = function ( bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).columns.adjust();\n\t\t\tvar settings = api.settings()[0];\n\t\t\tvar scroll = settings.oScroll;\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw( false );\n\t\t\t}\n\t\t\telse if ( scroll.sX !== \"\" || scroll.sY !== \"\" ) {\n\t\t\t\t/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n\t\t\t\t_fnScrollDraw( settings );\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Quickly and simply clear a table\n\t\t *  @param {bool} [bRedraw=true] redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n\t\t *      oTable.fnClearTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnClearTable = function( bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).clear();\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * The exact opposite of 'opening' a row, this function will close any rows which\n\t\t * are currently 'open'.\n\t\t *  @param {node} nTr the table row to 'close'\n\t\t *  @returns {int} 0 on success, or 1 if failed (can't find the row)\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnClose = function( nTr )\n\t\t{\n\t\t\tthis.api( true ).row( nTr ).child.hide();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Remove a row for the table\n\t\t *  @param {mixed} target The index of the row from aoData to be deleted, or\n\t\t *    the TR element you want to delete\n\t\t *  @param {function|null} [callBack] Callback function\n\t\t *  @param {bool} [redraw=true] Redraw the table or not\n\t\t *  @returns {array} The row that was deleted\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Immediately remove the first row\n\t\t *      oTable.fnDeleteRow( 0 );\n\t\t *    } );\n\t\t */\n\t\tthis.fnDeleteRow = function( target, callback, redraw )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\tvar rows = api.rows( target );\n\t\t\tvar settings = rows.settings()[0];\n\t\t\tvar data = settings.aoData[ rows[0][0] ];\n\t\t\n\t\t\trows.remove();\n\t\t\n\t\t\tif ( callback ) {\n\t\t\t\tcallback.call( this, settings, data );\n\t\t\t}\n\t\t\n\t\t\tif ( redraw === undefined || redraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\n\t\t\treturn data;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Restore the table to it's original state in the DOM by removing all of DataTables\n\t\t * enhancements, alterations to the DOM structure of the table and event listeners.\n\t\t *  @param {boolean} [remove=false] Completely remove the table from the DOM\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnDestroy();\n\t\t *    } );\n\t\t */\n\t\tthis.fnDestroy = function ( remove )\n\t\t{\n\t\t\tthis.api( true ).destroy( remove );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Redraw the table\n\t\t *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n\t\t *      oTable.fnDraw();\n\t\t *    } );\n\t\t */\n\t\tthis.fnDraw = function( complete )\n\t\t{\n\t\t\t// Note that this isn't an exact match to the old call to _fnDraw - it takes\n\t\t\t// into account the new data, but can hold position.\n\t\t\tthis.api( true ).draw( complete );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Filter the input based on data\n\t\t *  @param {string} sInput String to filter the table on\n\t\t *  @param {int|null} [iColumn] Column to limit filtering to\n\t\t *  @param {bool} [bRegex=false] Treat as regular expression or not\n\t\t *  @param {bool} [bSmart=true] Perform smart filtering or not\n\t\t *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\n\t\t *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sometime later - filter...\n\t\t *      oTable.fnFilter( 'test string' );\n\t\t *    } );\n\t\t */\n\t\tthis.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( iColumn === null || iColumn === undefined ) {\n\t\t\t\tapi.search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tapi.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t\t}\n\t\t\n\t\t\tapi.draw();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the data for the whole table, an individual row or an individual cell based on the\n\t\t * provided parameters.\n\t\t *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\n\t\t *    a TR node then the data source for the whole row will be returned. If given as a\n\t\t *    TD/TH cell node then iCol will be automatically calculated and the data for the\n\t\t *    cell returned. If given as an integer, then this is treated as the aoData internal\n\t\t *    data index for the row (see fnGetPosition) and the data for that row used.\n\t\t *  @param {int} [col] Optional column index that you want the data of.\n\t\t *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\n\t\t *    returned. If mRow is defined, just data for that row, and is iCol is\n\t\t *    defined, only data for the designated cell is returned.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    // Row data\n\t\t *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('tr').click( function () {\n\t\t *        var data = oTable.fnGetData( this );\n\t\t *        // ... do something with the array / object of data for the row\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Individual cell data\n\t\t *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('td').click( function () {\n\t\t *        var sData = oTable.fnGetData( this );\n\t\t *        alert( 'The cell clicked on had the value of '+sData );\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetData = function( src, col )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( src !== undefined ) {\n\t\t\t\tvar type = src.nodeName ? src.nodeName.toLowerCase() : '';\n\t\t\n\t\t\t\treturn col !== undefined || type == 'td' || type == 'th' ?\n\t\t\t\t\tapi.cell( src, col ).data() :\n\t\t\t\t\tapi.row( src ).data() || null;\n\t\t\t}\n\t\t\n\t\t\treturn api.data().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get an array of the TR nodes that are used in the table's body. Note that you will\n\t\t * typically want to use the '$' API method in preference to this as it is more\n\t\t * flexible.\n\t\t *  @param {int} [iRow] Optional row index for the TR element you want\n\t\t *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\n\t\t *    in the table's body, or iRow is defined, just the TR element requested.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the nodes from the table\n\t\t *      var nNodes = oTable.fnGetNodes( );\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetNodes = function( iRow )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\treturn iRow !== undefined ?\n\t\t\t\tapi.row( iRow ).node() :\n\t\t\t\tapi.rows().nodes().flatten().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the array indexes of a particular cell from it's DOM element\n\t\t * and column index including hidden columns\n\t\t *  @param {node} node this can either be a TR, TD or TH in the table's body\n\t\t *  @returns {int} If nNode is given as a TR, then a single index is returned, or\n\t\t *    if given as a cell, an array of [row index, column index (visible),\n\t\t *    column index (all)] is given.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      $('#example tbody td').click( function () {\n\t\t *        // Get the position of the current data from the node\n\t\t *        var aPos = oTable.fnGetPosition( this );\n\t\t *\n\t\t *        // Get the data array for this row\n\t\t *        var aData = oTable.fnGetData( aPos[0] );\n\t\t *\n\t\t *        // Update the data array and return the value\n\t\t *        aData[ aPos[1] ] = 'clicked';\n\t\t *        this.innerHTML = 'clicked';\n\t\t *      } );\n\t\t *\n\t\t *      // Init DataTables\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetPosition = function( node )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\tvar nodeName = node.nodeName.toUpperCase();\n\t\t\n\t\t\tif ( nodeName == 'TR' ) {\n\t\t\t\treturn api.row( node ).index();\n\t\t\t}\n\t\t\telse if ( nodeName == 'TD' || nodeName == 'TH' ) {\n\t\t\t\tvar cell = api.cell( node ).index();\n\t\t\n\t\t\t\treturn [\n\t\t\t\t\tcell.row,\n\t\t\t\t\tcell.columnVisible,\n\t\t\t\t\tcell.column\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Check to see if a row is 'open' or not.\n\t\t *  @param {node} nTr the table row to check\n\t\t *  @returns {boolean} true if the row is currently open, false otherwise\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnIsOpen = function( nTr )\n\t\t{\n\t\t\treturn this.api( true ).row( nTr ).child.isShown();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * This function will place a new row directly after a row which is currently\n\t\t * on display on the page, with the HTML contents that is passed into the\n\t\t * function. This can be used, for example, to ask for confirmation that a\n\t\t * particular record should be deleted.\n\t\t *  @param {node} nTr The table row to 'open'\n\t\t *  @param {string|node|jQuery} mHtml The HTML to put into the row\n\t\t *  @param {string} sClass Class to give the new TD cell\n\t\t *  @returns {node} The row opened. Note that if the table row passed in as the\n\t\t *    first parameter, is not found in the table, this method will silently\n\t\t *    return.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnOpen = function( nTr, mHtml, sClass )\n\t\t{\n\t\t\treturn this.api( true )\n\t\t\t\t.row( nTr )\n\t\t\t\t.child( mHtml, sClass )\n\t\t\t\t.show()\n\t\t\t\t.child()[0];\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Change the pagination - provides the internal logic for pagination in a simple API\n\t\t * function. With this function you can have a DataTables table go to the next,\n\t\t * previous, first or last pages.\n\t\t *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n\t\t *    or page number to jump to (integer), note that page 0 is the first page.\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnPageChange( 'next' );\n\t\t *    } );\n\t\t */\n\t\tthis.fnPageChange = function ( mAction, bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).page( mAction );\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw(false);\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Show a particular column\n\t\t *  @param {int} iCol The column whose display should be changed\n\t\t *  @param {bool} bShow Show (true) or hide (false) the column\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Hide the second column after initialisation\n\t\t *      oTable.fnSetColumnVis( 1, false );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSetColumnVis = function ( iCol, bShow, bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).column( iCol ).visible( bShow );\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.columns.adjust().draw();\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the settings for a particular table for external manipulation\n\t\t *  @returns {object} DataTables settings object. See\n\t\t *    {@link DataTable.models.oSettings}\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      var oSettings = oTable.fnSettings();\n\t\t *\n\t\t *      // Show an example parameter from the settings\n\t\t *      alert( oSettings._iDisplayStart );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSettings = function()\n\t\t{\n\t\t\treturn _fnSettingsFromNode( this[_ext.iApiIndex] );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Sort the table by a particular column\n\t\t *  @param {int} iCol the data index to sort on. Note that this will not match the\n\t\t *    'display index' if you have hidden data entries\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sort immediately with columns 0 and 1\n\t\t *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSort = function( aaSort )\n\t\t{\n\t\t\tthis.api( true ).order( aaSort ).draw();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Attach a sort listener to an element for a given column\n\t\t *  @param {node} nNode the element to attach the sort listener to\n\t\t *  @param {int} iColumn the column that a click on this node will sort on\n\t\t *  @param {function} [fnCallback] callback function when sort is run\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sort on column 1, when 'sorter' is clicked on\n\t\t *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSortListener = function( nNode, iColumn, fnCallback )\n\t\t{\n\t\t\tthis.api( true ).order.listener( nNode, iColumn, fnCallback );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Update a table cell or row - this method will accept either a single value to\n\t\t * update the cell with, an array of values with one element for each column or\n\t\t * an object in the same format as the original data source. The function is\n\t\t * self-referencing in order to make the multi column updates easier.\n\t\t *  @param {object|array|string} mData Data to update the cell/row with\n\t\t *  @param {node|int} mRow TR element you want to update or the aoData index\n\t\t *  @param {int} [iColumn] The column to update, give as null or undefined to\n\t\t *    update a whole row.\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @param {bool} [bAction=true] Perform pre-draw actions or not\n\t\t *  @returns {int} 0 on success, 1 on error\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\n\t\t *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\n\t\t *    } );\n\t\t */\n\t\tthis.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( iColumn === undefined || iColumn === null ) {\n\t\t\t\tapi.row( mRow ).data( mData );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tapi.cell( mRow, iColumn ).data( mData );\n\t\t\t}\n\t\t\n\t\t\tif ( bAction === undefined || bAction ) {\n\t\t\t\tapi.columns.adjust();\n\t\t\t}\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\treturn 0;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Provide a common method for plug-ins to check the version of DataTables being used, in order\n\t\t * to ensure compatibility.\n\t\t *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n\t\t *    formats \"X\" and \"X.Y\" are also acceptable.\n\t\t *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n\t\t *    version, or false if this version of DataTales is not suitable\n\t\t *  @method\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n\t\t *    } );\n\t\t */\n\t\tthis.fnVersionCheck = _ext.fnVersionCheck;\n\t\t\n\t\n\t\tvar _that = this;\n\t\tvar emptyInit = options === undefined;\n\t\tvar len = this.length;\n\t\n\t\tif ( emptyInit ) {\n\t\t\toptions = {};\n\t\t}\n\t\n\t\tthis.oApi = this.internal = _ext.internal;\n\t\n\t\t// Extend with old style plug-in API methods\n\t\tfor ( var fn in DataTable.ext.internal ) {\n\t\t\tif ( fn ) {\n\t\t\t\tthis[fn] = _fnExternApiFunc(fn);\n\t\t\t}\n\t\t}\n\t\n\t\tthis.each(function() {\n\t\t\t// For each initialisation we want to give it a clean initialisation\n\t\t\t// object that can be bashed around\n\t\t\tvar o = {};\n\t\t\tvar oInit = len > 1 ? // optimisation for single table case\n\t\t\t\t_fnExtend( o, options, true ) :\n\t\t\t\toptions;\n\t\n\t\t\t/*global oInit,_that,emptyInit*/\n\t\t\tvar i=0, iLen, j, jLen, k, kLen;\n\t\t\tvar sId = this.getAttribute( 'id' );\n\t\t\tvar bInitHandedOff = false;\n\t\t\tvar defaults = DataTable.defaults;\n\t\t\tvar $this = $(this);\n\t\t\t\n\t\t\t\n\t\t\t/* Sanity check */\n\t\t\tif ( this.nodeName.toLowerCase() != 'table' )\n\t\t\t{\n\t\t\t\t_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t/* Backwards compatibility for the defaults */\n\t\t\t_fnCompatOpts( defaults );\n\t\t\t_fnCompatCols( defaults.column );\n\t\t\t\n\t\t\t/* Convert the camel-case defaults to Hungarian */\n\t\t\t_fnCamelToHungarian( defaults, defaults, true );\n\t\t\t_fnCamelToHungarian( defaults.column, defaults.column, true );\n\t\t\t\n\t\t\t/* Setting up the initialisation object */\n\t\t\t_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ), true );\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t/* Check to see if we are re-initialising a table */\n\t\t\tvar allSettings = DataTable.settings;\n\t\t\tfor ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tvar s = allSettings[i];\n\t\t\t\n\t\t\t\t/* Base check on table node */\n\t\t\t\tif (\n\t\t\t\t\ts.nTable == this ||\n\t\t\t\t\t(s.nTHead && s.nTHead.parentNode == this) ||\n\t\t\t\t\t(s.nTFoot && s.nTFoot.parentNode == this)\n\t\t\t\t) {\n\t\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n\t\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\t\t\t\n\t\t\t\t\tif ( emptyInit || bRetrieve )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn s.oInstance;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( bDestroy )\n\t\t\t\t\t{\n\t\t\t\t\t\ts.oInstance.fnDestroy();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* If the element we are initialising has the same ID as a table which was previously\n\t\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\n\t\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\n\t\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n\t\t\t\t */\n\t\t\t\tif ( s.sTableId == this.id )\n\t\t\t\t{\n\t\t\t\t\tallSettings.splice( i, 1 );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Ensure the table has an ID - required for accessibility */\n\t\t\tif ( sId === null || sId === \"\" )\n\t\t\t{\n\t\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._unique++);\n\t\t\t\tthis.id = sId;\n\t\t\t}\n\t\t\t\n\t\t\t/* Create the settings object for this table and set some of the default parameters */\n\t\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\n\t\t\t\t\"sDestroyWidth\": $this[0].style.width,\n\t\t\t\t\"sInstance\":     sId,\n\t\t\t\t\"sTableId\":      sId\n\t\t\t} );\n\t\t\toSettings.nTable = this;\n\t\t\toSettings.oApi   = _that.internal;\n\t\t\toSettings.oInit  = oInit;\n\t\t\t\n\t\t\tallSettings.push( oSettings );\n\t\t\t\n\t\t\t// Need to add the instance after the instance after the settings object has been added\n\t\t\t// to the settings array, so we can self reference the table instance if more than one\n\t\t\toSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\n\t\t\t\n\t\t\t// Backwards compatibility, before we apply all the defaults\n\t\t\t_fnCompatOpts( oInit );\n\t\t\t_fnLanguageCompat( oInit.oLanguage );\n\t\t\t\n\t\t\t// If the length menu is given, but the init display length is not, use the length menu\n\t\t\tif ( oInit.aLengthMenu && ! oInit.iDisplayLength )\n\t\t\t{\n\t\t\t\toInit.iDisplayLength = Array.isArray( oInit.aLengthMenu[0] ) ?\n\t\t\t\t\toInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\n\t\t\t}\n\t\t\t\n\t\t\t// Apply the defaults and init options to make a single init object will all\n\t\t\t// options defined from defaults and instance options.\n\t\t\toInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\n\t\t\t\n\t\t\t\n\t\t\t// Map the initialisation options onto the settings object\n\t\t\t_fnMap( oSettings.oFeatures, oInit, [\n\t\t\t\t\"bPaginate\",\n\t\t\t\t\"bLengthChange\",\n\t\t\t\t\"bFilter\",\n\t\t\t\t\"bSort\",\n\t\t\t\t\"bSortMulti\",\n\t\t\t\t\"bInfo\",\n\t\t\t\t\"bProcessing\",\n\t\t\t\t\"bAutoWidth\",\n\t\t\t\t\"bSortClasses\",\n\t\t\t\t\"bServerSide\",\n\t\t\t\t\"bDeferRender\"\n\t\t\t] );\n\t\t\t_fnMap( oSettings, oInit, [\n\t\t\t\t\"asStripeClasses\",\n\t\t\t\t\"ajax\",\n\t\t\t\t\"fnServerData\",\n\t\t\t\t\"fnFormatNumber\",\n\t\t\t\t\"sServerMethod\",\n\t\t\t\t\"aaSorting\",\n\t\t\t\t\"aaSortingFixed\",\n\t\t\t\t\"aLengthMenu\",\n\t\t\t\t\"sPaginationType\",\n\t\t\t\t\"sAjaxSource\",\n\t\t\t\t\"sAjaxDataProp\",\n\t\t\t\t\"iStateDuration\",\n\t\t\t\t\"sDom\",\n\t\t\t\t\"bSortCellsTop\",\n\t\t\t\t\"iTabIndex\",\n\t\t\t\t\"fnStateLoadCallback\",\n\t\t\t\t\"fnStateSaveCallback\",\n\t\t\t\t\"renderer\",\n\t\t\t\t\"searchDelay\",\n\t\t\t\t\"rowId\",\n\t\t\t\t[ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\n\t\t\t\t[ \"oSearch\", \"oPreviousSearch\" ],\n\t\t\t\t[ \"aoSearchCols\", \"aoPreSearchCols\" ],\n\t\t\t\t[ \"iDisplayLength\", \"_iDisplayLength\" ]\n\t\t\t] );\n\t\t\t_fnMap( oSettings.oScroll, oInit, [\n\t\t\t\t[ \"sScrollX\", \"sX\" ],\n\t\t\t\t[ \"sScrollXInner\", \"sXInner\" ],\n\t\t\t\t[ \"sScrollY\", \"sY\" ],\n\t\t\t\t[ \"bScrollCollapse\", \"bCollapse\" ]\n\t\t\t] );\n\t\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\n\t\t\t\n\t\t\t/* Callback functions which are array driven */\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );\n\t\t\t\n\t\t\toSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\n\t\t\t\n\t\t\t/* Browser support detection */\n\t\t\t_fnBrowserDetect( oSettings );\n\t\t\t\n\t\t\tvar oClasses = oSettings.oClasses;\n\t\t\t\n\t\t\t$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\n\t\t\t$this.addClass( oClasses.sTable );\n\t\t\t\n\t\t\t\n\t\t\tif ( oSettings.iInitDisplayStart === undefined )\n\t\t\t{\n\t\t\t\t/* Display start point, taking into account the save saving */\n\t\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\n\t\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\n\t\t\t}\n\t\t\t\n\t\t\tif ( oInit.iDeferLoading !== null )\n\t\t\t{\n\t\t\t\toSettings.bDeferLoading = true;\n\t\t\t\tvar tmp = Array.isArray( oInit.iDeferLoading );\n\t\t\t\toSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\n\t\t\t\toSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\n\t\t\t}\n\t\t\t\n\t\t\t/* Language definitions */\n\t\t\tvar oLanguage = oSettings.oLanguage;\n\t\t\t$.extend( true, oLanguage, oInit.oLanguage );\n\t\t\t\n\t\t\tif ( oLanguage.sUrl )\n\t\t\t{\n\t\t\t\t/* Get the language definitions from a file - because this Ajax call makes the language\n\t\t\t\t * get async to the remainder of this function we use bInitHandedOff to indicate that\n\t\t\t\t * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n\t\t\t\t */\n\t\t\t\t$.ajax( {\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\turl: oLanguage.sUrl,\n\t\t\t\t\tsuccess: function ( json ) {\n\t\t\t\t\t\t_fnCamelToHungarian( defaults.oLanguage, json );\n\t\t\t\t\t\t_fnLanguageCompat( json );\n\t\t\t\t\t\t$.extend( true, oLanguage, json, oSettings.oInit.oLanguage );\n\t\t\t\n\t\t\t\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);\n\t\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t\t},\n\t\t\t\t\terror: function () {\n\t\t\t\t\t\t// Error occurred loading language file, continue on as best we can\n\t\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tbInitHandedOff = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * Stripes\n\t\t\t */\n\t\t\tif ( oInit.asStripeClasses === null )\n\t\t\t{\n\t\t\t\toSettings.asStripeClasses =[\n\t\t\t\t\toClasses.sStripeOdd,\n\t\t\t\t\toClasses.sStripeEven\n\t\t\t\t];\n\t\t\t}\n\t\t\t\n\t\t\t/* Remove row stripe classes if they are already on the table row */\n\t\t\tvar stripeClasses = oSettings.asStripeClasses;\n\t\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\n\t\t\tif ( $.inArray( true, $.map( stripeClasses, function(el, i) {\n\t\t\t\treturn rowOne.hasClass(el);\n\t\t\t} ) ) !== -1 ) {\n\t\t\t\t$('tbody tr', this).removeClass( stripeClasses.join(' ') );\n\t\t\t\toSettings.asDestroyStripes = stripeClasses.slice();\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * Columns\n\t\t\t * See if we should load columns automatically or use defined ones\n\t\t\t */\n\t\t\tvar anThs = [];\n\t\t\tvar aoColumnsInit;\n\t\t\tvar nThead = this.getElementsByTagName('thead');\n\t\t\tif ( nThead.length !== 0 )\n\t\t\t{\n\t\t\t\t_fnDetectHeader( oSettings.aoHeader, nThead[0] );\n\t\t\t\tanThs = _fnGetUniqueThs( oSettings );\n\t\t\t}\n\t\t\t\n\t\t\t/* If not given a column array, generate one with nulls */\n\t\t\tif ( oInit.aoColumns === null )\n\t\t\t{\n\t\t\t\taoColumnsInit = [];\n\t\t\t\tfor ( i=0, iLen=anThs.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\taoColumnsInit.push( null );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\taoColumnsInit = oInit.aoColumns;\n\t\t\t}\n\t\t\t\n\t\t\t/* Add the columns */\n\t\t\tfor ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\t_fnAddColumn( oSettings, anThs ? anThs[i] : null );\n\t\t\t}\n\t\t\t\n\t\t\t/* Apply the column definitions */\n\t\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\n\t\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\n\t\t\t} );\n\t\t\t\n\t\t\t/* HTML5 attribute detection - build an mData object automatically if the\n\t\t\t * attributes are found\n\t\t\t */\n\t\t\tif ( rowOne.length ) {\n\t\t\t\tvar a = function ( cell, name ) {\n\t\t\t\t\treturn cell.getAttribute( 'data-'+name ) !== null ? name : null;\n\t\t\t\t};\n\t\t\t\n\t\t\t\t$( rowOne[0] ).children('th, td').each( function (i, cell) {\n\t\t\t\t\tvar col = oSettings.aoColumns[i];\n\t\t\t\n\t\t\t\t\tif ( col.mData === i ) {\n\t\t\t\t\t\tvar sort = a( cell, 'sort' ) || a( cell, 'order' );\n\t\t\t\t\t\tvar filter = a( cell, 'filter' ) || a( cell, 'search' );\n\t\t\t\n\t\t\t\t\t\tif ( sort !== null || filter !== null ) {\n\t\t\t\t\t\t\tcol.mData = {\n\t\t\t\t\t\t\t\t_:      i+'.display',\n\t\t\t\t\t\t\t\tsort:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\t\ttype:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\t\tfilter: filter !== null ? i+'.@data-'+filter : undefined\n\t\t\t\t\t\t\t};\n\t\t\t\n\t\t\t\t\t\t\t_fnColumnOptions( oSettings, i );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\t\n\t\t\tvar features = oSettings.oFeatures;\n\t\t\tvar loadedInit = function () {\n\t\t\t\t/*\n\t\t\t\t * Sorting\n\t\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler\n\t\t\t\t */\n\t\t\t\n\t\t\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\n\t\t\t\t// in case that has been altered, so the default sort reflects that option\n\t\t\t\tif ( oInit.aaSorting === undefined ) {\n\t\t\t\t\tvar sorting = oSettings.aaSorting;\n\t\t\t\t\tfor ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {\n\t\t\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* Do a first pass on the sorting classes (allows any size changes to be taken into\n\t\t\t\t * account, and also will apply sorting disabled classes if disabled\n\t\t\t\t */\n\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\n\t\t\t\tif ( features.bSort ) {\n\t\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\t\tif ( oSettings.bSorted ) {\n\t\t\t\t\t\t\tvar aSort = _fnSortFlatten( oSettings );\n\t\t\t\t\t\t\tvar sortedColumns = {};\n\t\t\t\n\t\t\t\t\t\t\t$.each( aSort, function (i, val) {\n\t\t\t\t\t\t\t\tsortedColumns[ val.src ] = val.dir;\n\t\t\t\t\t\t\t} );\n\t\t\t\n\t\t\t\t\t\t\t_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );\n\t\t\t\t\t\t\t_fnSortAria( oSettings );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\tif ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\n\t\t\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\t\t}\n\t\t\t\t}, 'sc' );\n\t\t\t\n\t\t\t\n\t\t\t\t/*\n\t\t\t\t * Final init\n\t\t\t\t * Cache the header, body and footer as required, creating them if needed\n\t\t\t\t */\n\t\t\t\n\t\t\t\t// Work around for Webkit bug 83867 - store the caption-side before removing from doc\n\t\t\t\tvar captions = $this.children('caption').each( function () {\n\t\t\t\t\tthis._captionSide = $(this).css('caption-side');\n\t\t\t\t} );\n\t\t\t\n\t\t\t\tvar thead = $this.children('thead');\n\t\t\t\tif ( thead.length === 0 ) {\n\t\t\t\t\tthead = $('<thead/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\toSettings.nTHead = thead[0];\n\t\t\t\n\t\t\t\tvar tbody = $this.children('tbody');\n\t\t\t\tif ( tbody.length === 0 ) {\n\t\t\t\t\ttbody = $('<tbody/>').insertAfter(thead);\n\t\t\t\t}\n\t\t\t\toSettings.nTBody = tbody[0];\n\t\t\t\n\t\t\t\tvar tfoot = $this.children('tfoot');\n\t\t\t\tif ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\") ) {\n\t\t\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\n\t\t\t\t\t// a tfoot element for the caption element to be appended to\n\t\t\t\t\ttfoot = $('<tfoot/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\n\t\t\t\tif ( tfoot.length === 0 || tfoot.children().length === 0 ) {\n\t\t\t\t\t$this.addClass( oClasses.sNoFooter );\n\t\t\t\t}\n\t\t\t\telse if ( tfoot.length > 0 ) {\n\t\t\t\t\toSettings.nTFoot = tfoot[0];\n\t\t\t\t\t_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* Check if there is data passing into the constructor */\n\t\t\t\tif ( oInit.aaData ) {\n\t\t\t\t\tfor ( i=0 ; i<oInit.aaData.length ; i++ ) {\n\t\t\t\t\t\t_fnAddData( oSettings, oInit.aaData[ i ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' ) {\n\t\t\t\t\t/* Grab the data from the page - only do this when deferred loading or no Ajax\n\t\t\t\t\t * source since there is no point in reading the DOM data if we are then going\n\t\t\t\t\t * to replace it with Ajax data\n\t\t\t\t\t */\n\t\t\t\t\t_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* Copy the data index array */\n\t\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\t\n\t\t\t\t/* Initialisation complete - table can be drawn */\n\t\t\t\toSettings.bInitialised = true;\n\t\t\t\n\t\t\t\t/* Check if we need to initialise the table (it might not have been handed off to the\n\t\t\t\t * language processor)\n\t\t\t\t */\n\t\t\t\tif ( bInitHandedOff === false ) {\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\t/* Must be done after everything which can be overridden by the state saving! */\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );\n\t\t\t\n\t\t\tif ( oInit.bStateSave )\n\t\t\t{\n\t\t\t\tfeatures.bStateSave = true;\n\t\t\t\t_fnLoadState( oSettings, oInit, loadedInit );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tloadedInit();\n\t\t\t}\n\t\t\t\n\t\t} );\n\t\t_that = null;\n\t\treturn this;\n\t};\n\t\n\t\n\t/*\n\t * It is useful to have variables which are scoped locally so only the\n\t * DataTables functions can access them and they don't leak into global space.\n\t * At the same time these functions are often useful over multiple files in the\n\t * core and API, so we list, or at least document, all variables which are used\n\t * by DataTables as private variables here. This also ensures that there is no\n\t * clashing of variable names and that they can easily referenced for reuse.\n\t */\n\t\n\t\n\t// Defined else where\n\t//  _selector_run\n\t//  _selector_opts\n\t//  _selector_first\n\t//  _selector_row_indexes\n\t\n\tvar _ext; // DataTable.ext\n\tvar _Api; // DataTable.Api\n\tvar _api_register; // DataTable.Api.register\n\tvar _api_registerPlural; // DataTable.Api.registerPlural\n\t\n\tvar _re_dic = {};\n\tvar _re_new_lines = /[\\r\\n\\u2028]/g;\n\tvar _re_html = /<.*?>/g;\n\t\n\t// This is not strict ISO8601 - Date.parse() is quite lax, although\n\t// implementations differ between browsers.\n\tvar _re_date = /^\\d{2,4}[\\.\\/\\-]\\d{1,2}[\\.\\/\\-]\\d{1,2}([T ]{1}\\d{1,2}[:\\.]\\d{2}([\\.:]\\d{2})?)?$/;\n\t\n\t// Escape regular expression special characters\n\tvar _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\n\t\n\t// http://en.wikipedia.org/wiki/Foreign_exchange_market\n\t// - \\u20BD - Russian ruble.\n\t// - \\u20a9 - South Korean Won\n\t// - \\u20BA - Turkish Lira\n\t// - \\u20B9 - Indian Rupee\n\t// - R - Brazil (R$) and South Africa\n\t// - fr - Swiss Franc\n\t// - kr - Swedish krona, Norwegian krone and Danish krone\n\t// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n\t// - \u0243 - Bitcoin\n\t// - \u039E - Ethereum\n\t//   standards as thousands separators.\n\tvar _re_formatted_numeric = /['\\u00A0,$\u00A3\u20AC\u00A5%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfk\u0243\u039E]/gi;\n\t\n\t\n\tvar _empty = function ( d ) {\n\t\treturn !d || d === true || d === '-' ? true : false;\n\t};\n\t\n\t\n\tvar _intVal = function ( s ) {\n\t\tvar integer = parseInt( s, 10 );\n\t\treturn !isNaN(integer) && isFinite(s) ? integer : null;\n\t};\n\t\n\t// Convert from a formatted number with characters other than `.` as the\n\t// decimal place, to a Javascript number\n\tvar _numToDecimal = function ( num, decimalPoint ) {\n\t\t// Cache created regular expressions for speed as this function is called often\n\t\tif ( ! _re_dic[ decimalPoint ] ) {\n\t\t\t_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\n\t\t}\n\t\treturn typeof num === 'string' && decimalPoint !== '.' ?\n\t\t\tnum.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\n\t\t\tnum;\n\t};\n\t\n\t\n\tvar _isNumber = function ( d, decimalPoint, formatted ) {\n\t\tvar strType = typeof d === 'string';\n\t\n\t\t// If empty return immediately so there must be a number if it is a\n\t\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\n\t\t// as a formatted number for currency\n\t\tif ( _empty( d ) ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tif ( decimalPoint && strType ) {\n\t\t\td = _numToDecimal( d, decimalPoint );\n\t\t}\n\t\n\t\tif ( formatted && strType ) {\n\t\t\td = d.replace( _re_formatted_numeric, '' );\n\t\t}\n\t\n\t\treturn !isNaN( parseFloat(d) ) && isFinite( d );\n\t};\n\t\n\t\n\t// A string without HTML in it can be considered to be HTML still\n\tvar _isHtml = function ( d ) {\n\t\treturn _empty( d ) || typeof d === 'string';\n\t};\n\t\n\t\n\tvar _htmlNumeric = function ( d, decimalPoint, formatted ) {\n\t\tif ( _empty( d ) ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tvar html = _isHtml( d );\n\t\treturn ! html ?\n\t\t\tnull :\n\t\t\t_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?\n\t\t\t\ttrue :\n\t\t\t\tnull;\n\t};\n\t\n\t\n\tvar _pluck = function ( a, prop, prop2 ) {\n\t\tvar out = [];\n\t\tvar i=0, ien=a.length;\n\t\n\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t// is essential here\n\t\tif ( prop2 !== undefined ) {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[i] && a[i][ prop ] ) {\n\t\t\t\t\tout.push( a[i][ prop ][ prop2 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[i] ) {\n\t\t\t\t\tout.push( a[i][ prop ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\t// Basically the same as _pluck, but rather than looping over `a` we use `order`\n\t// as the indexes to pick from `a`\n\tvar _pluck_order = function ( a, order, prop, prop2 )\n\t{\n\t\tvar out = [];\n\t\tvar i=0, ien=order.length;\n\t\n\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t// is essential here\n\t\tif ( prop2 !== undefined ) {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[ order[i] ][ prop ] ) {\n\t\t\t\t\tout.push( a[ order[i] ][ prop ][ prop2 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tout.push( a[ order[i] ][ prop ] );\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _range = function ( len, start )\n\t{\n\t\tvar out = [];\n\t\tvar end;\n\t\n\t\tif ( start === undefined ) {\n\t\t\tstart = 0;\n\t\t\tend = len;\n\t\t}\n\t\telse {\n\t\t\tend = start;\n\t\t\tstart = len;\n\t\t}\n\t\n\t\tfor ( var i=start ; i<end ; i++ ) {\n\t\t\tout.push( i );\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _removeEmpty = function ( a )\n\t{\n\t\tvar out = [];\n\t\n\t\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\t\tif ( a[i] ) { // careful - will remove all falsy values!\n\t\t\t\tout.push( a[i] );\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _stripHtml = function ( d ) {\n\t\treturn d.replace( _re_html, '' );\n\t};\n\t\n\t\n\t/**\n\t * Determine if all values in the array are unique. This means we can short\n\t * cut the _unique method at the cost of a single loop. A sorted array is used\n\t * to easily check the values.\n\t *\n\t * @param  {array} src Source array\n\t * @return {boolean} true if all unique, false otherwise\n\t * @ignore\n\t */\n\tvar _areAllUnique = function ( src ) {\n\t\tif ( src.length < 2 ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tvar sorted = src.slice().sort();\n\t\tvar last = sorted[0];\n\t\n\t\tfor ( var i=1, ien=sorted.length ; i<ien ; i++ ) {\n\t\t\tif ( sorted[i] === last ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tlast = sorted[i];\n\t\t}\n\t\n\t\treturn true;\n\t};\n\t\n\t\n\t/**\n\t * Find the unique elements in a source array.\n\t *\n\t * @param  {array} src Source array\n\t * @return {array} Array of unique items\n\t * @ignore\n\t */\n\tvar _unique = function ( src )\n\t{\n\t\tif ( _areAllUnique( src ) ) {\n\t\t\treturn src.slice();\n\t\t}\n\t\n\t\t// A faster unique method is to use object keys to identify used values,\n\t\t// but this doesn't work with arrays or objects, which we must also\n\t\t// consider. See jsperf.com/compare-array-unique-versions/4 for more\n\t\t// information.\n\t\tvar\n\t\t\tout = [],\n\t\t\tval,\n\t\t\ti, ien=src.length,\n\t\t\tj, k=0;\n\t\n\t\tagain: for ( i=0 ; i<ien ; i++ ) {\n\t\t\tval = src[i];\n\t\n\t\t\tfor ( j=0 ; j<k ; j++ ) {\n\t\t\t\tif ( out[j] === val ) {\n\t\t\t\t\tcontinue again;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tout.push( val );\n\t\t\tk++;\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t// Surprisingly this is faster than [].concat.apply\n\t// https://jsperf.com/flatten-an-array-loop-vs-reduce/2\n\tvar _flatten = function (out, val) {\n\t\tif (Array.isArray(val)) {\n\t\t\tfor (var i=0 ; i<val.length ; i++) {\n\t\t\t\t_flatten(out, val[i]);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tout.push(val);\n\t\t}\n\t  \n\t\treturn out;\n\t}\n\t\n\tvar _includes = function (search, start) {\n\t\tif (start === undefined) {\n\t\t\tstart = 0;\n\t\t}\n\t\n\t\treturn this.indexOf(search, start) !== -1;\t\n\t};\n\t\n\t// Array.isArray polyfill.\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\n\tif (! Array.isArray) {\n\t    Array.isArray = function(arg) {\n\t        return Object.prototype.toString.call(arg) === '[object Array]';\n\t    };\n\t}\n\t\n\tif (! Array.prototype.includes) {\n\t\tArray.prototype.includes = _includes;\n\t}\n\t\n\t// .trim() polyfill\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim\n\tif (!String.prototype.trim) {\n\t  String.prototype.trim = function () {\n\t    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\t  };\n\t}\n\t\n\tif (! String.prototype.includes) {\n\t\tString.prototype.includes = _includes;\n\t}\n\t\n\t/**\n\t * DataTables utility methods\n\t * \n\t * This namespace provides helper methods that DataTables uses internally to\n\t * create a DataTable, but which are not exclusively used only for DataTables.\n\t * These methods can be used by extension authors to save the duplication of\n\t * code.\n\t *\n\t *  @namespace\n\t */\n\tDataTable.util = {\n\t\t/**\n\t\t * Throttle the calls to a function. Arguments and context are maintained\n\t\t * for the throttled function.\n\t\t *\n\t\t * @param {function} fn Function to be called\n\t\t * @param {integer} freq Call frequency in mS\n\t\t * @return {function} Wrapped function\n\t\t */\n\t\tthrottle: function ( fn, freq ) {\n\t\t\tvar\n\t\t\t\tfrequency = freq !== undefined ? freq : 200,\n\t\t\t\tlast,\n\t\t\t\ttimer;\n\t\n\t\t\treturn function () {\n\t\t\t\tvar\n\t\t\t\t\tthat = this,\n\t\t\t\t\tnow  = +new Date(),\n\t\t\t\t\targs = arguments;\n\t\n\t\t\t\tif ( last && now < last + frequency ) {\n\t\t\t\t\tclearTimeout( timer );\n\t\n\t\t\t\t\ttimer = setTimeout( function () {\n\t\t\t\t\t\tlast = undefined;\n\t\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t\t}, frequency );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlast = now;\n\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Escape a string such that it can be used in a regular expression\n\t\t *\n\t\t *  @param {string} val string to escape\n\t\t *  @returns {string} escaped string\n\t\t */\n\t\tescapeRegex: function ( val ) {\n\t\t\treturn val.replace( _re_escape_regex, '\\\\$1' );\n\t\t},\n\t\n\t\t/**\n\t\t * Create a function that will write to a nested object or array\n\t\t * @param {*} source JSON notation string\n\t\t * @returns Write function\n\t\t */\n\t\tset: function ( source ) {\n\t\t\tif ( $.isPlainObject( source ) ) {\n\t\t\t\t/* Unlike get, only the underscore (global) option is used for for\n\t\t\t\t * setting data since we don't know the type here. This is why an object\n\t\t\t\t * option is not documented for `mData` (which is read/write), but it is\n\t\t\t\t * for `mRender` which is read only.\n\t\t\t\t */\n\t\t\t\treturn DataTable.util.set( source._ );\n\t\t\t}\n\t\t\telse if ( source === null ) {\n\t\t\t\t// Nothing to do when the data source is null\n\t\t\t\treturn function () {};\n\t\t\t}\n\t\t\telse if ( typeof source === 'function' ) {\n\t\t\t\treturn function (data, val, meta) {\n\t\t\t\t\tsource( data, 'set', val, meta );\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if ( typeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\t\t\t  source.indexOf('[') !== -1 || source.indexOf('(') !== -1) )\n\t\t\t{\n\t\t\t\t// Like the get, we need to get data from a nested object\n\t\t\t\tvar setData = function (data, val, src) {\n\t\t\t\t\tvar a = _fnSplitObjNotation( src ), b;\n\t\t\t\t\tvar aLast = a[a.length-1];\n\t\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\n\t\t\n\t\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ ) {\n\t\t\t\t\t\t// Protect against prototype pollution\n\t\t\t\t\t\tif (a[i] === '__proto__' || a[i] === 'constructor') {\n\t\t\t\t\t\t\tthrow new Error('Cannot set prototype values');\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\t\n\t\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\t\t\t\t\tdata[ a[i] ] = [];\n\t\t\n\t\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\n\t\t\t\t\t\t\tb = a.slice();\n\t\t\t\t\t\t\tb.splice( 0, i+1 );\n\t\t\t\t\t\t\tinnerSrc = b.join('.');\n\t\t\n\t\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\n\t\t\t\t\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\t\to = {};\n\t\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\n\t\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\n\t\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\n\t\t\t\t\t\t\t\t// is to just save the value.\n\t\t\t\t\t\t\t\tdata[ a[i] ] = val;\n\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\n\t\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( funcNotation ) {\n\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\tdata = data[ a[i] ]( val );\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t// If the nested object doesn't currently exist - since we are\n\t\t\t\t\t\t// trying to set the value - create it\n\t\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined ) {\n\t\t\t\t\t\t\tdata[ a[i] ] = {};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\t// Last item in the input - i.e, the actual set\n\t\t\t\t\tif ( aLast.match(__reFn ) ) {\n\t\t\t\t\t\t// Function call\n\t\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ]( val );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\n\t\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\n\t\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\n\t\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\t\treturn setData( data, val, source );\n\t\t\t\t};\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Array or flat object mapping\n\t\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\t\tdata[source] = val;\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Create a function that will read nested objects from arrays, based on JSON notation\n\t\t * @param {*} source JSON notation string\n\t\t * @returns Value read\n\t\t */\n\t\tget: function ( source ) {\n\t\t\tif ( $.isPlainObject( source ) ) {\n\t\t\t\t// Build an object of get functions, and wrap them in a single call\n\t\t\t\tvar o = {};\n\t\t\t\t$.each( source, function (key, val) {\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\to[key] = DataTable.util.get( val );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\n\t\t\t\treturn function (data, type, row, meta) {\n\t\t\t\t\tvar t = o[type] || o._;\n\t\t\t\t\treturn t !== undefined ?\n\t\t\t\t\t\tt(data, type, row, meta) :\n\t\t\t\t\t\tdata;\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if ( source === null ) {\n\t\t\t\t// Give an empty string for rendering / sorting etc\n\t\t\t\treturn function (data) { // type, row and meta also passed, but not used\n\t\t\t\t\treturn data;\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if ( typeof source === 'function' ) {\n\t\t\t\treturn function (data, type, row, meta) {\n\t\t\t\t\treturn source( data, type, row, meta );\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if ( typeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\t\t\t  source.indexOf('[') !== -1 || source.indexOf('(') !== -1) )\n\t\t\t{\n\t\t\t\t/* If there is a . in the source string then the data source is in a\n\t\t\t\t * nested object so we loop over the data for each level to get the next\n\t\t\t\t * level down. On each loop we test for undefined, and if found immediately\n\t\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\n\t\t\t\t * be used if defined, rather than throwing an error\n\t\t\t\t */\n\t\t\t\tvar fetchData = function (data, type, src) {\n\t\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\n\t\t\n\t\t\t\t\tif ( src !== \"\" ) {\n\t\t\t\t\t\tvar a = _fnSplitObjNotation( src );\n\t\t\n\t\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ ) {\n\t\t\t\t\t\t\t// Check if we are dealing with special notation\n\t\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\t\n\t\t\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\t\t\t// Array notation\n\t\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\n\t\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\n\t\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\n\t\t\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tout = [];\n\t\t\n\t\t\t\t\t\t\t\t// Get the remainder of the nested object to get\n\t\t\t\t\t\t\t\ta.splice( 0, i+1 );\n\t\t\t\t\t\t\t\tinnerSrc = a.join('.');\n\t\t\n\t\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\n\t\t\t\t\t\t\t\tif ( Array.isArray( data ) ) {\n\t\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\n\t\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\n\t\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\n\t\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\n\t\t\n\t\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\n\t\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ( funcNotation ) {\n\t\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\t\tdata = data[ a[i] ]();\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\tif ( data === null || data[ a[i] ] === undefined ) {\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\treturn data;\n\t\t\t\t};\n\t\t\n\t\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\t\treturn fetchData( data, type, source );\n\t\t\t\t};\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Array or flat object mapping\n\t\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\t\treturn data[source];\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\t\n\t/**\n\t * Create a mapping object that allows camel case parameters to be looked up\n\t * for their Hungarian counterparts. The mapping is stored in a private\n\t * parameter called `_hungarianMap` which can be accessed on the source object.\n\t *  @param {object} o\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnHungarianMap ( o )\n\t{\n\t\tvar\n\t\t\thungarian = 'a aa ai ao as b fn i m o s ',\n\t\t\tmatch,\n\t\t\tnewKey,\n\t\t\tmap = {};\n\t\n\t\t$.each( o, function (key, val) {\n\t\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\n\t\n\t\t\tif ( match && hungarian.indexOf(match[1]+' ') !== -1 )\n\t\t\t{\n\t\t\t\tnewKey = key.replace( match[0], match[2].toLowerCase() );\n\t\t\t\tmap[ newKey ] = key;\n\t\n\t\t\t\tif ( match[1] === 'o' )\n\t\t\t\t{\n\t\t\t\t\t_fnHungarianMap( o[key] );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t\n\t\to._hungarianMap = map;\n\t}\n\t\n\t\n\t/**\n\t * Convert from camel case parameters to Hungarian, based on a Hungarian map\n\t * created by _fnHungarianMap.\n\t *  @param {object} src The model object which holds all parameters that can be\n\t *    mapped.\n\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t *  @param {boolean} force When set to `true`, properties which already have a\n\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t *    won't be.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCamelToHungarian ( src, user, force )\n\t{\n\t\tif ( ! src._hungarianMap ) {\n\t\t\t_fnHungarianMap( src );\n\t\t}\n\t\n\t\tvar hungarianKey;\n\t\n\t\t$.each( user, function (key, val) {\n\t\t\thungarianKey = src._hungarianMap[ key ];\n\t\n\t\t\tif ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\n\t\t\t{\n\t\t\t\t// For objects, we need to buzz down into the object to copy parameters\n\t\t\t\tif ( hungarianKey.charAt(0) === 'o' )\n\t\t\t\t{\n\t\t\t\t\t// Copy the camelCase options over to the hungarian\n\t\t\t\t\tif ( ! user[ hungarianKey ] ) {\n\t\t\t\t\t\tuser[ hungarianKey ] = {};\n\t\t\t\t\t}\n\t\t\t\t\t$.extend( true, user[hungarianKey], user[key] );\n\t\n\t\t\t\t\t_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tuser[hungarianKey] = user[ key ];\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Language compatibility - when certain options are given, and others aren't, we\n\t * need to duplicate the values over, in order to provide backwards compatibility\n\t * with older language files.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLanguageCompat( lang )\n\t{\n\t\t// Note the use of the Hungarian notation for the parameters in this method as\n\t\t// this is called after the mapping of camelCase to Hungarian\n\t\tvar defaults = DataTable.defaults.oLanguage;\n\t\n\t\t// Default mapping\n\t\tvar defaultDecimal = defaults.sDecimal;\n\t\tif ( defaultDecimal ) {\n\t\t\t_addNumericSort( defaultDecimal );\n\t\t}\n\t\n\t\tif ( lang ) {\n\t\t\tvar zeroRecords = lang.sZeroRecords;\n\t\n\t\t\t// Backwards compatibility - if there is no sEmptyTable given, then use the same as\n\t\t\t// sZeroRecords - assuming that is given.\n\t\t\tif ( ! lang.sEmptyTable && zeroRecords &&\n\t\t\t\tdefaults.sEmptyTable === \"No data available in table\" )\n\t\t\t{\n\t\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );\n\t\t\t}\n\t\n\t\t\t// Likewise with loading records\n\t\t\tif ( ! lang.sLoadingRecords && zeroRecords &&\n\t\t\t\tdefaults.sLoadingRecords === \"Loading...\" )\n\t\t\t{\n\t\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );\n\t\t\t}\n\t\n\t\t\t// Old parameter name of the thousands separator mapped onto the new\n\t\t\tif ( lang.sInfoThousands ) {\n\t\t\t\tlang.sThousands = lang.sInfoThousands;\n\t\t\t}\n\t\n\t\t\tvar decimal = lang.sDecimal;\n\t\t\tif ( decimal && defaultDecimal !== decimal ) {\n\t\t\t\t_addNumericSort( decimal );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Map one parameter onto another\n\t *  @param {object} o Object to map\n\t *  @param {*} knew The new parameter name\n\t *  @param {*} old The old parameter name\n\t */\n\tvar _fnCompatMap = function ( o, knew, old ) {\n\t\tif ( o[ knew ] !== undefined ) {\n\t\t\to[ old ] = o[ knew ];\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Provide backwards compatibility for the main DT options. Note that the new\n\t * options are mapped onto the old parameters, so this is an external interface\n\t * change only.\n\t *  @param {object} init Object to map\n\t */\n\tfunction _fnCompatOpts ( init )\n\t{\n\t\t_fnCompatMap( init, 'ordering',      'bSort' );\n\t\t_fnCompatMap( init, 'orderMulti',    'bSortMulti' );\n\t\t_fnCompatMap( init, 'orderClasses',  'bSortClasses' );\n\t\t_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\n\t\t_fnCompatMap( init, 'order',         'aaSorting' );\n\t\t_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\n\t\t_fnCompatMap( init, 'paging',        'bPaginate' );\n\t\t_fnCompatMap( init, 'pagingType',    'sPaginationType' );\n\t\t_fnCompatMap( init, 'pageLength',    'iDisplayLength' );\n\t\t_fnCompatMap( init, 'searching',     'bFilter' );\n\t\n\t\t// Boolean initialisation of x-scrolling\n\t\tif ( typeof init.sScrollX === 'boolean' ) {\n\t\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\n\t\t}\n\t\tif ( typeof init.scrollX === 'boolean' ) {\n\t\t\tinit.scrollX = init.scrollX ? '100%' : '';\n\t\t}\n\t\n\t\t// Column search objects are in an array, so it needs to be converted\n\t\t// element by element\n\t\tvar searchCols = init.aoSearchCols;\n\t\n\t\tif ( searchCols ) {\n\t\t\tfor ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\n\t\t\t\tif ( searchCols[i] ) {\n\t\t\t\t\t_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Provide backwards compatibility for column options. Note that the new options\n\t * are mapped onto the old parameters, so this is an external interface change\n\t * only.\n\t *  @param {object} init Object to map\n\t */\n\tfunction _fnCompatCols ( init )\n\t{\n\t\t_fnCompatMap( init, 'orderable',     'bSortable' );\n\t\t_fnCompatMap( init, 'orderData',     'aDataSort' );\n\t\t_fnCompatMap( init, 'orderSequence', 'asSorting' );\n\t\t_fnCompatMap( init, 'orderDataType', 'sortDataType' );\n\t\n\t\t// orderData can be given as an integer\n\t\tvar dataSort = init.aDataSort;\n\t\tif ( typeof dataSort === 'number' && ! Array.isArray( dataSort ) ) {\n\t\t\tinit.aDataSort = [ dataSort ];\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Browser feature detection for capabilities, quirks\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBrowserDetect( settings )\n\t{\n\t\t// We don't need to do this every time DataTables is constructed, the values\n\t\t// calculated are specific to the browser and OS configuration which we\n\t\t// don't expect to change between initialisations\n\t\tif ( ! DataTable.__browser ) {\n\t\t\tvar browser = {};\n\t\t\tDataTable.__browser = browser;\n\t\n\t\t\t// Scrolling feature / quirks detection\n\t\t\tvar n = $('<div/>')\n\t\t\t\t.css( {\n\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: $(window).scrollLeft()*-1, // allow for scrolling\n\t\t\t\t\theight: 1,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\t\tleft: 1,\n\t\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\theight: 10\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t.appendTo( 'body' );\n\t\n\t\t\tvar outer = n.children();\n\t\t\tvar inner = outer.children();\n\t\n\t\t\t// Numbers below, in order, are:\n\t\t\t// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\n\t\t\t//\n\t\t\t// IE6 XP:                           100 100 100  83\n\t\t\t// IE7 Vista:                        100 100 100  83\n\t\t\t// IE 8+ Windows:                     83  83 100  83\n\t\t\t// Evergreen Windows:                 83  83 100  83\n\t\t\t// Evergreen Mac with scrollbars:     85  85 100  85\n\t\t\t// Evergreen Mac without scrollbars: 100 100 100 100\n\t\n\t\t\t// Get scrollbar width\n\t\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\t\n\t\t\t// IE6/7 will oversize a width 100% element inside a scrolling element, to\n\t\t\t// include the width of the scrollbar, while other browsers ensure the inner\n\t\t\t// element is contained without forcing scrolling\n\t\t\tbrowser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;\n\t\n\t\t\t// In rtl text layout, some browsers (most, but not all) will place the\n\t\t\t// scrollbar on the left, rather than the right.\n\t\t\tbrowser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\n\t\n\t\t\t// IE8- don't provide height and width for getBoundingClientRect\n\t\t\tbrowser.bBounding = n[0].getBoundingClientRect().width ? true : false;\n\t\n\t\t\tn.remove();\n\t\t}\n\t\n\t\t$.extend( settings.oBrowser, DataTable.__browser );\n\t\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n\t}\n\t\n\t\n\t/**\n\t * Array.prototype reduce[Right] method, used for browsers which don't support\n\t * JS 1.6. Done this way to reduce code size, since we iterate either way\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReduce ( that, fn, init, start, end, inc )\n\t{\n\t\tvar\n\t\t\ti = start,\n\t\t\tvalue,\n\t\t\tisSet = false;\n\t\n\t\tif ( init !== undefined ) {\n\t\t\tvalue = init;\n\t\t\tisSet = true;\n\t\t}\n\t\n\t\twhile ( i !== end ) {\n\t\t\tif ( ! that.hasOwnProperty(i) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\tvalue = isSet ?\n\t\t\t\tfn( value, that[i], i, that ) :\n\t\t\t\tthat[i];\n\t\n\t\t\tisSet = true;\n\t\t\ti += inc;\n\t\t}\n\t\n\t\treturn value;\n\t}\n\t\n\t/**\n\t * Add a column to the list used for the table with default values\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nTh The th element for this column\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddColumn( oSettings, nTh )\n\t{\n\t\t// Add column to aoColumns array\n\t\tvar oDefaults = DataTable.defaults.column;\n\t\tvar iCol = oSettings.aoColumns.length;\n\t\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\n\t\t\t\"nTh\": nTh ? nTh : document.createElement('th'),\n\t\t\t\"sTitle\":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',\n\t\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n\t\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n\t\t\tidx: iCol\n\t\t} );\n\t\toSettings.aoColumns.push( oCol );\n\t\n\t\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\n\t\t// passed into extend can be undefined. This allows the user to give a default\n\t\t// with only some of the parameters defined, and also not give a default\n\t\tvar searchCols = oSettings.aoPreSearchCols;\n\t\tsearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\n\t\n\t\t// Use the default column options function to initialise classes etc\n\t\t_fnColumnOptions( oSettings, iCol, $(nTh).data() );\n\t}\n\t\n\t\n\t/**\n\t * Apply options for a column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iCol column index to consider\n\t *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnOptions( oSettings, iCol, oOptions )\n\t{\n\t\tvar oCol = oSettings.aoColumns[ iCol ];\n\t\tvar oClasses = oSettings.oClasses;\n\t\tvar th = $(oCol.nTh);\n\t\n\t\t// Try to get width information from the DOM. We can't get it from CSS\n\t\t// as we'd need to parse the CSS stylesheet. `width` option can override\n\t\tif ( ! oCol.sWidthOrig ) {\n\t\t\t// Width attribute\n\t\t\toCol.sWidthOrig = th.attr('width') || null;\n\t\n\t\t\t// Style attribute\n\t\t\tvar t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\n\t\t\tif ( t ) {\n\t\t\t\toCol.sWidthOrig = t[1];\n\t\t\t}\n\t\t}\n\t\n\t\t/* User specified column options */\n\t\tif ( oOptions !== undefined && oOptions !== null )\n\t\t{\n\t\t\t// Backwards compatibility\n\t\t\t_fnCompatCols( oOptions );\n\t\n\t\t\t// Map camel case parameters to their Hungarian counterparts\n\t\t\t_fnCamelToHungarian( DataTable.defaults.column, oOptions, true );\n\t\n\t\t\t/* Backwards compatibility for mDataProp */\n\t\t\tif ( oOptions.mDataProp !== undefined && !oOptions.mData )\n\t\t\t{\n\t\t\t\toOptions.mData = oOptions.mDataProp;\n\t\t\t}\n\t\n\t\t\tif ( oOptions.sType )\n\t\t\t{\n\t\t\t\toCol._sManualType = oOptions.sType;\n\t\t\t}\n\t\n\t\t\t// `class` is a reserved word in Javascript, so we need to provide\n\t\t\t// the ability to use a valid name for the camel case input\n\t\t\tif ( oOptions.className && ! oOptions.sClass )\n\t\t\t{\n\t\t\t\toOptions.sClass = oOptions.className;\n\t\t\t}\n\t\t\tif ( oOptions.sClass ) {\n\t\t\t\tth.addClass( oOptions.sClass );\n\t\t\t}\n\t\n\t\t\tvar origClass = oCol.sClass;\n\t\n\t\t\t$.extend( oCol, oOptions );\n\t\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\n\t\n\t\t\t// Merge class from previously defined classes with this one, rather than just\n\t\t\t// overwriting it in the extend above\n\t\t\tif (origClass !== oCol.sClass) {\n\t\t\t\toCol.sClass = origClass + ' ' + oCol.sClass;\n\t\t\t}\n\t\n\t\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\n\t\t\t * priority if defined\n\t\t\t */\n\t\t\tif ( oOptions.iDataSort !== undefined )\n\t\t\t{\n\t\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\n\t\t\t}\n\t\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\n\t\t}\n\t\n\t\t/* Cache the data get and set functions for speed */\n\t\tvar mDataSrc = oCol.mData;\n\t\tvar mData = _fnGetObjectDataFn( mDataSrc );\n\t\tvar mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\n\t\n\t\tvar attrTest = function( src ) {\n\t\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\n\t\t};\n\t\toCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\n\t\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n\t\t);\n\t\toCol._setter = null;\n\t\n\t\toCol.fnGetData = function (rowData, type, meta) {\n\t\t\tvar innerData = mData( rowData, type, undefined, meta );\n\t\n\t\t\treturn mRender && type ?\n\t\t\t\tmRender( innerData, type, rowData, meta ) :\n\t\t\t\tinnerData;\n\t\t};\n\t\toCol.fnSetData = function ( rowData, val, meta ) {\n\t\t\treturn _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\n\t\t};\n\t\n\t\t// Indicate if DataTables should read DOM data as an object or array\n\t\t// Used in _fnGetRowElements\n\t\tif ( typeof mDataSrc !== 'number' ) {\n\t\t\toSettings._rowReadObject = true;\n\t\t}\n\t\n\t\t/* Feature sorting overrides column specific when off */\n\t\tif ( !oSettings.oFeatures.bSort )\n\t\t{\n\t\t\toCol.bSortable = false;\n\t\t\tth.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called\n\t\t}\n\t\n\t\t/* Check that the class assignment is correct for sorting */\n\t\tvar bAsc = $.inArray('asc', oCol.asSorting) !== -1;\n\t\tvar bDesc = $.inArray('desc', oCol.asSorting) !== -1;\n\t\tif ( !oCol.bSortable || (!bAsc && !bDesc) )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableNone;\n\t\t\toCol.sSortingClassJUI = \"\";\n\t\t}\n\t\telse if ( bAsc && !bDesc )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableAsc;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\n\t\t}\n\t\telse if ( !bAsc && bDesc )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableDesc;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\n\t\t}\n\t\telse\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortable;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUI;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Adjust the table column widths for new data. Note: you would probably want to\n\t * do a redraw after calling this function!\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAdjustColumnSizing ( settings )\n\t{\n\t\t/* Not interested in doing column width calculation if auto-width is disabled */\n\t\tif ( settings.oFeatures.bAutoWidth !== false )\n\t\t{\n\t\t\tvar columns = settings.aoColumns;\n\t\n\t\t\t_fnCalculateColumnWidths( settings );\n\t\t\tfor ( var i=0 , iLen=columns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tcolumns[i].nTh.style.width = columns[i].sWidth;\n\t\t\t}\n\t\t}\n\t\n\t\tvar scroll = settings.oScroll;\n\t\tif ( scroll.sY !== '' || scroll.sX !== '')\n\t\t{\n\t\t\t_fnScrollDraw( settings );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'column-sizing', [settings] );\n\t}\n\t\n\t\n\t/**\n\t * Convert the index of a visible column to the index in the data array (take account\n\t * of hidden columns)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iMatch Visible column index to lookup\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisibleToColumnIndex( oSettings, iMatch )\n\t{\n\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\n\t\treturn typeof aiVis[iMatch] === 'number' ?\n\t\t\taiVis[iMatch] :\n\t\t\tnull;\n\t}\n\t\n\t\n\t/**\n\t * Convert the index of an index in the data array and convert it to the visible\n\t *   column index (take account of hidden columns)\n\t *  @param {int} iMatch Column index to lookup\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnIndexToVisible( oSettings, iMatch )\n\t{\n\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\tvar iPos = $.inArray( iMatch, aiVis );\n\t\n\t\treturn iPos !== -1 ? iPos : null;\n\t}\n\t\n\t\n\t/**\n\t * Get the number of visible columns\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the number of visible columns\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisbleColumns( oSettings )\n\t{\n\t\tvar vis = 0;\n\t\n\t\t// No reduce in IE8, use a loop for now\n\t\t$.each( oSettings.aoColumns, function ( i, col ) {\n\t\t\tif ( col.bVisible && $(col.nTh).css('display') !== 'none' ) {\n\t\t\t\tvis++;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn vis;\n\t}\n\t\n\t\n\t/**\n\t * Get an array of column indexes that match a given property\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sParam Parameter in aoColumns to look for - typically\n\t *    bVisible or bSearchable\n\t *  @returns {array} Array of indexes with matched properties\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetColumns( oSettings, sParam )\n\t{\n\t\tvar a = [];\n\t\n\t\t$.map( oSettings.aoColumns, function(val, i) {\n\t\t\tif ( val[sParam] ) {\n\t\t\t\ta.push( i );\n\t\t\t}\n\t\t} );\n\t\n\t\treturn a;\n\t}\n\t\n\t\n\t/**\n\t * Calculate the 'type' of a column\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnTypes ( settings )\n\t{\n\t\tvar columns = settings.aoColumns;\n\t\tvar data = settings.aoData;\n\t\tvar types = DataTable.ext.type.detect;\n\t\tvar i, ien, j, jen, k, ken;\n\t\tvar col, cell, detectedType, cache;\n\t\n\t\t// For each column, spin over the \n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tcol = columns[i];\n\t\t\tcache = [];\n\t\n\t\t\tif ( ! col.sType && col._sManualType ) {\n\t\t\t\tcol.sType = col._sManualType;\n\t\t\t}\n\t\t\telse if ( ! col.sType ) {\n\t\t\t\tfor ( j=0, jen=types.length ; j<jen ; j++ ) {\n\t\t\t\t\tfor ( k=0, ken=data.length ; k<ken ; k++ ) {\n\t\t\t\t\t\t// Use a cache array so we only need to get the type data\n\t\t\t\t\t\t// from the formatter once (when using multiple detectors)\n\t\t\t\t\t\tif ( cache[k] === undefined ) {\n\t\t\t\t\t\t\tcache[k] = _fnGetCellData( settings, k, i, 'type' );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tdetectedType = types[j]( cache[k], settings );\n\t\n\t\t\t\t\t\t// If null, then this type can't apply to this column, so\n\t\t\t\t\t\t// rather than testing all cells, break out. There is an\n\t\t\t\t\t\t// exception for the last type which is `html`. We need to\n\t\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\n\t\t\t\t\t\t// types\n\t\t\t\t\t\tif ( ! detectedType && j !== types.length-1 ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Only a single match is needed for html type since it is\n\t\t\t\t\t\t// bottom of the pile and very similar to string - but it\n\t\t\t\t\t\t// must not be empty\n\t\t\t\t\t\tif ( detectedType === 'html' && ! _empty(cache[k]) ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Type is valid for all data points in the column - use this\n\t\t\t\t\t// type\n\t\t\t\t\tif ( detectedType ) {\n\t\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Fall back - if no type was detected, always use string\n\t\t\t\tif ( ! col.sType ) {\n\t\t\t\t\tcol.sType = 'string';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Take the column definitions and static columns arrays and calculate how\n\t * they relate to column indexes. The callback function will then apply the\n\t * definition found for a column to a suitable configuration object.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n\t *  @param {array} aoCols The aoColumns array that defines columns individually\n\t *  @param {function} fn Callback function - takes two parameters, the calculated\n\t *    column index and the definition for that column.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )\n\t{\n\t\tvar i, iLen, j, jLen, k, kLen, def;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\t// Column definitions with aTargets\n\t\tif ( aoColDefs )\n\t\t{\n\t\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\n\t\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\n\t\t\t{\n\t\t\t\tdef = aoColDefs[i];\n\t\n\t\t\t\t/* Each definition can target multiple columns, as it is an array */\n\t\t\t\tvar aTargets = def.target !== undefined\n\t\t\t\t\t? def.target\n\t\t\t\t\t: def.targets !== undefined\n\t\t\t\t\t\t? def.targets\n\t\t\t\t\t\t: def.aTargets;\n\t\n\t\t\t\tif ( ! Array.isArray( aTargets ) )\n\t\t\t\t{\n\t\t\t\t\taTargets = [ aTargets ];\n\t\t\t\t}\n\t\n\t\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\n\t\t\t\t{\n\t\t\t\t\tif ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Add columns that we don't yet know about */\n\t\t\t\t\t\twhile( columns.length <= aTargets[j] )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_fnAddColumn( oSettings );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t/* Integer, basic index */\n\t\t\t\t\t\tfn( aTargets[j], def );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Negative integer, right to left column counting */\n\t\t\t\t\t\tfn( columns.length+aTargets[j], def );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( typeof aTargets[j] === 'string' )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Class name matching on TH element */\n\t\t\t\t\t\tfor ( k=0, kLen=columns.length ; k<kLen ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ( aTargets[j] == \"_all\" ||\n\t\t\t\t\t\t\t     $(columns[k].nTh).hasClass( aTargets[j] ) )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Statically defined columns array\n\t\tif ( aoCols )\n\t\t{\n\t\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tfn( i, aoCols[i] );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Add a data array to the table, creating DOM node etc. This is the parallel to\n\t * _fnGatherData, but for adding rows from a Javascript source, rather than a\n\t * DOM source.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aData data array to be added\n\t *  @param {node} [nTr] TR element to add to the table - optional. If not given,\n\t *    DataTables will create a row automatically\n\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t *    if nTr is.\n\t *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddData ( oSettings, aDataIn, nTr, anTds )\n\t{\n\t\t/* Create the object for storing information about this new row */\n\t\tvar iRow = oSettings.aoData.length;\n\t\tvar oData = $.extend( true, {}, DataTable.models.oRow, {\n\t\t\tsrc: nTr ? 'dom' : 'data',\n\t\t\tidx: iRow\n\t\t} );\n\t\n\t\toData._aData = aDataIn;\n\t\toSettings.aoData.push( oData );\n\t\n\t\t/* Create the cells */\n\t\tvar nTd, sThisType;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\t// Invalidate the column types as the new data needs to be revalidated\n\t\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tcolumns[i].sType = null;\n\t\t}\n\t\n\t\t/* Add to the display array */\n\t\toSettings.aiDisplayMaster.push( iRow );\n\t\n\t\tvar id = oSettings.rowIdFn( aDataIn );\n\t\tif ( id !== undefined ) {\n\t\t\toSettings.aIds[ id ] = oData;\n\t\t}\n\t\n\t\t/* Create the DOM information, or register it if already present */\n\t\tif ( nTr || ! oSettings.oFeatures.bDeferRender )\n\t\t{\n\t\t\t_fnCreateTr( oSettings, iRow, nTr, anTds );\n\t\t}\n\t\n\t\treturn iRow;\n\t}\n\t\n\t\n\t/**\n\t * Add one or more TR elements to the table. Generally we'd expect to\n\t * use this for reading data from a DOM sourced table, but it could be\n\t * used for an TR element. Note that if a TR is given, it is used (i.e.\n\t * it is not cloned).\n\t *  @param {object} settings dataTables settings object\n\t *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n\t *  @returns {array} Array of indexes for the added rows\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddTr( settings, trs )\n\t{\n\t\tvar row;\n\t\n\t\t// Allow an individual node to be passed in\n\t\tif ( ! (trs instanceof $) ) {\n\t\t\ttrs = $(trs);\n\t\t}\n\t\n\t\treturn trs.map( function (i, el) {\n\t\t\trow = _fnGetRowElements( settings, el );\n\t\t\treturn _fnAddData( settings, row.data, el, row.cells );\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Take a TR element and convert it to an index in aoData\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} n the TR element to find\n\t *  @returns {int} index if the node is found, null if not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnNodeToDataIndex( oSettings, n )\n\t{\n\t\treturn (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;\n\t}\n\t\n\t\n\t/**\n\t * Take a TD element and convert it into a column data index (not the visible index)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow The row number the TD/TH can be found in\n\t *  @param {node} n The TD/TH element to find\n\t *  @returns {int} index if the node is found, -1 if not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnNodeToColumnIndex( oSettings, iRow, n )\n\t{\n\t\treturn $.inArray( n, oSettings.aoData[ iRow ].anCells );\n\t}\n\t\n\t\n\t/**\n\t * Get the data for a given cell from the internal cache, taking into account data mapping\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} rowIdx aoData row id\n\t *  @param {int} colIdx Column index\n\t *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\n\t *  @returns {*} Cell data\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetCellData( settings, rowIdx, colIdx, type )\n\t{\n\t\tif (type === 'search') {\n\t\t\ttype = 'filter';\n\t\t}\n\t\telse if (type === 'order') {\n\t\t\ttype = 'sort';\n\t\t}\n\t\n\t\tvar draw           = settings.iDraw;\n\t\tvar col            = settings.aoColumns[colIdx];\n\t\tvar rowData        = settings.aoData[rowIdx]._aData;\n\t\tvar defaultContent = col.sDefaultContent;\n\t\tvar cellData       = col.fnGetData( rowData, type, {\n\t\t\tsettings: settings,\n\t\t\trow:      rowIdx,\n\t\t\tcol:      colIdx\n\t\t} );\n\t\n\t\tif ( cellData === undefined ) {\n\t\t\tif ( settings.iDrawError != draw && defaultContent === null ) {\n\t\t\t\t_fnLog( settings, 0, \"Requested unknown parameter \"+\n\t\t\t\t\t(typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\n\t\t\t\t\t\" for row \"+rowIdx+\", column \"+colIdx, 4 );\n\t\t\t\tsettings.iDrawError = draw;\n\t\t\t}\n\t\t\treturn defaultContent;\n\t\t}\n\t\n\t\t// When the data source is null and a specific data type is requested (i.e.\n\t\t// not the original data), we can use default column data\n\t\tif ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\n\t\t\tcellData = defaultContent;\n\t\t}\n\t\telse if ( typeof cellData === 'function' ) {\n\t\t\t// If the data source is a function, then we run it and use the return,\n\t\t\t// executing in the scope of the data object (for instances)\n\t\t\treturn cellData.call( rowData );\n\t\t}\n\t\n\t\tif ( cellData === null && type === 'display' ) {\n\t\t\treturn '';\n\t\t}\n\t\n\t\tif ( type === 'filter' ) {\n\t\t\tvar fomatters = DataTable.ext.type.search;\n\t\n\t\t\tif ( fomatters[ col.sType ] ) {\n\t\t\t\tcellData = fomatters[ col.sType ]( cellData );\n\t\t\t}\n\t\t}\n\t\n\t\treturn cellData;\n\t}\n\t\n\t\n\t/**\n\t * Set the value for a specific cell, into the internal data cache\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} rowIdx aoData row id\n\t *  @param {int} colIdx Column index\n\t *  @param {*} val Value to set\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSetCellData( settings, rowIdx, colIdx, val )\n\t{\n\t\tvar col     = settings.aoColumns[colIdx];\n\t\tvar rowData = settings.aoData[rowIdx]._aData;\n\t\n\t\tcol.fnSetData( rowData, val, {\n\t\t\tsettings: settings,\n\t\t\trow:      rowIdx,\n\t\t\tcol:      colIdx\n\t\t}  );\n\t}\n\t\n\t\n\t// Private variable that is used to match action syntax in the data property object\n\tvar __reArray = /\\[.*?\\]$/;\n\tvar __reFn = /\\(\\)$/;\n\t\n\t/**\n\t * Split string on periods, taking into account escaped periods\n\t * @param  {string} str String to split\n\t * @return {array} Split string\n\t */\n\tfunction _fnSplitObjNotation( str )\n\t{\n\t\treturn $.map( str.match(/(\\\\.|[^\\.])+/g) || [''], function ( s ) {\n\t\t\treturn s.replace(/\\\\\\./g, '.');\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Return a function that can be used to get data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data get function\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnGetObjectDataFn = DataTable.util.get;\n\t\n\t\n\t/**\n\t * Return a function that can be used to set data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data set function\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnSetObjectDataFn = DataTable.util.set;\n\t\n\t\n\t/**\n\t * Return an array with the full table data\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns array {array} aData Master data array\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetDataMaster ( settings )\n\t{\n\t\treturn _pluck( settings.aoData, '_aData' );\n\t}\n\t\n\t\n\t/**\n\t * Nuke the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnClearTable( settings )\n\t{\n\t\tsettings.aoData.length = 0;\n\t\tsettings.aiDisplayMaster.length = 0;\n\t\tsettings.aiDisplay.length = 0;\n\t\tsettings.aIds = {};\n\t}\n\t\n\t\n\t /**\n\t * Take an array of integers (index array) and remove a target integer (value - not\n\t * the key!)\n\t *  @param {array} a Index array to target\n\t *  @param {int} iTarget value to find\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDeleteIndex( a, iTarget, splice )\n\t{\n\t\tvar iTargetIndex = -1;\n\t\n\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tif ( a[i] == iTarget )\n\t\t\t{\n\t\t\t\tiTargetIndex = i;\n\t\t\t}\n\t\t\telse if ( a[i] > iTarget )\n\t\t\t{\n\t\t\t\ta[i]--;\n\t\t\t}\n\t\t}\n\t\n\t\tif ( iTargetIndex != -1 && splice === undefined )\n\t\t{\n\t\t\ta.splice( iTargetIndex, 1 );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Mark cached data as invalid such that a re-read of the data will occur when\n\t * the cached data is next requested. Also update from the data source object.\n\t *\n\t * @param {object} settings DataTables settings object\n\t * @param {int}    rowIdx   Row index to invalidate\n\t * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n\t *     or 'data'\n\t * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n\t *     row will be invalidated\n\t * @memberof DataTable#oApi\n\t *\n\t * @todo For the modularisation of v1.11 this will need to become a callback, so\n\t *   the sort and filter methods can subscribe to it. That will required\n\t *   initialisation options for sorting, which is why it is not already baked in\n\t */\n\tfunction _fnInvalidate( settings, rowIdx, src, colIdx )\n\t{\n\t\tvar row = settings.aoData[ rowIdx ];\n\t\tvar i, ien;\n\t\tvar cellWrite = function ( cell, col ) {\n\t\t\t// This is very frustrating, but in IE if you just write directly\n\t\t\t// to innerHTML, and elements that are overwritten are GC'ed,\n\t\t\t// even if there is a reference to them elsewhere\n\t\t\twhile ( cell.childNodes.length ) {\n\t\t\t\tcell.removeChild( cell.firstChild );\n\t\t\t}\n\t\n\t\t\tcell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );\n\t\t};\n\t\n\t\t// Are we reading last data from DOM or the data object?\n\t\tif ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\n\t\t\t// Read the data from the DOM\n\t\t\trow._aData = _fnGetRowElements(\n\t\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\n\t\t\t\t)\n\t\t\t\t.data;\n\t\t}\n\t\telse {\n\t\t\t// Reading from data object, update the DOM\n\t\t\tvar cells = row.anCells;\n\t\n\t\t\tif ( cells ) {\n\t\t\t\tif ( colIdx !== undefined ) {\n\t\t\t\t\tcellWrite( cells[colIdx], colIdx );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\t\t\tcellWrite( cells[i], i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// For both row and cell invalidation, the cached data for sorting and\n\t\t// filtering is nulled out\n\t\trow._aSortData = null;\n\t\trow._aFilterData = null;\n\t\n\t\t// Invalidate the type for a specific column (if given) or all columns since\n\t\t// the data might have changed\n\t\tvar cols = settings.aoColumns;\n\t\tif ( colIdx !== undefined ) {\n\t\t\tcols[ colIdx ].sType = null;\n\t\t}\n\t\telse {\n\t\t\tfor ( i=0, ien=cols.length ; i<ien ; i++ ) {\n\t\t\t\tcols[i].sType = null;\n\t\t\t}\n\t\n\t\t\t// Update DataTables special `DT_*` attributes for the row\n\t\t\t_fnRowAttributes( settings, row );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Build a data source object from an HTML row, reading the contents of the\n\t * cells that are in the row.\n\t *\n\t * @param {object} settings DataTables settings object\n\t * @param {node|object} TR element from which to read data or existing row\n\t *   object from which to re-read the data from the cells\n\t * @param {int} [colIdx] Optional column index\n\t * @param {array|object} [d] Data source object. If `colIdx` is given then this\n\t *   parameter should also be given and will be used to write the data into.\n\t *   Only the column in question will be written\n\t * @returns {object} Object with two parameters: `data` the data read, in\n\t *   document order, and `cells` and array of nodes (they can be useful to the\n\t *   caller, so rather than needing a second traversal to get them, just return\n\t *   them from here).\n\t * @memberof DataTable#oApi\n\t */\n\tfunction _fnGetRowElements( settings, row, colIdx, d )\n\t{\n\t\tvar\n\t\t\ttds = [],\n\t\t\ttd = row.firstChild,\n\t\t\tname, col, o, i=0, contents,\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tobjectRead = settings._rowReadObject;\n\t\n\t\t// Allow the data object to be passed in, or construct\n\t\td = d !== undefined ?\n\t\t\td :\n\t\t\tobjectRead ?\n\t\t\t\t{} :\n\t\t\t\t[];\n\t\n\t\tvar attr = function ( str, td  ) {\n\t\t\tif ( typeof str === 'string' ) {\n\t\t\t\tvar idx = str.indexOf('@');\n\t\n\t\t\t\tif ( idx !== -1 ) {\n\t\t\t\t\tvar attr = str.substring( idx+1 );\n\t\t\t\t\tvar setter = _fnSetObjectDataFn( str );\n\t\t\t\t\tsetter( d, td.getAttribute( attr ) );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t// Read data from a cell and store into the data object\n\t\tvar cellProcess = function ( cell ) {\n\t\t\tif ( colIdx === undefined || colIdx === i ) {\n\t\t\t\tcol = columns[i];\n\t\t\t\tcontents = (cell.innerHTML).trim();\n\t\n\t\t\t\tif ( col && col._bAttrSrc ) {\n\t\t\t\t\tvar setter = _fnSetObjectDataFn( col.mData._ );\n\t\t\t\t\tsetter( d, contents );\n\t\n\t\t\t\t\tattr( col.mData.sort, cell );\n\t\t\t\t\tattr( col.mData.type, cell );\n\t\t\t\t\tattr( col.mData.filter, cell );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Depending on the `data` option for the columns the data can\n\t\t\t\t\t// be read to either an object or an array.\n\t\t\t\t\tif ( objectRead ) {\n\t\t\t\t\t\tif ( ! col._setter ) {\n\t\t\t\t\t\t\t// Cache the setter function\n\t\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn( col.mData );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcol._setter( d, contents );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\td[i] = contents;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\ti++;\n\t\t};\n\t\n\t\tif ( td ) {\n\t\t\t// `tr` element was passed in\n\t\t\twhile ( td ) {\n\t\t\t\tname = td.nodeName.toUpperCase();\n\t\n\t\t\t\tif ( name == \"TD\" || name == \"TH\" ) {\n\t\t\t\t\tcellProcess( td );\n\t\t\t\t\ttds.push( td );\n\t\t\t\t}\n\t\n\t\t\t\ttd = td.nextSibling;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Existing row object passed in\n\t\t\ttds = row.anCells;\n\t\n\t\t\tfor ( var j=0, jen=tds.length ; j<jen ; j++ ) {\n\t\t\t\tcellProcess( tds[j] );\n\t\t\t}\n\t\t}\n\t\n\t\t// Read the ID from the DOM if present\n\t\tvar rowNode = row.firstChild ? row : row.nTr;\n\t\n\t\tif ( rowNode ) {\n\t\t\tvar id = rowNode.getAttribute( 'id' );\n\t\n\t\t\tif ( id ) {\n\t\t\t\t_fnSetObjectDataFn( settings.rowId )( d, id );\n\t\t\t}\n\t\t}\n\t\n\t\treturn {\n\t\t\tdata: d,\n\t\t\tcells: tds\n\t\t};\n\t}\n\t/**\n\t * Create a new TR element (and it's TD children) for a row\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow Row to consider\n\t *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n\t *    DataTables will create a row automatically\n\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t *    if nTr is.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\n\t{\n\t\tvar\n\t\t\trow = oSettings.aoData[iRow],\n\t\t\trowData = row._aData,\n\t\t\tcells = [],\n\t\t\tnTr, nTd, oCol,\n\t\t\ti, iLen, create;\n\t\n\t\tif ( row.nTr === null )\n\t\t{\n\t\t\tnTr = nTrIn || document.createElement('tr');\n\t\n\t\t\trow.nTr = nTr;\n\t\t\trow.anCells = cells;\n\t\n\t\t\t/* Use a private property on the node to allow reserve mapping from the node\n\t\t\t * to the aoData array for fast look up\n\t\t\t */\n\t\t\tnTr._DT_RowIndex = iRow;\n\t\n\t\t\t/* Special parameters can be given by the data source to be used on the row */\n\t\t\t_fnRowAttributes( oSettings, row );\n\t\n\t\t\t/* Process each column */\n\t\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\toCol = oSettings.aoColumns[i];\n\t\t\t\tcreate = nTrIn ? false : true;\n\t\n\t\t\t\tnTd = create ? document.createElement( oCol.sCellType ) : anTds[i];\n\t\t\t\tnTd._DT_CellIndex = {\n\t\t\t\t\trow: iRow,\n\t\t\t\t\tcolumn: i\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tcells.push( nTd );\n\t\n\t\t\t\t// Need to create the HTML if new, or if a rendering function is defined\n\t\t\t\tif ( create || ((oCol.mRender || oCol.mData !== i) &&\n\t\t\t\t\t (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\n\t\t\t\t)) {\n\t\t\t\t\tnTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );\n\t\t\t\t}\n\t\n\t\t\t\t/* Add user defined class */\n\t\t\t\tif ( oCol.sClass )\n\t\t\t\t{\n\t\t\t\t\tnTd.className += ' '+oCol.sClass;\n\t\t\t\t}\n\t\n\t\t\t\t// Visibility - add or remove as required\n\t\t\t\tif ( oCol.bVisible && ! nTrIn )\n\t\t\t\t{\n\t\t\t\t\tnTr.appendChild( nTd );\n\t\t\t\t}\n\t\t\t\telse if ( ! oCol.bVisible && nTrIn )\n\t\t\t\t{\n\t\t\t\t\tnTd.parentNode.removeChild( nTd );\n\t\t\t\t}\n\t\n\t\t\t\tif ( oCol.fnCreatedCell )\n\t\t\t\t{\n\t\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\n\t\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow, cells] );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Add attributes to a row based on the special `DT_*` parameters in a data\n\t * source object.\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} DataTables row object for the row to be modified\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnRowAttributes( settings, row )\n\t{\n\t\tvar tr = row.nTr;\n\t\tvar data = row._aData;\n\t\n\t\tif ( tr ) {\n\t\t\tvar id = settings.rowIdFn( data );\n\t\n\t\t\tif ( id ) {\n\t\t\t\ttr.id = id;\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowClass ) {\n\t\t\t\t// Remove any classes added by DT_RowClass before\n\t\t\t\tvar a = data.DT_RowClass.split(' ');\n\t\t\t\trow.__rowc = row.__rowc ?\n\t\t\t\t\t_unique( row.__rowc.concat( a ) ) :\n\t\t\t\t\ta;\n\t\n\t\t\t\t$(tr)\n\t\t\t\t\t.removeClass( row.__rowc.join(' ') )\n\t\t\t\t\t.addClass( data.DT_RowClass );\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowAttr ) {\n\t\t\t\t$(tr).attr( data.DT_RowAttr );\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowData ) {\n\t\t\t\t$(tr).data( data.DT_RowData );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Create the HTML header for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBuildHead( oSettings )\n\t{\n\t\tvar i, ien, cell, row, column;\n\t\tvar thead = oSettings.nTHead;\n\t\tvar tfoot = oSettings.nTFoot;\n\t\tvar createHeader = $('th, td', thead).length === 0;\n\t\tvar classes = oSettings.oClasses;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\tif ( createHeader ) {\n\t\t\trow = $('<tr/>').appendTo( thead );\n\t\t}\n\t\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\t\tcell = $( column.nTh ).addClass( column.sClass );\n\t\n\t\t\tif ( createHeader ) {\n\t\t\t\tcell.appendTo( row );\n\t\t\t}\n\t\n\t\t\t// 1.11 move into sorting\n\t\t\tif ( oSettings.oFeatures.bSort ) {\n\t\t\t\tcell.addClass( column.sSortingClass );\n\t\n\t\t\t\tif ( column.bSortable !== false ) {\n\t\t\t\t\tcell\n\t\t\t\t\t\t.attr( 'tabindex', oSettings.iTabIndex )\n\t\t\t\t\t\t.attr( 'aria-controls', oSettings.sTableId );\n\t\n\t\t\t\t\t_fnSortAttachListener( oSettings, column.nTh, i );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( column.sTitle != cell[0].innerHTML ) {\n\t\t\t\tcell.html( column.sTitle );\n\t\t\t}\n\t\n\t\t\t_fnRenderer( oSettings, 'header' )(\n\t\t\t\toSettings, cell, column, classes\n\t\t\t);\n\t\t}\n\t\n\t\tif ( createHeader ) {\n\t\t\t_fnDetectHeader( oSettings.aoHeader, thead );\n\t\t}\n\t\n\t\t/* Deal with the footer - add classes if required */\n\t\t$(thead).children('tr').children('th, td').addClass( classes.sHeaderTH );\n\t\t$(tfoot).children('tr').children('th, td').addClass( classes.sFooterTH );\n\t\n\t\t// Cache the footer cells. Note that we only take the cells from the first\n\t\t// row in the footer. If there is more than one row the user wants to\n\t\t// interact with, they need to use the table().foot() method. Note also this\n\t\t// allows cells to be used for multiple columns using colspan\n\t\tif ( tfoot !== null ) {\n\t\t\tvar cells = oSettings.aoFooter[0];\n\t\n\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\tcolumn = columns[i];\n\t\t\t\tcolumn.nTf = cells[i].cell;\n\t\n\t\t\t\tif ( column.sClass ) {\n\t\t\t\t\t$(column.nTf).addClass( column.sClass );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Draw the header (or footer) element based on the column visibility states. The\n\t * methodology here is to use the layout array from _fnDetectHeader, modified for\n\t * the instantaneous column visibility, to construct the new layout. The grid is\n\t * traversed over cell at a time in a rows x columns grid fashion, although each\n\t * cell insert can cover multiple elements in the grid - which is tracks using the\n\t * aApplied array. Cell inserts in the grid will only occur where there isn't\n\t * already a cell in that position.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param array {objects} aoSource Layout array from _fnDetectHeader\n\t *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDrawHead( oSettings, aoSource, bIncludeHidden )\n\t{\n\t\tvar i, iLen, j, jLen, k, kLen, n, nLocalTr;\n\t\tvar aoLocal = [];\n\t\tvar aApplied = [];\n\t\tvar iColumns = oSettings.aoColumns.length;\n\t\tvar iRowspan, iColspan;\n\t\n\t\tif ( ! aoSource )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\tif (  bIncludeHidden === undefined )\n\t\t{\n\t\t\tbIncludeHidden = false;\n\t\t}\n\t\n\t\t/* Make a copy of the master layout array, but without the visible columns in it */\n\t\tfor ( i=0, iLen=aoSource.length ; i<iLen ; i++ )\n\t\t{\n\t\t\taoLocal[i] = aoSource[i].slice();\n\t\t\taoLocal[i].nTr = aoSource[i].nTr;\n\t\n\t\t\t/* Remove any columns which are currently hidden */\n\t\t\tfor ( j=iColumns-1 ; j>=0 ; j-- )\n\t\t\t{\n\t\t\t\tif ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )\n\t\t\t\t{\n\t\t\t\t\taoLocal[i].splice( j, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Prep the applied array - it needs an element for each row */\n\t\t\taApplied.push( [] );\n\t\t}\n\t\n\t\tfor ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tnLocalTr = aoLocal[i].nTr;\n\t\n\t\t\t/* All cells are going to be replaced, so empty out the row */\n\t\t\tif ( nLocalTr )\n\t\t\t{\n\t\t\t\twhile( (n = nLocalTr.firstChild) )\n\t\t\t\t{\n\t\t\t\t\tnLocalTr.removeChild( n );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tiRowspan = 1;\n\t\t\t\tiColspan = 1;\n\t\n\t\t\t\t/* Check to see if there is already a cell (row/colspan) covering our target\n\t\t\t\t * insert point. If there is, then there is nothing to do.\n\t\t\t\t */\n\t\t\t\tif ( aApplied[i][j] === undefined )\n\t\t\t\t{\n\t\t\t\t\tnLocalTr.appendChild( aoLocal[i][j].cell );\n\t\t\t\t\taApplied[i][j] = 1;\n\t\n\t\t\t\t\t/* Expand the cell to cover as many rows as needed */\n\t\t\t\t\twhile ( aoLocal[i+iRowspan] !== undefined &&\n\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )\n\t\t\t\t\t{\n\t\t\t\t\t\taApplied[i+iRowspan][j] = 1;\n\t\t\t\t\t\tiRowspan++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Expand the cell to cover as many columns as needed */\n\t\t\t\t\twhile ( aoLocal[i][j+iColspan] !== undefined &&\n\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Must update the applied array over the rows for the columns */\n\t\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taApplied[i+k][j+iColspan] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tiColspan++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Do the actual expansion in the DOM */\n\t\t\t\t\t$(aoLocal[i][j].cell)\n\t\t\t\t\t\t.attr('rowspan', iRowspan)\n\t\t\t\t\t\t.attr('colspan', iColspan);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Insert the required TR nodes into the table for display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param ajaxComplete true after ajax call to complete rendering\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDraw( oSettings, ajaxComplete )\n\t{\n\t\t// Allow for state saving and a custom start position\n\t\t_fnStart( oSettings );\n\t\n\t\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\t\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\n\t\tif ( $.inArray( false, aPreDraw ) !== -1 )\n\t\t{\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar anRows = [];\n\t\tvar iRowCount = 0;\n\t\tvar asStripeClasses = oSettings.asStripeClasses;\n\t\tvar iStripes = asStripeClasses.length;\n\t\tvar oLang = oSettings.oLanguage;\n\t\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\t\tvar aiDisplay = oSettings.aiDisplay;\n\t\tvar iDisplayStart = oSettings._iDisplayStart;\n\t\tvar iDisplayEnd = oSettings.fnDisplayEnd();\n\t\n\t\toSettings.bDrawing = true;\n\t\n\t\t/* Server-side processing draw intercept */\n\t\tif ( oSettings.bDeferLoading )\n\t\t{\n\t\t\toSettings.bDeferLoading = false;\n\t\t\toSettings.iDraw++;\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t}\n\t\telse if ( !bServerSide )\n\t\t{\n\t\t\toSettings.iDraw++;\n\t\t}\n\t\telse if ( !oSettings.bDestroying && !ajaxComplete)\n\t\t{\n\t\t\t_fnAjaxUpdate( oSettings );\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( aiDisplay.length !== 0 )\n\t\t{\n\t\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\n\t\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\t\n\t\t\tfor ( var j=iStart ; j<iEnd ; j++ )\n\t\t\t{\n\t\t\t\tvar iDataIndex = aiDisplay[j];\n\t\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\n\t\t\t\tif ( aoData.nTr === null )\n\t\t\t\t{\n\t\t\t\t\t_fnCreateTr( oSettings, iDataIndex );\n\t\t\t\t}\n\t\n\t\t\t\tvar nRow = aoData.nTr;\n\t\n\t\t\t\t/* Remove the old striping classes and then add the new one */\n\t\t\t\tif ( iStripes !== 0 )\n\t\t\t\t{\n\t\t\t\t\tvar sStripe = asStripeClasses[ iRowCount % iStripes ];\n\t\t\t\t\tif ( aoData._sRowStripe != sStripe )\n\t\t\t\t\t{\n\t\t\t\t\t\t$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );\n\t\t\t\t\t\taoData._sRowStripe = sStripe;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Row callback functions - might want to manipulate the row\n\t\t\t\t// iRowCount and j are not currently documented. Are they at all\n\t\t\t\t// useful?\n\t\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null,\n\t\t\t\t\t[nRow, aoData._aData, iRowCount, j, iDataIndex] );\n\t\n\t\t\t\tanRows.push( nRow );\n\t\t\t\tiRowCount++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Table is empty - create a row with an empty message in it */\n\t\t\tvar sZero = oLang.sZeroRecords;\n\t\t\tif ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )\n\t\t\t{\n\t\t\t\tsZero = oLang.sLoadingRecords;\n\t\t\t}\n\t\t\telse if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )\n\t\t\t{\n\t\t\t\tsZero = oLang.sEmptyTable;\n\t\t\t}\n\t\n\t\t\tanRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )\n\t\t\t\t.append( $('<td />', {\n\t\t\t\t\t'valign':  'top',\n\t\t\t\t\t'colSpan': _fnVisbleColumns( oSettings ),\n\t\t\t\t\t'class':   oSettings.oClasses.sRowEmpty\n\t\t\t\t} ).html( sZero ) )[0];\n\t\t}\n\t\n\t\t/* Header and footer callbacks */\n\t\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\n\t\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\t\n\t\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\n\t\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\t\n\t\tvar body = $(oSettings.nTBody);\n\t\n\t\tbody.children().detach();\n\t\tbody.append( $(anRows) );\n\t\n\t\t/* Call all required callback functions for the end of a draw */\n\t\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );\n\t\n\t\t/* Draw is complete, sorting and filtering must be as well */\n\t\toSettings.bSorted = false;\n\t\toSettings.bFiltered = false;\n\t\toSettings.bDrawing = false;\n\t}\n\t\n\t\n\t/**\n\t * Redraw the table - taking account of the various features which are enabled\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {boolean} [holdPosition] Keep the current paging position. By default\n\t *    the paging is reset to the first page\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReDraw( settings, holdPosition )\n\t{\n\t\tvar\n\t\t\tfeatures = settings.oFeatures,\n\t\t\tsort     = features.bSort,\n\t\t\tfilter   = features.bFilter;\n\t\n\t\tif ( sort ) {\n\t\t\t_fnSort( settings );\n\t\t}\n\t\n\t\tif ( filter ) {\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t\t}\n\t\telse {\n\t\t\t// No filtering, so we want to just use the display master\n\t\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\t}\n\t\n\t\tif ( holdPosition !== true ) {\n\t\t\tsettings._iDisplayStart = 0;\n\t\t}\n\t\n\t\t// Let any modules know about the draw hold position state (used by\n\t\t// scrolling internally)\n\t\tsettings._drawHold = holdPosition;\n\t\n\t\t_fnDraw( settings );\n\t\n\t\tsettings._drawHold = false;\n\t}\n\t\n\t\n\t/**\n\t * Add the options to the page HTML for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddOptionsHtml ( oSettings )\n\t{\n\t\tvar classes = oSettings.oClasses;\n\t\tvar table = $(oSettings.nTable);\n\t\tvar holding = $('<div/>').insertBefore( table ); // Holding element for speed\n\t\tvar features = oSettings.oFeatures;\n\t\n\t\t// All DataTables are wrapped in a div\n\t\tvar insert = $('<div/>', {\n\t\t\tid:      oSettings.sTableId+'_wrapper',\n\t\t\t'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)\n\t\t} );\n\t\n\t\toSettings.nHolding = holding[0];\n\t\toSettings.nTableWrapper = insert[0];\n\t\toSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\n\t\n\t\t/* Loop over the user set positioning and place the elements as needed */\n\t\tvar aDom = oSettings.sDom.split('');\n\t\tvar featureNode, cOption, nNewNode, cNext, sAttr, j;\n\t\tfor ( var i=0 ; i<aDom.length ; i++ )\n\t\t{\n\t\t\tfeatureNode = null;\n\t\t\tcOption = aDom[i];\n\t\n\t\t\tif ( cOption == '<' )\n\t\t\t{\n\t\t\t\t/* New container div */\n\t\t\t\tnNewNode = $('<div/>')[0];\n\t\n\t\t\t\t/* Check to see if we should append an id and/or a class name to the container */\n\t\t\t\tcNext = aDom[i+1];\n\t\t\t\tif ( cNext == \"'\" || cNext == '\"' )\n\t\t\t\t{\n\t\t\t\t\tsAttr = \"\";\n\t\t\t\t\tj = 2;\n\t\t\t\t\twhile ( aDom[i+j] != cNext )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr += aDom[i+j];\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Replace jQuery UI constants @todo depreciated */\n\t\t\t\t\tif ( sAttr == \"H\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr = classes.sJUIHeader;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( sAttr == \"F\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr = classes.sJUIFooter;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n\t\t\t\t\t * breaks the string into parts and applies them as needed\n\t\t\t\t\t */\n\t\t\t\t\tif ( sAttr.indexOf('.') != -1 )\n\t\t\t\t\t{\n\t\t\t\t\t\tvar aSplit = sAttr.split('.');\n\t\t\t\t\t\tnNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);\n\t\t\t\t\t\tnNewNode.className = aSplit[1];\n\t\t\t\t\t}\n\t\t\t\t\telse if ( sAttr.charAt(0) == \"#\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tnNewNode.id = sAttr.substr(1, sAttr.length-1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnNewNode.className = sAttr;\n\t\t\t\t\t}\n\t\n\t\t\t\t\ti += j; /* Move along the position array */\n\t\t\t\t}\n\t\n\t\t\t\tinsert.append( nNewNode );\n\t\t\t\tinsert = $(nNewNode);\n\t\t\t}\n\t\t\telse if ( cOption == '>' )\n\t\t\t{\n\t\t\t\t/* End container div */\n\t\t\t\tinsert = insert.parent();\n\t\t\t}\n\t\t\t// @todo Move options into their own plugins?\n\t\t\telse if ( cOption == 'l' && features.bPaginate && features.bLengthChange )\n\t\t\t{\n\t\t\t\t/* Length */\n\t\t\t\tfeatureNode = _fnFeatureHtmlLength( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'f' && features.bFilter )\n\t\t\t{\n\t\t\t\t/* Filter */\n\t\t\t\tfeatureNode = _fnFeatureHtmlFilter( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'r' && features.bProcessing )\n\t\t\t{\n\t\t\t\t/* pRocessing */\n\t\t\t\tfeatureNode = _fnFeatureHtmlProcessing( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 't' )\n\t\t\t{\n\t\t\t\t/* Table */\n\t\t\t\tfeatureNode = _fnFeatureHtmlTable( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption ==  'i' && features.bInfo )\n\t\t\t{\n\t\t\t\t/* Info */\n\t\t\t\tfeatureNode = _fnFeatureHtmlInfo( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'p' && features.bPaginate )\n\t\t\t{\n\t\t\t\t/* Pagination */\n\t\t\t\tfeatureNode = _fnFeatureHtmlPaginate( oSettings );\n\t\t\t}\n\t\t\telse if ( DataTable.ext.feature.length !== 0 )\n\t\t\t{\n\t\t\t\t/* Plug-in features */\n\t\t\t\tvar aoFeatures = DataTable.ext.feature;\n\t\t\t\tfor ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )\n\t\t\t\t{\n\t\t\t\t\tif ( cOption == aoFeatures[k].cFeature )\n\t\t\t\t\t{\n\t\t\t\t\t\tfeatureNode = aoFeatures[k].fnInit( oSettings );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Add to the 2D features array */\n\t\t\tif ( featureNode )\n\t\t\t{\n\t\t\t\tvar aanFeatures = oSettings.aanFeatures;\n\t\n\t\t\t\tif ( ! aanFeatures[cOption] )\n\t\t\t\t{\n\t\t\t\t\taanFeatures[cOption] = [];\n\t\t\t\t}\n\t\n\t\t\t\taanFeatures[cOption].push( featureNode );\n\t\t\t\tinsert.append( featureNode );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Built our DOM structure - replace the holding div with what we want */\n\t\tholding.replaceWith( insert );\n\t\toSettings.nHolding = null;\n\t}\n\t\n\t\n\t/**\n\t * Use the DOM source to create up an array of header cells. The idea here is to\n\t * create a layout grid (array) of rows x columns, which contains a reference\n\t * to the cell that that point in the grid (regardless of col/rowspan), such that\n\t * any column / row could be removed and the new grid constructed\n\t *  @param array {object} aLayout Array to store the calculated layout in\n\t *  @param {node} nThead The header/footer element for the table\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDetectHeader ( aLayout, nThead )\n\t{\n\t\tvar nTrs = $(nThead).children('tr');\n\t\tvar nTr, nCell;\n\t\tvar i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\n\t\tvar bUnique;\n\t\tvar fnShiftCol = function ( a, i, j ) {\n\t\t\tvar k = a[i];\n\t                while ( k[j] ) {\n\t\t\t\tj++;\n\t\t\t}\n\t\t\treturn j;\n\t\t};\n\t\n\t\taLayout.splice( 0, aLayout.length );\n\t\n\t\t/* We know how many rows there are in the layout - so prep it */\n\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t{\n\t\t\taLayout.push( [] );\n\t\t}\n\t\n\t\t/* Calculate a layout array */\n\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tnTr = nTrs[i];\n\t\t\tiColumn = 0;\n\t\n\t\t\t/* For every cell in the row... */\n\t\t\tnCell = nTr.firstChild;\n\t\t\twhile ( nCell ) {\n\t\t\t\tif ( nCell.nodeName.toUpperCase() == \"TD\" ||\n\t\t\t\t     nCell.nodeName.toUpperCase() == \"TH\" )\n\t\t\t\t{\n\t\t\t\t\t/* Get the col and rowspan attributes from the DOM and sanitise them */\n\t\t\t\t\tiColspan = nCell.getAttribute('colspan') * 1;\n\t\t\t\t\tiRowspan = nCell.getAttribute('rowspan') * 1;\n\t\t\t\t\tiColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;\n\t\t\t\t\tiRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;\n\t\n\t\t\t\t\t/* There might be colspan cells already in this row, so shift our target\n\t\t\t\t\t * accordingly\n\t\t\t\t\t */\n\t\t\t\t\tiColShifted = fnShiftCol( aLayout, i, iColumn );\n\t\n\t\t\t\t\t/* Cache calculation for unique columns */\n\t\t\t\t\tbUnique = iColspan === 1 ? true : false;\n\t\n\t\t\t\t\t/* If there is col / rowspan, copy the information into the layout grid */\n\t\t\t\t\tfor ( l=0 ; l<iColspan ; l++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taLayout[i+k][iColShifted+l] = {\n\t\t\t\t\t\t\t\t\"cell\": nCell,\n\t\t\t\t\t\t\t\t\"unique\": bUnique\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\taLayout[i+k].nTr = nTr;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnCell = nCell.nextSibling;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Get an array of unique th elements, one for each column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nHeader automatically detect the layout from this node - optional\n\t *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\n\t *  @returns array {node} aReturn list of unique th's\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetUniqueThs ( oSettings, nHeader, aLayout )\n\t{\n\t\tvar aReturn = [];\n\t\tif ( !aLayout )\n\t\t{\n\t\t\taLayout = oSettings.aoHeader;\n\t\t\tif ( nHeader )\n\t\t\t{\n\t\t\t\taLayout = [];\n\t\t\t\t_fnDetectHeader( aLayout, nHeader );\n\t\t\t}\n\t\t}\n\t\n\t\tfor ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tfor ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tif ( aLayout[i][j].unique &&\n\t\t\t\t\t (!aReturn[j] || !oSettings.bSortCellsTop) )\n\t\t\t\t{\n\t\t\t\t\taReturn[j] = aLayout[i][j].cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn aReturn;\n\t}\n\t\n\t/**\n\t * Set the start position for draw\n\t *  @param {object} oSettings dataTables settings object\n\t */\n\tfunction _fnStart( oSettings )\n\t{\n\t\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\t\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\n\t\n\t\t// Check and see if we have an initial draw position from state saving\n\t\tif ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\n\t\t{\n\t\t\toSettings._iDisplayStart = bServerSide ?\n\t\t\t\tiInitDisplayStart :\n\t\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n\t\t\t\t\t0 :\n\t\t\t\t\tiInitDisplayStart;\n\t\n\t\t\toSettings.iInitDisplayStart = -1;\n\t\t}\n\t}\n\t\n\t/**\n\t * Create an Ajax call based on the table's settings, taking into account that\n\t * parameters can have multiple forms, and backwards compatibility.\n\t *\n\t * @param {object} oSettings dataTables settings object\n\t * @param {array} data Data to send to the server, required by\n\t *     DataTables - may be augmented by developer callbacks\n\t * @param {function} fn Callback function to run when data is obtained\n\t */\n\tfunction _fnBuildAjax( oSettings, data, fn )\n\t{\n\t\t// Compatibility with 1.9-, allow fnServerData and event to manipulate\n\t\t_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );\n\t\n\t\t// Convert to object based for 1.10+ if using the old array scheme which can\n\t\t// come from server-side processing or serverParams\n\t\tif ( data && Array.isArray(data) ) {\n\t\t\tvar tmp = {};\n\t\t\tvar rbracket = /(.*?)\\[\\]$/;\n\t\n\t\t\t$.each( data, function (key, val) {\n\t\t\t\tvar match = val.name.match(rbracket);\n\t\n\t\t\t\tif ( match ) {\n\t\t\t\t\t// Support for arrays\n\t\t\t\t\tvar name = match[0];\n\t\n\t\t\t\t\tif ( ! tmp[ name ] ) {\n\t\t\t\t\t\ttmp[ name ] = [];\n\t\t\t\t\t}\n\t\t\t\t\ttmp[ name ].push( val.value );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttmp[val.name] = val.value;\n\t\t\t\t}\n\t\t\t} );\n\t\t\tdata = tmp;\n\t\t}\n\t\n\t\tvar ajaxData;\n\t\tvar ajax = oSettings.ajax;\n\t\tvar instance = oSettings.oInstance;\n\t\tvar callback = function ( json ) {\n\t\t\tvar status = oSettings.jqXHR\n\t\t\t\t? oSettings.jqXHR.status\n\t\t\t\t: null;\n\t\n\t\t\tif ( json === null || (typeof status === 'number' && status == 204 ) ) {\n\t\t\t\tjson = {};\n\t\t\t\t_fnAjaxDataSrc( oSettings, json, [] );\n\t\t\t}\n\t\n\t\t\tvar error = json.error || json.sError;\n\t\t\tif ( error ) {\n\t\t\t\t_fnLog( oSettings, 0, error );\n\t\t\t}\n\t\n\t\t\toSettings.json = json;\n\t\n\t\t\t_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );\n\t\t\tfn( json );\n\t\t};\n\t\n\t\tif ( $.isPlainObject( ajax ) && ajax.data )\n\t\t{\n\t\t\tajaxData = ajax.data;\n\t\n\t\t\tvar newData = typeof ajaxData === 'function' ?\n\t\t\t\tajaxData( data, oSettings ) :  // fn can manipulate data or return\n\t\t\t\tajaxData;                      // an object object or array to merge\n\t\n\t\t\t// If the function returned something, use that alone\n\t\t\tdata = typeof ajaxData === 'function' && newData ?\n\t\t\t\tnewData :\n\t\t\t\t$.extend( true, data, newData );\n\t\n\t\t\t// Remove the data property as we've resolved it already and don't want\n\t\t\t// jQuery to do it again (it is restored at the end of the function)\n\t\t\tdelete ajax.data;\n\t\t}\n\t\n\t\tvar baseAjax = {\n\t\t\t\"data\": data,\n\t\t\t\"success\": callback,\n\t\t\t\"dataType\": \"json\",\n\t\t\t\"cache\": false,\n\t\t\t\"type\": oSettings.sServerMethod,\n\t\t\t\"error\": function (xhr, error, thrown) {\n\t\t\t\tvar ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );\n\t\n\t\t\t\tif ( $.inArray( true, ret ) === -1 ) {\n\t\t\t\t\tif ( error == \"parsererror\" ) {\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'Invalid JSON response', 1 );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( xhr.readyState === 4 ) {\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'Ajax error', 7 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\t}\n\t\t};\n\t\n\t\t// Store the data submitted for the API\n\t\toSettings.oAjaxData = data;\n\t\n\t\t// Allow plug-ins and external processes to modify the data\n\t\t_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );\n\t\n\t\tif ( oSettings.fnServerData )\n\t\t{\n\t\t\t// DataTables 1.9- compatibility\n\t\t\toSettings.fnServerData.call( instance,\n\t\t\t\toSettings.sAjaxSource,\n\t\t\t\t$.map( data, function (val, key) { // Need to convert back to 1.9 trad format\n\t\t\t\t\treturn { name: key, value: val };\n\t\t\t\t} ),\n\t\t\t\tcallback,\n\t\t\t\toSettings\n\t\t\t);\n\t\t}\n\t\telse if ( oSettings.sAjaxSource || typeof ajax === 'string' )\n\t\t{\n\t\t\t// DataTables 1.9- compatibility\n\t\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, {\n\t\t\t\turl: ajax || oSettings.sAjaxSource\n\t\t\t} ) );\n\t\t}\n\t\telse if ( typeof ajax === 'function' )\n\t\t{\n\t\t\t// Is a function - let the caller define what needs to be done\n\t\t\toSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Object to extend the base settings\n\t\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );\n\t\n\t\t\t// Restore for next time around\n\t\t\tajax.data = ajaxData;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Update the table using an Ajax call\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {boolean} Block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdate( settings )\n\t{\n\t\tsettings.iDraw++;\n\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t_fnBuildAjax(\n\t\t\tsettings,\n\t\t\t_fnAjaxParameters( settings ),\n\t\t\tfunction(json) {\n\t\t\t\t_fnAjaxUpdateDraw( settings, json );\n\t\t\t}\n\t\t);\n\t}\n\t\n\t\n\t/**\n\t * Build up the parameters in an object needed for a server-side processing\n\t * request. Note that this is basically done twice, is different ways - a modern\n\t * method which is used by default in DataTables 1.10 which uses objects and\n\t * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\n\t * the sAjaxSource option is used in the initialisation, or the legacyAjax\n\t * option is set.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {bool} block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxParameters( settings )\n\t{\n\t\tvar\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tcolumnCount = columns.length,\n\t\t\tfeatures = settings.oFeatures,\n\t\t\tpreSearch = settings.oPreviousSearch,\n\t\t\tpreColSearch = settings.aoPreSearchCols,\n\t\t\ti, data = [], dataProp, column, columnSearch,\n\t\t\tsort = _fnSortFlatten( settings ),\n\t\t\tdisplayStart = settings._iDisplayStart,\n\t\t\tdisplayLength = features.bPaginate !== false ?\n\t\t\t\tsettings._iDisplayLength :\n\t\t\t\t-1;\n\t\n\t\tvar param = function ( name, value ) {\n\t\t\tdata.push( { 'name': name, 'value': value } );\n\t\t};\n\t\n\t\t// DataTables 1.9- compatible method\n\t\tparam( 'sEcho',          settings.iDraw );\n\t\tparam( 'iColumns',       columnCount );\n\t\tparam( 'sColumns',       _pluck( columns, 'sName' ).join(',') );\n\t\tparam( 'iDisplayStart',  displayStart );\n\t\tparam( 'iDisplayLength', displayLength );\n\t\n\t\t// DataTables 1.10+ method\n\t\tvar d = {\n\t\t\tdraw:    settings.iDraw,\n\t\t\tcolumns: [],\n\t\t\torder:   [],\n\t\t\tstart:   displayStart,\n\t\t\tlength:  displayLength,\n\t\t\tsearch:  {\n\t\t\t\tvalue: preSearch.sSearch,\n\t\t\t\tregex: preSearch.bRegex\n\t\t\t}\n\t\t};\n\t\n\t\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\t\tcolumnSearch = preColSearch[i];\n\t\t\tdataProp = typeof column.mData==\"function\" ? 'function' : column.mData ;\n\t\n\t\t\td.columns.push( {\n\t\t\t\tdata:       dataProp,\n\t\t\t\tname:       column.sName,\n\t\t\t\tsearchable: column.bSearchable,\n\t\t\t\torderable:  column.bSortable,\n\t\t\t\tsearch:     {\n\t\t\t\t\tvalue: columnSearch.sSearch,\n\t\t\t\t\tregex: columnSearch.bRegex\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\tparam( \"mDataProp_\"+i, dataProp );\n\t\n\t\t\tif ( features.bFilter ) {\n\t\t\t\tparam( 'sSearch_'+i,     columnSearch.sSearch );\n\t\t\t\tparam( 'bRegex_'+i,      columnSearch.bRegex );\n\t\t\t\tparam( 'bSearchable_'+i, column.bSearchable );\n\t\t\t}\n\t\n\t\t\tif ( features.bSort ) {\n\t\t\t\tparam( 'bSortable_'+i, column.bSortable );\n\t\t\t}\n\t\t}\n\t\n\t\tif ( features.bFilter ) {\n\t\t\tparam( 'sSearch', preSearch.sSearch );\n\t\t\tparam( 'bRegex', preSearch.bRegex );\n\t\t}\n\t\n\t\tif ( features.bSort ) {\n\t\t\t$.each( sort, function ( i, val ) {\n\t\t\t\td.order.push( { column: val.col, dir: val.dir } );\n\t\n\t\t\t\tparam( 'iSortCol_'+i, val.col );\n\t\t\t\tparam( 'sSortDir_'+i, val.dir );\n\t\t\t} );\n\t\n\t\t\tparam( 'iSortingCols', sort.length );\n\t\t}\n\t\n\t\t// If the legacy.ajax parameter is null, then we automatically decide which\n\t\t// form to use, based on sAjaxSource\n\t\tvar legacy = DataTable.ext.legacy.ajax;\n\t\tif ( legacy === null ) {\n\t\t\treturn settings.sAjaxSource ? data : d;\n\t\t}\n\t\n\t\t// Otherwise, if legacy has been specified then we use that to decide on the\n\t\t// form\n\t\treturn legacy ? data : d;\n\t}\n\t\n\t\n\t/**\n\t * Data the data from the server (nuking the old) and redraw the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} json json data return from the server.\n\t *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n\t *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n\t *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n\t *  @param {array} json.aaData The data to display on this page\n\t *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdateDraw ( settings, json )\n\t{\n\t\t// v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\n\t\t// Support both\n\t\tvar compat = function ( old, modern ) {\n\t\t\treturn json[old] !== undefined ? json[old] : json[modern];\n\t\t};\n\t\n\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\tvar draw            = compat( 'sEcho',                'draw' );\n\t\tvar recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );\n\t\tvar recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );\n\t\n\t\tif ( draw !== undefined ) {\n\t\t\t// Protect against out of sequence returns\n\t\t\tif ( draw*1 < settings.iDraw ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsettings.iDraw = draw * 1;\n\t\t}\n\t\n\t\t// No data in returned object, so rather than an array, we show an empty table\n\t\tif ( ! data ) {\n\t\t\tdata = [];\n\t\t}\n\t\n\t\t_fnClearTable( settings );\n\t\tsettings._iRecordsTotal   = parseInt(recordsTotal, 10);\n\t\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\t\n\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t_fnAddData( settings, data[i] );\n\t\t}\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\n\t\t_fnDraw( settings, true );\n\t\n\t\tif ( ! settings._bInitComplete ) {\n\t\t\t_fnInitComplete( settings, json );\n\t\t}\n\t\n\t\t_fnProcessingDisplay( settings, false );\n\t}\n\t\n\t\n\t/**\n\t * Get the data from the JSON data source to use for drawing a table. Using\n\t * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n\t * source object, or from a processing function.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param  {object} json Data source object / array from the server\n\t *  @return {array} Array of data to use\n\t */\n\t function _fnAjaxDataSrc ( oSettings, json, write )\n\t {\n\t\tvar dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?\n\t\t\toSettings.ajax.dataSrc :\n\t\t\toSettings.sAjaxDataProp; // Compatibility with 1.9-.\n\t\n\t\tif ( ! write ) {\n\t\t\tif ( dataSrc === 'data' ) {\n\t\t\t\t// If the default, then we still want to support the old style, and safely ignore\n\t\t\t\t// it if possible\n\t\t\t\treturn json.aaData || json[dataSrc];\n\t\t\t}\n\t\n\t\t\treturn dataSrc !== \"\" ?\n\t\t\t\t_fnGetObjectDataFn( dataSrc )( json ) :\n\t\t\t\tjson;\n\t\t}\n\t\n\t\t// set\n\t\t_fnSetObjectDataFn( dataSrc )( json, write );\n\t}\n\t\n\t/**\n\t * Generate the node required for filtering text\n\t *  @returns {node} Filter control element\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlFilter ( settings )\n\t{\n\t\tvar classes = settings.oClasses;\n\t\tvar tableId = settings.sTableId;\n\t\tvar language = settings.oLanguage;\n\t\tvar previousSearch = settings.oPreviousSearch;\n\t\tvar features = settings.aanFeatures;\n\t\tvar input = '<input type=\"search\" class=\"'+classes.sFilterInput+'\"/>';\n\t\n\t\tvar str = language.sSearch;\n\t\tstr = str.match(/_INPUT_/) ?\n\t\t\tstr.replace('_INPUT_', input) :\n\t\t\tstr+input;\n\t\n\t\tvar filter = $('<div/>', {\n\t\t\t\t'id': ! features.f ? tableId+'_filter' : null,\n\t\t\t\t'class': classes.sFilter\n\t\t\t} )\n\t\t\t.append( $('<label/>' ).append( str ) );\n\t\n\t\tvar searchFn = function(event) {\n\t\t\t/* Update all other filter input elements for the new display */\n\t\t\tvar n = features.f;\n\t\t\tvar val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\n\t\t\tif(previousSearch.return && event.key !== \"Enter\") {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t/* Now do the filter */\n\t\t\tif ( val != previousSearch.sSearch ) {\n\t\t\t\t_fnFilterComplete( settings, {\n\t\t\t\t\t\"sSearch\": val,\n\t\t\t\t\t\"bRegex\": previousSearch.bRegex,\n\t\t\t\t\t\"bSmart\": previousSearch.bSmart ,\n\t\t\t\t\t\"bCaseInsensitive\": previousSearch.bCaseInsensitive,\n\t\t\t\t\t\"return\": previousSearch.return\n\t\t\t\t} );\n\t\n\t\t\t\t// Need to redraw, without resorting\n\t\t\t\tsettings._iDisplayStart = 0;\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t};\n\t\n\t\tvar searchDelay = settings.searchDelay !== null ?\n\t\t\tsettings.searchDelay :\n\t\t\t_fnDataSource( settings ) === 'ssp' ?\n\t\t\t\t400 :\n\t\t\t\t0;\n\t\n\t\tvar jqFilter = $('input', filter)\n\t\t\t.val( previousSearch.sSearch )\n\t\t\t.attr( 'placeholder', language.sSearchPlaceholder )\n\t\t\t.on(\n\t\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\n\t\t\t\tsearchDelay ?\n\t\t\t\t\t_fnThrottle( searchFn, searchDelay ) :\n\t\t\t\t\tsearchFn\n\t\t\t)\n\t\t\t.on( 'mouseup', function(e) {\n\t\t\t\t// Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\n\t\t\t\t// on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\n\t\t\t\t// checks the value to see if it has changed. In other browsers it won't have.\n\t\t\t\tsetTimeout( function () {\n\t\t\t\t\tsearchFn.call(jqFilter[0], e);\n\t\t\t\t}, 10);\n\t\t\t} )\n\t\t\t.on( 'keypress.DT', function(e) {\n\t\t\t\t/* Prevent form submission */\n\t\t\t\tif ( e.keyCode == 13 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.attr('aria-controls', tableId);\n\t\n\t\t// Update the input elements whenever the table is filtered\n\t\t$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\n\t\t\tif ( settings === s ) {\n\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t// inside an iframe or frame...\n\t\t\t\ttry {\n\t\t\t\t\tif ( jqFilter[0] !== document.activeElement ) {\n\t\t\t\t\t\tjqFilter.val( previousSearch.sSearch );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch ( e ) {}\n\t\t\t}\n\t\t} );\n\t\n\t\treturn filter[0];\n\t}\n\t\n\t\n\t/**\n\t * Filter the table using both the global filter and column based filtering\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} oSearch search information\n\t *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterComplete ( oSettings, oInput, iForce )\n\t{\n\t\tvar oPrevSearch = oSettings.oPreviousSearch;\n\t\tvar aoPrevSearch = oSettings.aoPreSearchCols;\n\t\tvar fnSaveFilter = function ( oFilter ) {\n\t\t\t/* Save the filtering values */\n\t\t\toPrevSearch.sSearch = oFilter.sSearch;\n\t\t\toPrevSearch.bRegex = oFilter.bRegex;\n\t\t\toPrevSearch.bSmart = oFilter.bSmart;\n\t\t\toPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\n\t\t\toPrevSearch.return = oFilter.return;\n\t\t};\n\t\tvar fnRegex = function ( o ) {\n\t\t\t// Backwards compatibility with the bEscapeRegex option\n\t\t\treturn o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\n\t\t};\n\t\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t// @todo As per sort - can this be moved into an event handler?\n\t\t_fnColumnTypes( oSettings );\n\t\n\t\t/* In server-side processing all filtering is done by the server, so no point hanging around here */\n\t\tif ( _fnDataSource( oSettings ) != 'ssp' )\n\t\t{\n\t\t\t/* Global filter */\n\t\t\t_fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive, oInput.return );\n\t\t\tfnSaveFilter( oInput );\n\t\n\t\t\t/* Now do the individual column filter */\n\t\t\tfor ( var i=0 ; i<aoPrevSearch.length ; i++ )\n\t\t\t{\n\t\t\t\t_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),\n\t\t\t\t\taoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );\n\t\t\t}\n\t\n\t\t\t/* Custom filtering */\n\t\t\t_fnFilterCustom( oSettings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfnSaveFilter( oInput );\n\t\t}\n\t\n\t\t/* Tell the draw function we have been filtering */\n\t\toSettings.bFiltered = true;\n\t\t_fnCallbackFire( oSettings, null, 'search', [oSettings] );\n\t}\n\t\n\t\n\t/**\n\t * Apply custom filtering functions\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCustom( settings )\n\t{\n\t\tvar filters = DataTable.ext.search;\n\t\tvar displayRows = settings.aiDisplay;\n\t\tvar row, rowIdx;\n\t\n\t\tfor ( var i=0, ien=filters.length ; i<ien ; i++ ) {\n\t\t\tvar rows = [];\n\t\n\t\t\t// Loop over each row and see if it should be included\n\t\t\tfor ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\n\t\t\t\trowIdx = displayRows[ j ];\n\t\t\t\trow = settings.aoData[ rowIdx ];\n\t\n\t\t\t\tif ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\n\t\t\t\t\trows.push( rowIdx );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// So the array reference doesn't break set the results into the\n\t\t\t// existing array\n\t\t\tdisplayRows.length = 0;\n\t\t\t$.merge( displayRows, rows );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Filter the table on a per-column basis\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sInput string to filter on\n\t *  @param {int} iColumn column to filter\n\t *  @param {bool} bRegex treat search string as a regular expression or not\n\t *  @param {bool} bSmart use smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )\n\t{\n\t\tif ( searchStr === '' ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar data;\n\t\tvar out = [];\n\t\tvar display = settings.aiDisplay;\n\t\tvar rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );\n\t\n\t\tfor ( var i=0 ; i<display.length ; i++ ) {\n\t\t\tdata = settings.aoData[ display[i] ]._aFilterData[ colIdx ];\n\t\n\t\t\tif ( rpSearch.test( data ) ) {\n\t\t\t\tout.push( display[i] );\n\t\t\t}\n\t\t}\n\t\n\t\tsettings.aiDisplay = out;\n\t}\n\t\n\t\n\t/**\n\t * Filter the data table based on user input and draw the table\n\t *  @param {object} settings dataTables settings object\n\t *  @param {string} input string to filter on\n\t *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\n\t *  @param {bool} regex treat as a regular expression or not\n\t *  @param {bool} smart perform smart filtering or not\n\t *  @param {bool} caseInsensitive Do case insensitive matching or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilter( settings, input, force, regex, smart, caseInsensitive )\n\t{\n\t\tvar rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );\n\t\tvar prevSearch = settings.oPreviousSearch.sSearch;\n\t\tvar displayMaster = settings.aiDisplayMaster;\n\t\tvar display, invalidated, i;\n\t\tvar filtered = [];\n\t\n\t\t// Need to take account of custom filtering functions - always filter\n\t\tif ( DataTable.ext.search.length !== 0 ) {\n\t\t\tforce = true;\n\t\t}\n\t\n\t\t// Check if any of the rows were invalidated\n\t\tinvalidated = _fnFilterData( settings );\n\t\n\t\t// If the input is blank - we just want the full data set\n\t\tif ( input.length <= 0 ) {\n\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t}\n\t\telse {\n\t\t\t// New search - start from the master array\n\t\t\tif ( invalidated ||\n\t\t\t\t force ||\n\t\t\t\t regex ||\n\t\t\t\t prevSearch.length > input.length ||\n\t\t\t\t input.indexOf(prevSearch) !== 0 ||\n\t\t\t\t settings.bSorted // On resort, the display master needs to be\n\t\t\t\t                  // re-filtered since indexes will have changed\n\t\t\t) {\n\t\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t\t}\n\t\n\t\t\t// Search the display array\n\t\t\tdisplay = settings.aiDisplay;\n\t\n\t\t\tfor ( i=0 ; i<display.length ; i++ ) {\n\t\t\t\tif ( rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {\n\t\t\t\t\tfiltered.push( display[i] );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tsettings.aiDisplay = filtered;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Build a regular expression object suitable for searching a table\n\t *  @param {string} sSearch string to search for\n\t *  @param {bool} bRegex treat as a regular expression or not\n\t *  @param {bool} bSmart perform smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n\t *  @returns {RegExp} constructed object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCreateSearch( search, regex, smart, caseInsensitive )\n\t{\n\t\tsearch = regex ?\n\t\t\tsearch :\n\t\t\t_fnEscapeRegex( search );\n\t\t\n\t\tif ( smart ) {\n\t\t\t/* For smart filtering we want to allow the search to work regardless of\n\t\t\t * word order. We also want double quoted text to be preserved, so word\n\t\t\t * order is important - a la google. So this is what we want to\n\t\t\t * generate:\n\t\t\t * \n\t\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n\t\t\t */\n\t\t\tvar a = $.map( search.match( /\"[^\"]+\"|[^ ]+/g ) || [''], function ( word ) {\n\t\t\t\tif ( word.charAt(0) === '\"' ) {\n\t\t\t\t\tvar m = word.match( /^\"(.*)\"$/ );\n\t\t\t\t\tword = m ? m[1] : word;\n\t\t\t\t}\n\t\n\t\t\t\treturn word.replace('\"', '');\n\t\t\t} );\n\t\n\t\t\tsearch = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';\n\t\t}\n\t\n\t\treturn new RegExp( search, caseInsensitive ? 'i' : '' );\n\t}\n\t\n\t\n\t/**\n\t * Escape a string such that it can be used in a regular expression\n\t *  @param {string} sVal string to escape\n\t *  @returns {string} escaped string\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnEscapeRegex = DataTable.util.escapeRegex;\n\t\n\tvar __filter_div = $('<div>')[0];\n\tvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\t\n\t// Update the filtering data for each row if needed (by invalidation or first run)\n\tfunction _fnFilterData ( settings )\n\t{\n\t\tvar columns = settings.aoColumns;\n\t\tvar column;\n\t\tvar i, j, ien, jen, filterData, cellData, row;\n\t\tvar wasInvalidated = false;\n\t\n\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\trow = settings.aoData[i];\n\t\n\t\t\tif ( ! row._aFilterData ) {\n\t\t\t\tfilterData = [];\n\t\n\t\t\t\tfor ( j=0, jen=columns.length ; j<jen ; j++ ) {\n\t\t\t\t\tcolumn = columns[j];\n\t\n\t\t\t\t\tif ( column.bSearchable ) {\n\t\t\t\t\t\tcellData = _fnGetCellData( settings, i, j, 'filter' );\n\t\n\t\t\t\t\t\t// Search in DataTables 1.10 is string based. In 1.11 this\n\t\t\t\t\t\t// should be altered to also allow strict type checking.\n\t\t\t\t\t\tif ( cellData === null ) {\n\t\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( typeof cellData !== 'string' && cellData.toString ) {\n\t\t\t\t\t\t\tcellData = cellData.toString();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If it looks like there is an HTML entity in the string,\n\t\t\t\t\t// attempt to decode it so sorting works as expected. Note that\n\t\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\n\t\t\t\t\t// method used here is much faster http://jsperf.com/html-decode\n\t\t\t\t\tif ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\n\t\t\t\t\t\t__filter_div.innerHTML = cellData;\n\t\t\t\t\t\tcellData = __filter_div_textContent ?\n\t\t\t\t\t\t\t__filter_div.textContent :\n\t\t\t\t\t\t\t__filter_div.innerText;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( cellData.replace ) {\n\t\t\t\t\t\tcellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfilterData.push( cellData );\n\t\t\t\t}\n\t\n\t\t\t\trow._aFilterData = filterData;\n\t\t\t\trow._sFilterRow = filterData.join('  ');\n\t\t\t\twasInvalidated = true;\n\t\t\t}\n\t\t}\n\t\n\t\treturn wasInvalidated;\n\t}\n\t\n\t\n\t/**\n\t * Convert from the internal Hungarian notation to camelCase for external\n\t * interaction\n\t *  @param {object} obj Object to convert\n\t *  @returns {object} Inverted object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSearchToCamel ( obj )\n\t{\n\t\treturn {\n\t\t\tsearch:          obj.sSearch,\n\t\t\tsmart:           obj.bSmart,\n\t\t\tregex:           obj.bRegex,\n\t\t\tcaseInsensitive: obj.bCaseInsensitive\n\t\t};\n\t}\n\t\n\t\n\t\n\t/**\n\t * Convert from camelCase notation to the internal Hungarian. We could use the\n\t * Hungarian convert function here, but this is cleaner\n\t *  @param {object} obj Object to convert\n\t *  @returns {object} Inverted object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSearchToHung ( obj )\n\t{\n\t\treturn {\n\t\t\tsSearch:          obj.search,\n\t\t\tbSmart:           obj.smart,\n\t\t\tbRegex:           obj.regex,\n\t\t\tbCaseInsensitive: obj.caseInsensitive\n\t\t};\n\t}\n\t\n\t/**\n\t * Generate the node required for the info display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Information element\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlInfo ( settings )\n\t{\n\t\tvar\n\t\t\ttid = settings.sTableId,\n\t\t\tnodes = settings.aanFeatures.i,\n\t\t\tn = $('<div/>', {\n\t\t\t\t'class': settings.oClasses.sInfo,\n\t\t\t\t'id': ! nodes ? tid+'_info' : null\n\t\t\t} );\n\t\n\t\tif ( ! nodes ) {\n\t\t\t// Update display on each draw\n\t\t\tsettings.aoDrawCallback.push( {\n\t\t\t\t\"fn\": _fnUpdateInfo,\n\t\t\t\t\"sName\": \"information\"\n\t\t\t} );\n\t\n\t\t\tn\n\t\t\t\t.attr( 'role', 'status' )\n\t\t\t\t.attr( 'aria-live', 'polite' );\n\t\n\t\t\t// Table is described by our info div\n\t\t\t$(settings.nTable).attr( 'aria-describedby', tid+'_info' );\n\t\t}\n\t\n\t\treturn n[0];\n\t}\n\t\n\t\n\t/**\n\t * Update the information elements in the display\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnUpdateInfo ( settings )\n\t{\n\t\t/* Show information about the table */\n\t\tvar nodes = settings.aanFeatures.i;\n\t\tif ( nodes.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\tlang  = settings.oLanguage,\n\t\t\tstart = settings._iDisplayStart+1,\n\t\t\tend   = settings.fnDisplayEnd(),\n\t\t\tmax   = settings.fnRecordsTotal(),\n\t\t\ttotal = settings.fnRecordsDisplay(),\n\t\t\tout   = total ?\n\t\t\t\tlang.sInfo :\n\t\t\t\tlang.sInfoEmpty;\n\t\n\t\tif ( total !== max ) {\n\t\t\t/* Record set after filtering */\n\t\t\tout += ' ' + lang.sInfoFiltered;\n\t\t}\n\t\n\t\t// Convert the macros\n\t\tout += lang.sInfoPostFix;\n\t\tout = _fnInfoMacros( settings, out );\n\t\n\t\tvar callback = lang.fnInfoCallback;\n\t\tif ( callback !== null ) {\n\t\t\tout = callback.call( settings.oInstance,\n\t\t\t\tsettings, start, end, max, total, out\n\t\t\t);\n\t\t}\n\t\n\t\t$(nodes).html( out );\n\t}\n\t\n\t\n\tfunction _fnInfoMacros ( settings, str )\n\t{\n\t\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n\t\t// internally\n\t\tvar\n\t\t\tformatter  = settings.fnFormatNumber,\n\t\t\tstart      = settings._iDisplayStart+1,\n\t\t\tlen        = settings._iDisplayLength,\n\t\t\tvis        = settings.fnRecordsDisplay(),\n\t\t\tall        = len === -1;\n\t\n\t\treturn str.\n\t\t\treplace(/_START_/g, formatter.call( settings, start ) ).\n\t\t\treplace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\n\t\t\treplace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).\n\t\t\treplace(/_TOTAL_/g, formatter.call( settings, vis ) ).\n\t\t\treplace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\n\t\t\treplace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );\n\t}\n\t\n\t\n\t\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitialise ( settings )\n\t{\n\t\tvar i, iLen, iAjaxStart=settings.iInitDisplayStart;\n\t\tvar columns = settings.aoColumns, column;\n\t\tvar features = settings.oFeatures;\n\t\tvar deferLoading = settings.bDeferLoading; // value modified by the draw\n\t\n\t\t/* Ensure that the table data is fully initialised */\n\t\tif ( ! settings.bInitialised ) {\n\t\t\tsetTimeout( function(){ _fnInitialise( settings ); }, 200 );\n\t\t\treturn;\n\t\t}\n\t\n\t\t/* Show the display HTML options */\n\t\t_fnAddOptionsHtml( settings );\n\t\n\t\t/* Build and draw the header / footer for the table */\n\t\t_fnBuildHead( settings );\n\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\n\t\t/* Okay to show that something is going on now */\n\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t/* Calculate sizes for columns */\n\t\tif ( features.bAutoWidth ) {\n\t\t\t_fnCalculateColumnWidths( settings );\n\t\t}\n\t\n\t\tfor ( i=0, iLen=columns.length ; i<iLen ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\n\t\t\tif ( column.sWidth ) {\n\t\t\t\tcolumn.nTh.style.width = _fnStringToCss( column.sWidth );\n\t\t\t}\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'preInit', [settings] );\n\t\n\t\t// If there is default sorting required - let's do it. The sort function\n\t\t// will do the drawing for us. Otherwise we draw the table regardless of the\n\t\t// Ajax source - this allows the table to look initialised for Ajax sourcing\n\t\t// data (show 'loading' message possibly)\n\t\t_fnReDraw( settings );\n\t\n\t\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\n\t\tvar dataSrc = _fnDataSource( settings );\n\t\tif ( dataSrc != 'ssp' || deferLoading ) {\n\t\t\t// if there is an ajax source load the data\n\t\t\tif ( dataSrc == 'ajax' ) {\n\t\t\t\t_fnBuildAjax( settings, [], function(json) {\n\t\t\t\t\tvar aData = _fnAjaxDataSrc( settings, json );\n\t\n\t\t\t\t\t// Got the data - add it to the table\n\t\t\t\t\tfor ( i=0 ; i<aData.length ; i++ ) {\n\t\t\t\t\t\t_fnAddData( settings, aData[i] );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Reset the init display for cookie saving. We've already done\n\t\t\t\t\t// a filter, and therefore cleared it before. So we need to make\n\t\t\t\t\t// it appear 'fresh'\n\t\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\n\t\n\t\t\t\t\t_fnReDraw( settings );\n\t\n\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t\t_fnInitComplete( settings, json );\n\t\t\t\t}, settings );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t_fnInitComplete( settings );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\n\t *    with client-side processing (optional)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitComplete ( settings, json )\n\t{\n\t\tsettings._bInitComplete = true;\n\t\n\t\t// When data was added after the initialisation (data or Ajax) we need to\n\t\t// calculate the column sizing\n\t\tif ( json || settings.oInit.aaData ) {\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'plugin-init', [settings, json] );\n\t\t_fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );\n\t}\n\t\n\t\n\tfunction _fnLengthChange ( settings, val )\n\t{\n\t\tvar len = parseInt( val, 10 );\n\t\tsettings._iDisplayLength = len;\n\t\n\t\t_fnLengthOverflow( settings );\n\t\n\t\t// Fire length change event\n\t\t_fnCallbackFire( settings, null, 'length', [settings, len] );\n\t}\n\t\n\t\n\t/**\n\t * Generate the node required for user display length changing\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Display length feature node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlLength ( settings )\n\t{\n\t\tvar\n\t\t\tclasses  = settings.oClasses,\n\t\t\ttableId  = settings.sTableId,\n\t\t\tmenu     = settings.aLengthMenu,\n\t\t\td2       = Array.isArray( menu[0] ),\n\t\t\tlengths  = d2 ? menu[0] : menu,\n\t\t\tlanguage = d2 ? menu[1] : menu;\n\t\n\t\tvar select = $('<select/>', {\n\t\t\t'name':          tableId+'_length',\n\t\t\t'aria-controls': tableId,\n\t\t\t'class':         classes.sLengthSelect\n\t\t} );\n\t\n\t\tfor ( var i=0, ien=lengths.length ; i<ien ; i++ ) {\n\t\t\tselect[0][ i ] = new Option(\n\t\t\t\ttypeof language[i] === 'number' ?\n\t\t\t\t\tsettings.fnFormatNumber( language[i] ) :\n\t\t\t\t\tlanguage[i],\n\t\t\t\tlengths[i]\n\t\t\t);\n\t\t}\n\t\n\t\tvar div = $('<div><label/></div>').addClass( classes.sLength );\n\t\tif ( ! settings.aanFeatures.l ) {\n\t\t\tdiv[0].id = tableId+'_length';\n\t\t}\n\t\n\t\tdiv.children().append(\n\t\t\tsettings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )\n\t\t);\n\t\n\t\t// Can't use `select` variable as user might provide their own and the\n\t\t// reference is broken by the use of outerHTML\n\t\t$('select', div)\n\t\t\t.val( settings._iDisplayLength )\n\t\t\t.on( 'change.DT', function(e) {\n\t\t\t\t_fnLengthChange( settings, $(this).val() );\n\t\t\t\t_fnDraw( settings );\n\t\t\t} );\n\t\n\t\t// Update node value whenever anything changes the table's length\n\t\t$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {\n\t\t\tif ( settings === s ) {\n\t\t\t\t$('select', div).val( len );\n\t\t\t}\n\t\t} );\n\t\n\t\treturn div[0];\n\t}\n\t\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Note that most of the paging logic is done in\n\t * DataTable.ext.pager\n\t */\n\t\n\t/**\n\t * Generate the node required for default pagination\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Pagination feature node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlPaginate ( settings )\n\t{\n\t\tvar\n\t\t\ttype   = settings.sPaginationType,\n\t\t\tplugin = DataTable.ext.pager[ type ],\n\t\t\tmodern = typeof plugin === 'function',\n\t\t\tredraw = function( settings ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t},\n\t\t\tnode = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],\n\t\t\tfeatures = settings.aanFeatures;\n\t\n\t\tif ( ! modern ) {\n\t\t\tplugin.fnInit( settings, node, redraw );\n\t\t}\n\t\n\t\t/* Add a draw callback for the pagination on first instance, to update the paging display */\n\t\tif ( ! features.p )\n\t\t{\n\t\t\tnode.id = settings.sTableId+'_paginate';\n\t\n\t\t\tsettings.aoDrawCallback.push( {\n\t\t\t\t\"fn\": function( settings ) {\n\t\t\t\t\tif ( modern ) {\n\t\t\t\t\t\tvar\n\t\t\t\t\t\t\tstart      = settings._iDisplayStart,\n\t\t\t\t\t\t\tlen        = settings._iDisplayLength,\n\t\t\t\t\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\t\t\t\t\tall        = len === -1,\n\t\t\t\t\t\t\tpage = all ? 0 : Math.ceil( start / len ),\n\t\t\t\t\t\t\tpages = all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\t\t\t\tbuttons = plugin(page, pages),\n\t\t\t\t\t\t\ti, ien;\n\t\n\t\t\t\t\t\tfor ( i=0, ien=features.p.length ; i<ien ; i++ ) {\n\t\t\t\t\t\t\t_fnRenderer( settings, 'pageButton' )(\n\t\t\t\t\t\t\t\tsettings, features.p[i], i, buttons, page, pages\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tplugin.fnUpdate( settings, redraw );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"sName\": \"pagination\"\n\t\t\t} );\n\t\t}\n\t\n\t\treturn node;\n\t}\n\t\n\t\n\t/**\n\t * Alter the display settings to change the page\n\t *  @param {object} settings DataTables settings object\n\t *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n\t *    \"next\" or \"last\" or page number to jump to (integer)\n\t *  @param [bool] redraw Automatically draw the update or not\n\t *  @returns {bool} true page has changed, false - no change\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnPageChange ( settings, action, redraw )\n\t{\n\t\tvar\n\t\t\tstart     = settings._iDisplayStart,\n\t\t\tlen       = settings._iDisplayLength,\n\t\t\trecords   = settings.fnRecordsDisplay();\n\t\n\t\tif ( records === 0 || len === -1 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\telse if ( typeof action === \"number\" )\n\t\t{\n\t\t\tstart = action * len;\n\t\n\t\t\tif ( start > records )\n\t\t\t{\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"first\" )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\telse if ( action == \"previous\" )\n\t\t{\n\t\t\tstart = len >= 0 ?\n\t\t\t\tstart - len :\n\t\t\t\t0;\n\t\n\t\t\tif ( start < 0 )\n\t\t\t{\n\t\t\t  start = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"next\" )\n\t\t{\n\t\t\tif ( start + len < records )\n\t\t\t{\n\t\t\t\tstart += len;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"last\" )\n\t\t{\n\t\t\tstart = Math.floor( (records-1) / len) * len;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\n\t\t}\n\t\n\t\tvar changed = settings._iDisplayStart !== start;\n\t\tsettings._iDisplayStart = start;\n\t\n\t\tif ( changed ) {\n\t\t\t_fnCallbackFire( settings, null, 'page', [settings] );\n\t\n\t\t\tif ( redraw ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t}\n\t\n\t\treturn changed;\n\t}\n\t\n\t\n\t\n\t/**\n\t * Generate the node required for the processing node\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Processing element\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlProcessing ( settings )\n\t{\n\t\treturn $('<div/>', {\n\t\t\t\t'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,\n\t\t\t\t'class': settings.oClasses.sProcessing\n\t\t\t} )\n\t\t\t.html( settings.oLanguage.sProcessing )\n\t\t\t.append('<div><div></div><div></div><div></div><div></div></div>')\n\t\t\t.insertBefore( settings.nTable )[0];\n\t}\n\t\n\t\n\t/**\n\t * Display or hide the processing indicator\n\t *  @param {object} settings dataTables settings object\n\t *  @param {bool} show Show the processing indicator (true) or not (false)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnProcessingDisplay ( settings, show )\n\t{\n\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\t$(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'processing', [settings, show] );\n\t}\n\t\n\t/**\n\t * Add any control elements for the table - specifically scrolling\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Node to add to the DOM\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlTable ( settings )\n\t{\n\t\tvar table = $(settings.nTable);\n\t\n\t\t// Scrolling from here on in\n\t\tvar scroll = settings.oScroll;\n\t\n\t\tif ( scroll.sX === '' && scroll.sY === '' ) {\n\t\t\treturn settings.nTable;\n\t\t}\n\t\n\t\tvar scrollX = scroll.sX;\n\t\tvar scrollY = scroll.sY;\n\t\tvar classes = settings.oClasses;\n\t\tvar caption = table.children('caption');\n\t\tvar captionSide = caption.length ? caption[0]._captionSide : null;\n\t\tvar headerClone = $( table[0].cloneNode(false) );\n\t\tvar footerClone = $( table[0].cloneNode(false) );\n\t\tvar footer = table.children('tfoot');\n\t\tvar _div = '<div/>';\n\t\tvar size = function ( s ) {\n\t\t\treturn !s ? null : _fnStringToCss( s );\n\t\t};\n\t\n\t\tif ( ! footer.length ) {\n\t\t\tfooter = null;\n\t\t}\n\t\n\t\t/*\n\t\t * The HTML structure that we want to generate in this function is:\n\t\t *  div - scroller\n\t\t *    div - scroll head\n\t\t *      div - scroll head inner\n\t\t *        table - scroll head table\n\t\t *          thead - thead\n\t\t *    div - scroll body\n\t\t *      table - table (master table)\n\t\t *        thead - thead clone for sizing\n\t\t *        tbody - tbody\n\t\t *    div - scroll foot\n\t\t *      div - scroll foot inner\n\t\t *        table - scroll foot table\n\t\t *          tfoot - tfoot\n\t\t */\n\t\tvar scroller = $( _div, { 'class': classes.sScrollWrapper } )\n\t\t\t.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollHead } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$(_div, { 'class': classes.sScrollHeadInner } )\n\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\t'box-sizing': 'content-box',\n\t\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\theaderClone\n\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t\t.append( captionSide === 'top' ? caption : null )\n\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\ttable.children('thead')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollBody } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\t\twidth: size( scrollX )\n\t\t\t\t\t} )\n\t\t\t\t\t.append( table )\n\t\t\t);\n\t\n\t\tif ( footer ) {\n\t\t\tscroller.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollFoot } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$(_div, { 'class': classes.sScrollFootInner } )\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\tfooterClone\n\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t\t.append( captionSide === 'bottom' ? caption : null )\n\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\ttable.children('tfoot')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\n\t\tvar children = scroller.children();\n\t\tvar scrollHead = children[0];\n\t\tvar scrollBody = children[1];\n\t\tvar scrollFoot = footer ? children[2] : null;\n\t\n\t\t// When the body is scrolled, then we also want to scroll the headers\n\t\tif ( scrollX ) {\n\t\t\t$(scrollBody).on( 'scroll.DT', function (e) {\n\t\t\t\tvar scrollLeft = this.scrollLeft;\n\t\n\t\t\t\tscrollHead.scrollLeft = scrollLeft;\n\t\n\t\t\t\tif ( footer ) {\n\t\t\t\t\tscrollFoot.scrollLeft = scrollLeft;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\n\t\t$(scrollBody).css('max-height', scrollY);\n\t\tif (! scroll.bCollapse) {\n\t\t\t$(scrollBody).css('height', scrollY);\n\t\t}\n\t\n\t\tsettings.nScrollHead = scrollHead;\n\t\tsettings.nScrollBody = scrollBody;\n\t\tsettings.nScrollFoot = scrollFoot;\n\t\n\t\t// On redraw - align columns\n\t\tsettings.aoDrawCallback.push( {\n\t\t\t\"fn\": _fnScrollDraw,\n\t\t\t\"sName\": \"scrolling\"\n\t\t} );\n\t\n\t\treturn scroller[0];\n\t}\n\t\n\t\n\t\n\t/**\n\t * Update the header, footer and body tables for resizing - i.e. column\n\t * alignment.\n\t *\n\t * Welcome to the most horrible function DataTables. The process that this\n\t * function follows is basically:\n\t *   1. Re-create the table inside the scrolling div\n\t *   2. Take live measurements from the DOM\n\t *   3. Apply the measurements to align the columns\n\t *   4. Clean up\n\t *\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnScrollDraw ( settings )\n\t{\n\t\t// Given that this is such a monster function, a lot of variables are use\n\t\t// to try and keep the minimised size as small as possible\n\t\tvar\n\t\t\tscroll         = settings.oScroll,\n\t\t\tscrollX        = scroll.sX,\n\t\t\tscrollXInner   = scroll.sXInner,\n\t\t\tscrollY        = scroll.sY,\n\t\t\tbarWidth       = scroll.iBarWidth,\n\t\t\tdivHeader      = $(settings.nScrollHead),\n\t\t\tdivHeaderStyle = divHeader[0].style,\n\t\t\tdivHeaderInner = divHeader.children('div'),\n\t\t\tdivHeaderInnerStyle = divHeaderInner[0].style,\n\t\t\tdivHeaderTable = divHeaderInner.children('table'),\n\t\t\tdivBodyEl      = settings.nScrollBody,\n\t\t\tdivBody        = $(divBodyEl),\n\t\t\tdivBodyStyle   = divBodyEl.style,\n\t\t\tdivFooter      = $(settings.nScrollFoot),\n\t\t\tdivFooterInner = divFooter.children('div'),\n\t\t\tdivFooterTable = divFooterInner.children('table'),\n\t\t\theader         = $(settings.nTHead),\n\t\t\ttable          = $(settings.nTable),\n\t\t\ttableEl        = table[0],\n\t\t\ttableStyle     = tableEl.style,\n\t\t\tfooter         = settings.nTFoot ? $(settings.nTFoot) : null,\n\t\t\tbrowser        = settings.oBrowser,\n\t\t\tie67           = browser.bScrollOversize,\n\t\t\tdtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),\n\t\t\theaderTrgEls, footerTrgEls,\n\t\t\theaderSrcEls, footerSrcEls,\n\t\t\theaderCopy, footerCopy,\n\t\t\theaderWidths=[], footerWidths=[],\n\t\t\theaderContent=[], footerContent=[],\n\t\t\tidx, correction, sanityWidth,\n\t\t\tzeroOut = function(nSizer) {\n\t\t\t\tvar style = nSizer.style;\n\t\t\t\tstyle.paddingTop = \"0\";\n\t\t\t\tstyle.paddingBottom = \"0\";\n\t\t\t\tstyle.borderTopWidth = \"0\";\n\t\t\t\tstyle.borderBottomWidth = \"0\";\n\t\t\t\tstyle.height = 0;\n\t\t\t};\n\t\n\t\t// If the scrollbar visibility has changed from the last draw, we need to\n\t\t// adjust the column sizes as the table width will have changed to account\n\t\t// for the scrollbar\n\t\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\t\t\n\t\tif ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\n\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t\treturn; // adjust column sizing will call this function again\n\t\t}\n\t\telse {\n\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t}\n\t\n\t\t/*\n\t\t * 1. Re-create the table inside the scrolling div\n\t\t */\n\t\n\t\t// Remove the old minimised thead and tfoot elements in the inner table\n\t\ttable.children('thead, tfoot').remove();\n\t\n\t\tif ( footer ) {\n\t\t\tfooterCopy = footer.clone().prependTo( table );\n\t\t\tfooterTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\n\t\t\tfooterSrcEls = footerCopy.find('tr');\n\t\t\tfooterCopy.find('[id]').removeAttr('id');\n\t\t}\n\t\n\t\t// Clone the current header and footer elements and then place it into the inner table\n\t\theaderCopy = header.clone().prependTo( table );\n\t\theaderTrgEls = header.find('tr'); // original header is in its own table\n\t\theaderSrcEls = headerCopy.find('tr');\n\t\theaderCopy.find('th, td').removeAttr('tabindex');\n\t\theaderCopy.find('[id]').removeAttr('id');\n\t\n\t\n\t\t/*\n\t\t * 2. Take live measurements from the DOM - do not alter the DOM itself!\n\t\t */\n\t\n\t\t// Remove old sizing and apply the calculated column widths\n\t\t// Get the unique column headers in the newly created (cloned) header. We want to apply the\n\t\t// calculated sizes to this header\n\t\tif ( ! scrollX )\n\t\t{\n\t\t\tdivBodyStyle.width = '100%';\n\t\t\tdivHeader[0].style.width = '100%';\n\t\t}\n\t\n\t\t$.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {\n\t\t\tidx = _fnVisibleToColumnIndex( settings, i );\n\t\t\tel.style.width = settings.aoColumns[idx].sWidth;\n\t\t} );\n\t\n\t\tif ( footer ) {\n\t\t\t_fnApplyToChildren( function(n) {\n\t\t\t\tn.style.width = \"\";\n\t\t\t}, footerSrcEls );\n\t\t}\n\t\n\t\t// Size the table as a whole\n\t\tsanityWidth = table.outerWidth();\n\t\tif ( scrollX === \"\" ) {\n\t\t\t// No x scrolling\n\t\t\ttableStyle.width = \"100%\";\n\t\n\t\t\t// IE7 will make the width of the table when 100% include the scrollbar\n\t\t\t// - which is shouldn't. When there is a scrollbar we need to take this\n\t\t\t// into account.\n\t\t\tif ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||\n\t\t\t\tdivBody.css('overflow-y') == \"scroll\")\n\t\t\t) {\n\t\t\t\ttableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);\n\t\t\t}\n\t\n\t\t\t// Recalculate the sanity width\n\t\t\tsanityWidth = table.outerWidth();\n\t\t}\n\t\telse if ( scrollXInner !== \"\" ) {\n\t\t\t// legacy x scroll inner has been given - use it\n\t\t\ttableStyle.width = _fnStringToCss(scrollXInner);\n\t\n\t\t\t// Recalculate the sanity width\n\t\t\tsanityWidth = table.outerWidth();\n\t\t}\n\t\n\t\t// Hidden header should have zero height, so remove padding and borders. Then\n\t\t// set the width based on the real headers\n\t\n\t\t// Apply all styles in one pass\n\t\t_fnApplyToChildren( zeroOut, headerSrcEls );\n\t\n\t\t// Read all widths in next pass\n\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\tvar style = window.getComputedStyle ?\n\t\t\t\twindow.getComputedStyle(nSizer).width :\n\t\t\t\t_fnStringToCss( $(nSizer).width() );\n\t\n\t\t\theaderContent.push( nSizer.innerHTML );\n\t\t\theaderWidths.push( style );\n\t\t}, headerSrcEls );\n\t\n\t\t// Apply all widths in final pass\n\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\tnToSize.style.width = headerWidths[i];\n\t\t}, headerTrgEls );\n\t\n\t\t$(headerSrcEls).css('height', 0);\n\t\n\t\t/* Same again with the footer if we have one */\n\t\tif ( footer )\n\t\t{\n\t\t\t_fnApplyToChildren( zeroOut, footerSrcEls );\n\t\n\t\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\t\tfooterContent.push( nSizer.innerHTML );\n\t\t\t\tfooterWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\n\t\t\t}, footerSrcEls );\n\t\n\t\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\t\tnToSize.style.width = footerWidths[i];\n\t\t\t}, footerTrgEls );\n\t\n\t\t\t$(footerSrcEls).height(0);\n\t\t}\n\t\n\t\n\t\t/*\n\t\t * 3. Apply the measurements\n\t\t */\n\t\n\t\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\n\t\t// the content of the cell so that the width applied to the header and body\n\t\t// both match, but we want to hide it completely. We want to also fix their\n\t\t// width to what they currently are\n\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+headerContent[i]+'</div>';\n\t\t\tnSizer.childNodes[0].style.height = \"0\";\n\t\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\n\t\t\tnSizer.style.width = headerWidths[i];\n\t\t}, headerSrcEls );\n\t\n\t\tif ( footer )\n\t\t{\n\t\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+footerContent[i]+'</div>';\n\t\t\t\tnSizer.childNodes[0].style.height = \"0\";\n\t\t\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\n\t\t\t\tnSizer.style.width = footerWidths[i];\n\t\t\t}, footerSrcEls );\n\t\t}\n\t\n\t\t// Sanity check that the table is of a sensible width. If not then we are going to get\n\t\t// misalignment - try to prevent this by not allowing the table to shrink below its min width\n\t\tif ( Math.round(table.outerWidth()) < Math.round(sanityWidth) )\n\t\t{\n\t\t\t// The min width depends upon if we have a vertical scrollbar visible or not */\n\t\t\tcorrection = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||\n\t\t\t\tdivBody.css('overflow-y') == \"scroll\")) ?\n\t\t\t\t\tsanityWidth+barWidth :\n\t\t\t\t\tsanityWidth;\n\t\n\t\t\t// IE6/7 are a law unto themselves...\n\t\t\tif ( ie67 && (divBodyEl.scrollHeight >\n\t\t\t\tdivBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")\n\t\t\t) {\n\t\t\t\ttableStyle.width = _fnStringToCss( correction-barWidth );\n\t\t\t}\n\t\n\t\t\t// And give the user a warning that we've stopped the table getting too small\n\t\t\tif ( scrollX === \"\" || scrollXInner !== \"\" ) {\n\t\t\t\t_fnLog( settings, 1, 'Possible column misalignment', 6 );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcorrection = '100%';\n\t\t}\n\t\n\t\t// Apply to the container elements\n\t\tdivBodyStyle.width = _fnStringToCss( correction );\n\t\tdivHeaderStyle.width = _fnStringToCss( correction );\n\t\n\t\tif ( footer ) {\n\t\t\tsettings.nScrollFoot.style.width = _fnStringToCss( correction );\n\t\t}\n\t\n\t\n\t\t/*\n\t\t * 4. Clean up\n\t\t */\n\t\tif ( ! scrollY ) {\n\t\t\t/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\n\t\t\t * the scrollbar height from the visible display, rather than adding it on. We need to\n\t\t\t * set the height in order to sort this. Don't want to do it in any other browsers.\n\t\t\t */\n\t\t\tif ( ie67 ) {\n\t\t\t\tdivBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Finally set the width's of the header and footer tables */\n\t\tvar iOuterWidth = table.outerWidth();\n\t\tdivHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );\n\t\tdivHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );\n\t\n\t\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\n\t\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\t\tvar bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n\t\tvar padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\n\t\tdivHeaderInnerStyle[ padding ] = bScrolling ? barWidth+\"px\" : \"0px\";\n\t\n\t\tif ( footer ) {\n\t\t\tdivFooterTable[0].style.width = _fnStringToCss( iOuterWidth );\n\t\t\tdivFooterInner[0].style.width = _fnStringToCss( iOuterWidth );\n\t\t\tdivFooterInner[0].style[padding] = bScrolling ? barWidth+\"px\" : \"0px\";\n\t\t}\n\t\n\t\t// Correct DOM ordering for colgroup - comes before the thead\n\t\ttable.children('colgroup').insertBefore( table.children('thead') );\n\t\n\t\t/* Adjust the position of the header in case we loose the y-scrollbar */\n\t\tdivBody.trigger('scroll');\n\t\n\t\t// If sorting or filtering has occurred, jump the scrolling back to the top\n\t\t// only if we aren't holding the position\n\t\tif ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\n\t\t\tdivBodyEl.scrollTop = 0;\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Apply a given function to the display child nodes of an element array (typically\n\t * TD children of TR rows\n\t *  @param {function} fn Method to apply to the objects\n\t *  @param array {nodes} an1 List of elements to look through for display children\n\t *  @param array {nodes} an2 Another list (identical structure to the first) - optional\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyToChildren( fn, an1, an2 )\n\t{\n\t\tvar index=0, i=0, iLen=an1.length;\n\t\tvar nNode1, nNode2;\n\t\n\t\twhile ( i < iLen ) {\n\t\t\tnNode1 = an1[i].firstChild;\n\t\t\tnNode2 = an2 ? an2[i].firstChild : null;\n\t\n\t\t\twhile ( nNode1 ) {\n\t\t\t\tif ( nNode1.nodeType === 1 ) {\n\t\t\t\t\tif ( an2 ) {\n\t\t\t\t\t\tfn( nNode1, nNode2, index );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfn( nNode1, index );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\n\t\t\t\tnNode1 = nNode1.nextSibling;\n\t\t\t\tnNode2 = an2 ? nNode2.nextSibling : null;\n\t\t\t}\n\t\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\t\n\t\n\tvar __re_html_remove = /<.*?>/g;\n\t\n\t\n\t/**\n\t * Calculate the width of columns for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCalculateColumnWidths ( oSettings )\n\t{\n\t\tvar\n\t\t\ttable = oSettings.nTable,\n\t\t\tcolumns = oSettings.aoColumns,\n\t\t\tscroll = oSettings.oScroll,\n\t\t\tscrollY = scroll.sY,\n\t\t\tscrollX = scroll.sX,\n\t\t\tscrollXInner = scroll.sXInner,\n\t\t\tcolumnCount = columns.length,\n\t\t\tvisibleColumns = _fnGetColumns( oSettings, 'bVisible' ),\n\t\t\theaderCells = $('th', oSettings.nTHead),\n\t\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\n\t\t\ttableContainer = table.parentNode,\n\t\t\tuserInputs = false,\n\t\t\ti, column, columnIdx, width, outerWidth,\n\t\t\tbrowser = oSettings.oBrowser,\n\t\t\tie67 = browser.bScrollOversize;\n\t\n\t\tvar styleWidth = table.style.width;\n\t\tif ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\n\t\t\ttableWidthAttr = styleWidth;\n\t\t}\n\t\n\t\t/* Convert any user input sizes into pixel sizes */\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\tcolumn = columns[ visibleColumns[i] ];\n\t\n\t\t\tif ( column.sWidth !== null ) {\n\t\t\t\tcolumn.sWidth = _fnConvertToWidth( column.sWidthOrig, tableContainer );\n\t\n\t\t\t\tuserInputs = true;\n\t\t\t}\n\t\t}\n\t\n\t\t/* If the number of columns in the DOM equals the number that we have to\n\t\t * process in DataTables, then we can use the offsets that are created by\n\t\t * the web- browser. No custom sizes can be set in order for this to happen,\n\t\t * nor scrolling used\n\t\t */\n\t\tif ( ie67 || ! userInputs && ! scrollX && ! scrollY &&\n\t\t     columnCount == _fnVisbleColumns( oSettings ) &&\n\t\t     columnCount == headerCells.length\n\t\t) {\n\t\t\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\t\t\tvar colIdx = _fnVisibleToColumnIndex( oSettings, i );\n\t\n\t\t\t\tif ( colIdx !== null ) {\n\t\t\t\t\tcolumns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Otherwise construct a single row, worst case, table with the widest\n\t\t\t// node in the data, assign any user defined widths, then insert it into\n\t\t\t// the DOM and allow the browser to do all the hard work of calculating\n\t\t\t// table widths\n\t\t\tvar tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\n\t\t\t\t.css( 'visibility', 'hidden' )\n\t\t\t\t.removeAttr( 'id' );\n\t\n\t\t\t// Clean up the table body\n\t\t\ttmpTable.find('tbody tr').remove();\n\t\t\tvar tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\n\t\n\t\t\t// Clone the table header and footer - we can't use the header / footer\n\t\t\t// from the cloned table, since if scrolling is active, the table's\n\t\t\t// real header and footer are contained in different table tags\n\t\t\ttmpTable.find('thead, tfoot').remove();\n\t\t\ttmpTable\n\t\t\t\t.append( $(oSettings.nTHead).clone() )\n\t\t\t\t.append( $(oSettings.nTFoot).clone() );\n\t\n\t\t\t// Remove any assigned widths from the footer (from scrolling)\n\t\t\ttmpTable.find('tfoot th, tfoot td').css('width', '');\n\t\n\t\t\t// Apply custom sizing to the cloned header\n\t\t\theaderCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );\n\t\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\tcolumn = columns[ visibleColumns[i] ];\n\t\n\t\t\t\theaderCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?\n\t\t\t\t\t_fnStringToCss( column.sWidthOrig ) :\n\t\t\t\t\t'';\n\t\n\t\t\t\t// For scrollX we need to force the column width otherwise the\n\t\t\t\t// browser will collapse it. If this width is smaller than the\n\t\t\t\t// width the column requires, then it will have no effect\n\t\t\t\tif ( column.sWidthOrig && scrollX ) {\n\t\t\t\t\t$( headerCells[i] ).append( $('<div/>').css( {\n\t\t\t\t\t\twidth: column.sWidthOrig,\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\theight: 1\n\t\t\t\t\t} ) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Find the widest cell for each column and put it into the table\n\t\t\tif ( oSettings.aoData.length ) {\n\t\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\t\tcolumnIdx = visibleColumns[i];\n\t\t\t\t\tcolumn = columns[ columnIdx ];\n\t\n\t\t\t\t\t$( _fnGetWidestNode( oSettings, columnIdx ) )\n\t\t\t\t\t\t.clone( false )\n\t\t\t\t\t\t.append( column.sContentPadding )\n\t\t\t\t\t\t.appendTo( tr );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Tidy the temporary table - remove name attributes so there aren't\n\t\t\t// duplicated in the dom (radio elements for example)\n\t\t\t$('[name]', tmpTable).removeAttr('name');\n\t\n\t\t\t// Table has been built, attach to the document so we can work with it.\n\t\t\t// A holding element is used, positioned at the top of the container\n\t\t\t// with minimal height, so it has no effect on if the container scrolls\n\t\t\t// or not. Otherwise it might trigger scrolling when it actually isn't\n\t\t\t// needed\n\t\t\tvar holder = $('<div/>').css( scrollX || scrollY ?\n\t\t\t\t\t{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\theight: 1,\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t} :\n\t\t\t\t\t{}\n\t\t\t\t)\n\t\t\t\t.append( tmpTable )\n\t\t\t\t.appendTo( tableContainer );\n\t\n\t\t\t// When scrolling (X or Y) we want to set the width of the table as \n\t\t\t// appropriate. However, when not scrolling leave the table width as it\n\t\t\t// is. This results in slightly different, but I think correct behaviour\n\t\t\tif ( scrollX && scrollXInner ) {\n\t\t\t\ttmpTable.width( scrollXInner );\n\t\t\t}\n\t\t\telse if ( scrollX ) {\n\t\t\t\ttmpTable.css( 'width', 'auto' );\n\t\t\t\ttmpTable.removeAttr('width');\n\t\n\t\t\t\t// If there is no width attribute or style, then allow the table to\n\t\t\t\t// collapse\n\t\t\t\tif ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {\n\t\t\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( scrollY ) {\n\t\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t\t}\n\t\t\telse if ( tableWidthAttr ) {\n\t\t\t\ttmpTable.width( tableWidthAttr );\n\t\t\t}\n\t\n\t\t\t// Get the width of each column in the constructed table - we need to\n\t\t\t// know the inner width (so it can be assigned to the other table's\n\t\t\t// cells) and the outer width so we can calculate the full width of the\n\t\t\t// table. This is safe since DataTables requires a unique cell for each\n\t\t\t// column, but if ever a header can span multiple columns, this will\n\t\t\t// need to be modified.\n\t\t\tvar total = 0;\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\tvar cell = $(headerCells[i]);\n\t\t\t\tvar border = cell.outerWidth() - cell.width();\n\t\n\t\t\t\t// Use getBounding... where possible (not IE8-) because it can give\n\t\t\t\t// sub-pixel accuracy, which we then want to round up!\n\t\t\t\tvar bounding = browser.bBounding ?\n\t\t\t\t\tMath.ceil( headerCells[i].getBoundingClientRect().width ) :\n\t\t\t\t\tcell.outerWidth();\n\t\n\t\t\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\n\t\t\t\t// of the table might not equal the total given here (IE!).\n\t\t\t\ttotal += bounding;\n\t\n\t\t\t\t// Width for each column to use\n\t\t\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );\n\t\t\t}\n\t\n\t\t\ttable.style.width = _fnStringToCss( total );\n\t\n\t\t\t// Finished with the table - ditch it\n\t\t\tholder.remove();\n\t\t}\n\t\n\t\t// If there is a width attr, we want to attach an event listener which\n\t\t// allows the table sizing to automatically adjust when the window is\n\t\t// resized. Use the width attr rather than CSS, since we can't know if the\n\t\t// CSS is a relative value or absolute - DOM read is always px.\n\t\tif ( tableWidthAttr ) {\n\t\t\ttable.style.width = _fnStringToCss( tableWidthAttr );\n\t\t}\n\t\n\t\tif ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {\n\t\t\tvar bindResize = function () {\n\t\t\t\t$(window).on('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {\n\t\t\t\t\t_fnAdjustColumnSizing( oSettings );\n\t\t\t\t} ) );\n\t\t\t};\n\t\n\t\t\t// IE6/7 will crash if we bind a resize event handler on page load.\n\t\t\t// To be removed in 1.11 which drops IE6/7 support\n\t\t\tif ( ie67 ) {\n\t\t\t\tsetTimeout( bindResize, 1000 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbindResize();\n\t\t\t}\n\t\n\t\t\toSettings._reszEvt = true;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Throttle the calls to a function. Arguments and context are maintained for\n\t * the throttled function\n\t *  @param {function} fn Function to be called\n\t *  @param {int} [freq=200] call frequency in mS\n\t *  @returns {function} wrapped function\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnThrottle = DataTable.util.throttle;\n\t\n\t\n\t/**\n\t * Convert a CSS unit width to pixels (e.g. 2em)\n\t *  @param {string} width width to be converted\n\t *  @param {node} parent parent to get the with for (required for relative widths) - optional\n\t *  @returns {int} width in pixels\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnConvertToWidth ( width, parent )\n\t{\n\t\tif ( ! width ) {\n\t\t\treturn 0;\n\t\t}\n\t\n\t\tvar n = $('<div/>')\n\t\t\t.css( 'width', _fnStringToCss( width ) )\n\t\t\t.appendTo( parent || document.body );\n\t\n\t\tvar val = n[0].offsetWidth;\n\t\tn.remove();\n\t\n\t\treturn val;\n\t}\n\t\n\t\n\t/**\n\t * Get the widest node\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} colIdx column of interest\n\t *  @returns {node} widest table node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetWidestNode( settings, colIdx )\n\t{\n\t\tvar idx = _fnGetMaxLenString( settings, colIdx );\n\t\tif ( idx < 0 ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tvar data = settings.aoData[ idx ];\n\t\treturn ! data.nTr ? // Might not have been created when deferred rendering\n\t\t\t$('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :\n\t\t\tdata.anCells[ colIdx ];\n\t}\n\t\n\t\n\t/**\n\t * Get the maximum strlen for each data column\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} colIdx column of interest\n\t *  @returns {string} max string length for each column\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetMaxLenString( settings, colIdx )\n\t{\n\t\tvar s, max=-1, maxIdx = -1;\n\t\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\ts = _fnGetCellData( settings, i, colIdx, 'display' )+'';\n\t\t\ts = s.replace( __re_html_remove, '' );\n\t\t\ts = s.replace( /&nbsp;/g, ' ' );\n\t\n\t\t\tif ( s.length > max ) {\n\t\t\t\tmax = s.length;\n\t\t\t\tmaxIdx = i;\n\t\t\t}\n\t\t}\n\t\n\t\treturn maxIdx;\n\t}\n\t\n\t\n\t/**\n\t * Append a CSS unit (only if required) to a string\n\t *  @param {string} value to css-ify\n\t *  @returns {string} value with css unit\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnStringToCss( s )\n\t{\n\t\tif ( s === null ) {\n\t\t\treturn '0px';\n\t\t}\n\t\n\t\tif ( typeof s == 'number' ) {\n\t\t\treturn s < 0 ?\n\t\t\t\t'0px' :\n\t\t\t\ts+'px';\n\t\t}\n\t\n\t\t// Check it has a unit character already\n\t\treturn s.match(/\\d$/) ?\n\t\t\ts+'px' :\n\t\t\ts;\n\t}\n\t\n\t\n\t\n\tfunction _fnSortFlatten ( settings )\n\t{\n\t\tvar\n\t\t\ti, iLen, k, kLen,\n\t\t\taSort = [],\n\t\t\taiOrig = [],\n\t\t\taoColumns = settings.aoColumns,\n\t\t\taDataSort, iCol, sType, srcCol,\n\t\t\tfixed = settings.aaSortingFixed,\n\t\t\tfixedObj = $.isPlainObject( fixed ),\n\t\t\tnestedSort = [],\n\t\t\tadd = function ( a ) {\n\t\t\t\tif ( a.length && ! Array.isArray( a[0] ) ) {\n\t\t\t\t\t// 1D array\n\t\t\t\t\tnestedSort.push( a );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// 2D array\n\t\t\t\t\t$.merge( nestedSort, a );\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t// Build the sort array, with pre-fix and post-fix options if they have been\n\t\t// specified\n\t\tif ( Array.isArray( fixed ) ) {\n\t\t\tadd( fixed );\n\t\t}\n\t\n\t\tif ( fixedObj && fixed.pre ) {\n\t\t\tadd( fixed.pre );\n\t\t}\n\t\n\t\tadd( settings.aaSorting );\n\t\n\t\tif (fixedObj && fixed.post ) {\n\t\t\tadd( fixed.post );\n\t\t}\n\t\n\t\tfor ( i=0 ; i<nestedSort.length ; i++ )\n\t\t{\n\t\t\tsrcCol = nestedSort[i][0];\n\t\t\taDataSort = aoColumns[ srcCol ].aDataSort;\n\t\n\t\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\n\t\t\t{\n\t\t\t\tiCol = aDataSort[k];\n\t\t\t\tsType = aoColumns[ iCol ].sType || 'string';\n\t\n\t\t\t\tif ( nestedSort[i]._idx === undefined ) {\n\t\t\t\t\tnestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );\n\t\t\t\t}\n\t\n\t\t\t\taSort.push( {\n\t\t\t\t\tsrc:       srcCol,\n\t\t\t\t\tcol:       iCol,\n\t\t\t\t\tdir:       nestedSort[i][1],\n\t\t\t\t\tindex:     nestedSort[i]._idx,\n\t\t\t\t\ttype:      sType,\n\t\t\t\t\tformatter: DataTable.ext.type.order[ sType+\"-pre\" ]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\n\t\treturn aSort;\n\t}\n\t\n\t/**\n\t * Change the order of the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t *  @todo This really needs split up!\n\t */\n\tfunction _fnSort ( oSettings )\n\t{\n\t\tvar\n\t\t\ti, ien, iLen, j, jLen, k, kLen,\n\t\t\tsDataType, nTh,\n\t\t\taiOrig = [],\n\t\t\toExtSort = DataTable.ext.type.order,\n\t\t\taoData = oSettings.aoData,\n\t\t\taoColumns = oSettings.aoColumns,\n\t\t\taDataSort, data, iCol, sType, oSort,\n\t\t\tformatters = 0,\n\t\t\tsortCol,\n\t\t\tdisplayMaster = oSettings.aiDisplayMaster,\n\t\t\taSort;\n\t\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t// @todo Can this be moved into a 'data-ready' handler which is called when\n\t\t//   data is going to be used in the table?\n\t\t_fnColumnTypes( oSettings );\n\t\n\t\taSort = _fnSortFlatten( oSettings );\n\t\n\t\tfor ( i=0, ien=aSort.length ; i<ien ; i++ ) {\n\t\t\tsortCol = aSort[i];\n\t\n\t\t\t// Track if we can use the fast sort algorithm\n\t\t\tif ( sortCol.formatter ) {\n\t\t\t\tformatters++;\n\t\t\t}\n\t\n\t\t\t// Load the data needed for the sort, for each cell\n\t\t\t_fnSortData( oSettings, sortCol.col );\n\t\t}\n\t\n\t\t/* No sorting required if server-side or no sorting array */\n\t\tif ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\n\t\t{\n\t\t\t// Create a value - key array of the current row positions such that we can use their\n\t\t\t// current position during the sort, if values match, in order to perform stable sorting\n\t\t\tfor ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\n\t\t\t\taiOrig[ displayMaster[i] ] = i;\n\t\t\t}\n\t\n\t\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\n\t\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n\t\t\t * follow on it's own, but this is what we want (example two column sorting):\n\t\t\t *  fnLocalSorting = function(a,b){\n\t\t\t *    var iTest;\n\t\t\t *    iTest = oSort['string-asc']('data11', 'data12');\n\t\t\t *      if (iTest !== 0)\n\t\t\t *        return iTest;\n\t\t\t *    iTest = oSort['numeric-desc']('data21', 'data22');\n\t\t\t *    if (iTest !== 0)\n\t\t\t *      return iTest;\n\t\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t\t *  }\n\t\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\n\t\t\t * test the next column. If all columns match, then we use a numeric sort on the row\n\t\t\t * positions in the original data array to provide a stable sort.\n\t\t\t *\n\t\t\t * Note - I know it seems excessive to have two sorting methods, but the first is around\n\t\t\t * 15% faster, so the second is only maintained for backwards compatibility with sorting\n\t\t\t * methods which do not have a pre-sort formatting function.\n\t\t\t */\n\t\t\tif ( formatters === aSort.length ) {\n\t\t\t\t// All sort types have formatting functions\n\t\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tx, y, k, test, sort,\n\t\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\t\tdataB = aoData[b]._aSortData;\n\t\n\t\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\t\tsort = aSort[k];\n\t\n\t\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\t\ty = dataB[ sort.col ];\n\t\n\t\t\t\t\t\ttest = x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tx = aiOrig[a];\n\t\t\t\t\ty = aiOrig[b];\n\t\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Depreciated - remove in 1.11 (providing a plug-in option)\n\t\t\t\t// Not all sort types have formatting methods, so we have to call their sorting\n\t\t\t\t// methods.\n\t\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tx, y, k, l, test, sort, fn,\n\t\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\t\tdataB = aoData[b]._aSortData;\n\t\n\t\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\t\tsort = aSort[k];\n\t\n\t\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\t\ty = dataB[ sort.col ];\n\t\n\t\t\t\t\t\tfn = oExtSort[ sort.type+\"-\"+sort.dir ] || oExtSort[ \"string-\"+sort.dir ];\n\t\t\t\t\t\ttest = fn( x, y );\n\t\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\t\treturn test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tx = aiOrig[a];\n\t\t\t\t\ty = aiOrig[b];\n\t\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Tell the draw function that we have sorted the data */\n\t\toSettings.bSorted = true;\n\t}\n\t\n\t\n\tfunction _fnSortAria ( settings )\n\t{\n\t\tvar label;\n\t\tvar nextSort;\n\t\tvar columns = settings.aoColumns;\n\t\tvar aSort = _fnSortFlatten( settings );\n\t\tvar oAria = settings.oLanguage.oAria;\n\t\n\t\t// ARIA attributes - need to loop all columns, to update all (removing old\n\t\t// attributes as needed)\n\t\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar col = columns[i];\n\t\t\tvar asSorting = col.asSorting;\n\t\t\tvar sTitle = col.ariaTitle || col.sTitle.replace( /<.*?>/g, \"\" );\n\t\t\tvar th = col.nTh;\n\t\n\t\t\t// IE7 is throwing an error when setting these properties with jQuery's\n\t\t\t// attr() and removeAttr() methods...\n\t\t\tth.removeAttribute('aria-sort');\n\t\n\t\t\t/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n\t\t\tif ( col.bSortable ) {\n\t\t\t\tif ( aSort.length > 0 && aSort[0].col == i ) {\n\t\t\t\t\tth.setAttribute('aria-sort', aSort[0].dir==\"asc\" ? \"ascending\" : \"descending\" );\n\t\t\t\t\tnextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnextSort = asSorting[0];\n\t\t\t\t}\n\t\n\t\t\t\tlabel = sTitle + ( nextSort === \"asc\" ?\n\t\t\t\t\toAria.sSortAscending :\n\t\t\t\t\toAria.sSortDescending\n\t\t\t\t);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlabel = sTitle;\n\t\t\t}\n\t\n\t\t\tth.setAttribute('aria-label', label);\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Function to run on user sort request\n\t *  @param {object} settings dataTables settings object\n\t *  @param {node} attachTo node to attach the handler to\n\t *  @param {int} colIdx column sorting index\n\t *  @param {boolean} [append=false] Append the requested sort to the existing\n\t *    sort if true (i.e. multi-column sort)\n\t *  @param {function} [callback] callback function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortListener ( settings, colIdx, append, callback )\n\t{\n\t\tvar col = settings.aoColumns[ colIdx ];\n\t\tvar sorting = settings.aaSorting;\n\t\tvar asSorting = col.asSorting;\n\t\tvar nextSortIdx;\n\t\tvar next = function ( a, overflow ) {\n\t\t\tvar idx = a._idx;\n\t\t\tif ( idx === undefined ) {\n\t\t\t\tidx = $.inArray( a[1], asSorting );\n\t\t\t}\n\t\n\t\t\treturn idx+1 < asSorting.length ?\n\t\t\t\tidx+1 :\n\t\t\t\toverflow ?\n\t\t\t\t\tnull :\n\t\t\t\t\t0;\n\t\t};\n\t\n\t\t// Convert to 2D array if needed\n\t\tif ( typeof sorting[0] === 'number' ) {\n\t\t\tsorting = settings.aaSorting = [ sorting ];\n\t\t}\n\t\n\t\t// If appending the sort then we are multi-column sorting\n\t\tif ( append && settings.oFeatures.bSortMulti ) {\n\t\t\t// Are we already doing some kind of sort on this column?\n\t\t\tvar sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );\n\t\n\t\t\tif ( sortIdx !== -1 ) {\n\t\t\t\t// Yes, modify the sort\n\t\t\t\tnextSortIdx = next( sorting[sortIdx], true );\n\t\n\t\t\t\tif ( nextSortIdx === null && sorting.length === 1 ) {\n\t\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\n\t\t\t\t}\n\t\n\t\t\t\tif ( nextSortIdx === null ) {\n\t\t\t\t\tsorting.splice( sortIdx, 1 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\n\t\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// No sort on this column yet\n\t\t\t\tsorting.push( [ colIdx, asSorting[0], 0 ] );\n\t\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( sorting.length && sorting[0][0] == colIdx ) {\n\t\t\t// Single column - already sorting on this column, modify the sort\n\t\t\tnextSortIdx = next( sorting[0] );\n\t\n\t\t\tsorting.length = 1;\n\t\t\tsorting[0][1] = asSorting[ nextSortIdx ];\n\t\t\tsorting[0]._idx = nextSortIdx;\n\t\t}\n\t\telse {\n\t\t\t// Single column - sort only on this column\n\t\t\tsorting.length = 0;\n\t\t\tsorting.push( [ colIdx, asSorting[0] ] );\n\t\t\tsorting[0]._idx = 0;\n\t\t}\n\t\n\t\t// Run the sort by calling a full redraw\n\t\t_fnReDraw( settings );\n\t\n\t\t// callback used for async user interaction\n\t\tif ( typeof callback == 'function' ) {\n\t\t\tcallback( settings );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Attach a sort handler (click) to a node\n\t *  @param {object} settings dataTables settings object\n\t *  @param {node} attachTo node to attach the handler to\n\t *  @param {int} colIdx column sorting index\n\t *  @param {function} [callback] callback function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortAttachListener ( settings, attachTo, colIdx, callback )\n\t{\n\t\tvar col = settings.aoColumns[ colIdx ];\n\t\n\t\t_fnBindAction( attachTo, {}, function (e) {\n\t\t\t/* If the column is not sortable - don't to anything */\n\t\t\tif ( col.bSortable === false ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If processing is enabled use a timeout to allow the processing\n\t\t\t// display to be shown - otherwise to it synchronously\n\t\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\t\n\t\t\t\t\t// In server-side processing, the draw callback will remove the\n\t\t\t\t\t// processing display\n\t\t\t\t\tif ( _fnDataSource( settings ) !== 'ssp' ) {\n\t\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t\t}\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\t\t\t}\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Set the sorting classes on table's body, Note: it is safe to call this function\n\t * when bSort and bSortClasses are false\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortingClasses( settings )\n\t{\n\t\tvar oldSort = settings.aLastSort;\n\t\tvar sortClass = settings.oClasses.sSortColumn;\n\t\tvar sort = _fnSortFlatten( settings );\n\t\tvar features = settings.oFeatures;\n\t\tvar i, ien, colIdx;\n\t\n\t\tif ( features.bSort && features.bSortClasses ) {\n\t\t\t// Remove old sorting classes\n\t\t\tfor ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\n\t\t\t\tcolIdx = oldSort[i].src;\n\t\n\t\t\t\t// Remove column sorting\n\t\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t\t.removeClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t\t}\n\t\n\t\t\t// Add new column sorting\n\t\t\tfor ( i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\t\tcolIdx = sort[i].src;\n\t\n\t\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t\t.addClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t\t}\n\t\t}\n\t\n\t\tsettings.aLastSort = sort;\n\t}\n\t\n\t\n\t// Get the data to sort a column, be it from cache, fresh (populating the\n\t// cache), or from a sort formatter\n\tfunction _fnSortData( settings, idx )\n\t{\n\t\t// Custom sorting function - provided by the sort data type\n\t\tvar column = settings.aoColumns[ idx ];\n\t\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\n\t\tvar customData;\n\t\n\t\tif ( customSort ) {\n\t\t\tcustomData = customSort.call( settings.oInstance, settings, idx,\n\t\t\t\t_fnColumnIndexToVisible( settings, idx )\n\t\t\t);\n\t\t}\n\t\n\t\t// Use / populate cache\n\t\tvar row, cellData;\n\t\tvar formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\n\t\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\trow = settings.aoData[i];\n\t\n\t\t\tif ( ! row._aSortData ) {\n\t\t\t\trow._aSortData = [];\n\t\t\t}\n\t\n\t\t\tif ( ! row._aSortData[idx] || customSort ) {\n\t\t\t\tcellData = customSort ?\n\t\t\t\t\tcustomData[i] : // If there was a custom sort function, use data from there\n\t\t\t\t\t_fnGetCellData( settings, i, idx, 'sort' );\n\t\n\t\t\t\trow._aSortData[ idx ] = formatter ?\n\t\t\t\t\tformatter( cellData ) :\n\t\t\t\t\tcellData;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Save the state of a table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSaveState ( settings )\n\t{\n\t\tif (settings._bLoadingState) {\n\t\t\treturn;\n\t\t}\n\t\n\t\t/* Store the interesting variables */\n\t\tvar state = {\n\t\t\ttime:    +new Date(),\n\t\t\tstart:   settings._iDisplayStart,\n\t\t\tlength:  settings._iDisplayLength,\n\t\t\torder:   $.extend( true, [], settings.aaSorting ),\n\t\t\tsearch:  _fnSearchToCamel( settings.oPreviousSearch ),\n\t\t\tcolumns: $.map( settings.aoColumns, function ( col, i ) {\n\t\t\t\treturn {\n\t\t\t\t\tvisible: col.bVisible,\n\t\t\t\t\tsearch: _fnSearchToCamel( settings.aoPreSearchCols[i] )\n\t\t\t\t};\n\t\t\t} )\n\t\t};\n\t\n\t\tsettings.oSavedState = state;\n\t\t_fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\n\t\t\n\t\tif ( settings.oFeatures.bStateSave && !settings.bDestroying )\n\t\t{\n\t\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, state );\n\t\t}\t\n\t}\n\t\n\t\n\t/**\n\t * Attempt to load a saved table state\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} oInit DataTables init object so we can override settings\n\t *  @param {function} callback Callback to execute when the state has been loaded\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLoadState ( settings, oInit, callback )\n\t{\n\t\tif ( ! settings.oFeatures.bStateSave ) {\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar loaded = function(state) {\n\t\t\t_fnImplementState(settings, state, callback);\n\t\t}\n\t\n\t\tvar state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );\n\t\n\t\tif ( state !== undefined ) {\n\t\t\t_fnImplementState( settings, state, callback );\n\t\t}\n\t\t// otherwise, wait for the loaded callback to be executed\n\t\n\t\treturn true;\n\t}\n\t\n\tfunction _fnImplementState ( settings, s, callback) {\n\t\tvar i, ien;\n\t\tvar columns = settings.aoColumns;\n\t\tsettings._bLoadingState = true;\n\t\n\t\t// When StateRestore was introduced the state could now be implemented at any time\n\t\t// Not just initialisation. To do this an api instance is required in some places\n\t\tvar api = settings._bInitComplete ? new DataTable.Api(settings) : null;\n\t\n\t\tif ( ! s || ! s.time ) {\n\t\t\tsettings._bLoadingState = false;\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Allow custom and plug-in manipulation functions to alter the saved data set and\n\t\t// cancelling of loading by returning false\n\t\tvar abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );\n\t\tif ( $.inArray( false, abStateLoad ) !== -1 ) {\n\t\t\tsettings._bLoadingState = false;\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Reject old data\n\t\tvar duration = settings.iStateDuration;\n\t\tif ( duration > 0 && s.time < +new Date() - (duration*1000) ) {\n\t\t\tsettings._bLoadingState = false;\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Number of columns have changed - all bets are off, no restore of settings\n\t\tif ( s.columns && columns.length !== s.columns.length ) {\n\t\t\tsettings._bLoadingState = false;\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Store the saved state so it might be accessed at any time\n\t\tsettings.oLoadedState = $.extend( true, {}, s );\n\t\n\t\t// Page Length\n\t\tif ( s.length !== undefined ) {\n\t\t\t// If already initialised just set the value directly so that the select element is also updated\n\t\t\tif (api) {\n\t\t\t\tapi.page.len(s.length)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsettings._iDisplayLength   = s.length;\n\t\t\t}\n\t\t}\n\t\n\t\t// Restore key features - todo - for 1.11 this needs to be done by\n\t\t// subscribed events\n\t\tif ( s.start !== undefined ) {\n\t\t\tif(api === null) {\n\t\t\t\tsettings._iDisplayStart    = s.start;\n\t\t\t\tsettings.iInitDisplayStart = s.start;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnPageChange(settings, s.start/settings._iDisplayLength);\n\t\t\t}\n\t\t}\n\t\n\t\t// Order\n\t\tif ( s.order !== undefined ) {\n\t\t\tsettings.aaSorting = [];\n\t\t\t$.each( s.order, function ( i, col ) {\n\t\t\t\tsettings.aaSorting.push( col[0] >= columns.length ?\n\t\t\t\t\t[ 0, col[1] ] :\n\t\t\t\t\tcol\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\t\n\t\t// Search\n\t\tif ( s.search !== undefined ) {\n\t\t\t$.extend( settings.oPreviousSearch, _fnSearchToHung( s.search ) );\n\t\t}\n\t\n\t\t// Columns\n\t\tif ( s.columns ) {\n\t\t\tfor ( i=0, ien=s.columns.length ; i<ien ; i++ ) {\n\t\t\t\tvar col = s.columns[i];\n\t\n\t\t\t\t// Visibility\n\t\t\t\tif ( col.visible !== undefined ) {\n\t\t\t\t\t// If the api is defined, the table has been initialised so we need to use it rather than internal settings\n\t\t\t\t\tif (api) {\n\t\t\t\t\t\t// Don't redraw the columns on every iteration of this loop, we will do this at the end instead\n\t\t\t\t\t\tapi.column(i).visible(col.visible, false);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcolumns[i].bVisible = col.visible;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Search\n\t\t\t\tif ( col.search !== undefined ) {\n\t\t\t\t\t$.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// If the api is defined then we need to adjust the columns once the visibility has been changed\n\t\t\tif (api) {\n\t\t\t\tapi.columns.adjust();\n\t\t\t}\n\t\t}\n\t\n\t\tsettings._bLoadingState = false;\n\t\t_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );\n\t\tcallback();\n\t};\n\t\n\t\n\t/**\n\t * Return the settings object for a particular table\n\t *  @param {node} table table we are using as a dataTable\n\t *  @returns {object} Settings object - or null if not found\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSettingsFromNode ( table )\n\t{\n\t\tvar settings = DataTable.settings;\n\t\tvar idx = $.inArray( table, _pluck( settings, 'nTable' ) );\n\t\n\t\treturn idx !== -1 ?\n\t\t\tsettings[ idx ] :\n\t\t\tnull;\n\t}\n\t\n\t\n\t/**\n\t * Log an error message\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} level log error messages, or display them to the user\n\t *  @param {string} msg error message\n\t *  @param {int} tn Technical note id to get more information about the error.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLog( settings, level, msg, tn )\n\t{\n\t\tmsg = 'DataTables warning: '+\n\t\t\t(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\n\t\n\t\tif ( tn ) {\n\t\t\tmsg += '. For more information about this error, please see '+\n\t\t\t'http://datatables.net/tn/'+tn;\n\t\t}\n\t\n\t\tif ( ! level  ) {\n\t\t\t// Backwards compatibility pre 1.10\n\t\t\tvar ext = DataTable.ext;\n\t\t\tvar type = ext.sErrMode || ext.errMode;\n\t\n\t\t\tif ( settings ) {\n\t\t\t\t_fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );\n\t\t\t}\n\t\n\t\t\tif ( type == 'alert' ) {\n\t\t\t\talert( msg );\n\t\t\t}\n\t\t\telse if ( type == 'throw' ) {\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\t\t\telse if ( typeof type == 'function' ) {\n\t\t\t\ttype( settings, tn, msg );\n\t\t\t}\n\t\t}\n\t\telse if ( window.console && console.log ) {\n\t\t\tconsole.log( msg );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * See if a property is defined on one object, if so assign it to the other object\n\t *  @param {object} ret target object\n\t *  @param {object} src source object\n\t *  @param {string} name property\n\t *  @param {string} [mappedName] name to map too - optional, name used if not given\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnMap( ret, src, name, mappedName )\n\t{\n\t\tif ( Array.isArray( name ) ) {\n\t\t\t$.each( name, function (i, val) {\n\t\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t\t_fnMap( ret, src, val[0], val[1] );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_fnMap( ret, src, val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( mappedName === undefined ) {\n\t\t\tmappedName = name;\n\t\t}\n\t\n\t\tif ( src[name] !== undefined ) {\n\t\t\tret[mappedName] = src[name];\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n\t * shallow copy arrays. The reason we need to do this, is that we don't want to\n\t * deep copy array init values (such as aaSorting) since the dev wouldn't be\n\t * able to override them, but we do want to deep copy arrays.\n\t *  @param {object} out Object to extend\n\t *  @param {object} extender Object from which the properties will be applied to\n\t *      out\n\t *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n\t *      independent copy with the exception of the `data` or `aaData` parameters\n\t *      if they are present. This is so you can pass in a collection to\n\t *      DataTables and have that used as your data source without breaking the\n\t *      references\n\t *  @returns {object} out Reference, just for convenience - out === the return.\n\t *  @memberof DataTable#oApi\n\t *  @todo This doesn't take account of arrays inside the deep copied objects.\n\t */\n\tfunction _fnExtend( out, extender, breakRefs )\n\t{\n\t\tvar val;\n\t\n\t\tfor ( var prop in extender ) {\n\t\t\tif ( extender.hasOwnProperty(prop) ) {\n\t\t\t\tval = extender[prop];\n\t\n\t\t\t\tif ( $.isPlainObject( val ) ) {\n\t\t\t\t\tif ( ! $.isPlainObject( out[prop] ) ) {\n\t\t\t\t\t\tout[prop] = {};\n\t\t\t\t\t}\n\t\t\t\t\t$.extend( true, out[prop], val );\n\t\t\t\t}\n\t\t\t\telse if ( breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val) ) {\n\t\t\t\t\tout[prop] = val.slice();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout[prop] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t}\n\t\n\t\n\t/**\n\t * Bind an event handers to allow a click or return key to activate the callback.\n\t * This is good for accessibility since a return on the keyboard will have the\n\t * same effect as a click, if the element has focus.\n\t *  @param {element} n Element to bind the action to\n\t *  @param {object} oData Data object to pass to the triggered function\n\t *  @param {function} fn Callback function for when the event is triggered\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBindAction( n, oData, fn )\n\t{\n\t\t$(n)\n\t\t\t.on( 'click.DT', oData, function (e) {\n\t\t\t\t\t$(n).trigger('blur'); // Remove focus outline for mouse users\n\t\t\t\t\tfn(e);\n\t\t\t\t} )\n\t\t\t.on( 'keypress.DT', oData, function (e){\n\t\t\t\t\tif ( e.which === 13 ) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tfn(e);\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t.on( 'selectstart.DT', function () {\n\t\t\t\t\t/* Take the brutal approach to cancelling text selection */\n\t\t\t\t\treturn false;\n\t\t\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Register a callback function. Easily allows a callback function to be added to\n\t * an array store of callback functions that can then all be called together.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n\t *  @param {function} fn Function to be called back\n\t *  @param {string} sName Identifying name for the callback (i.e. a label)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackReg( oSettings, sStore, fn, sName )\n\t{\n\t\tif ( fn )\n\t\t{\n\t\t\toSettings[sStore].push( {\n\t\t\t\t\"fn\": fn,\n\t\t\t\t\"sName\": sName\n\t\t\t} );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Fire callback functions and trigger events. Note that the loop over the\n\t * callback array store is done backwards! Further note that you do not want to\n\t * fire off triggers in time sensitive applications (for example cell creation)\n\t * as its slow.\n\t *  @param {object} settings dataTables settings object\n\t *  @param {string} callbackArr Name of the array storage for the callbacks in\n\t *      oSettings\n\t *  @param {string} eventName Name of the jQuery custom event to trigger. If\n\t *      null no trigger is fired\n\t *  @param {array} args Array of arguments to pass to the callback function /\n\t *      trigger\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackFire( settings, callbackArr, eventName, args )\n\t{\n\t\tvar ret = [];\n\t\n\t\tif ( callbackArr ) {\n\t\t\tret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {\n\t\t\t\treturn val.fn.apply( settings.oInstance, args );\n\t\t\t} );\n\t\t}\n\t\n\t\tif ( eventName !== null ) {\n\t\t\tvar e = $.Event( eventName+'.dt' );\n\t\n\t\t\t$(settings.nTable).trigger( e, args );\n\t\n\t\t\tret.push( e.result );\n\t\t}\n\t\n\t\treturn ret;\n\t}\n\t\n\t\n\tfunction _fnLengthOverflow ( settings )\n\t{\n\t\tvar\n\t\t\tstart = settings._iDisplayStart,\n\t\t\tend = settings.fnDisplayEnd(),\n\t\t\tlen = settings._iDisplayLength;\n\t\n\t\t/* If we have space to show extra rows (backing up from the end point - then do so */\n\t\tif ( start >= end )\n\t\t{\n\t\t\tstart = end - len;\n\t\t}\n\t\n\t\t// Keep the start record on the current page\n\t\tstart -= (start % len);\n\t\n\t\tif ( len === -1 || start < 0 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\n\t\tsettings._iDisplayStart = start;\n\t}\n\t\n\t\n\tfunction _fnRenderer( settings, type )\n\t{\n\t\tvar renderer = settings.renderer;\n\t\tvar host = DataTable.ext.renderer[type];\n\t\n\t\tif ( $.isPlainObject( renderer ) && renderer[type] ) {\n\t\t\t// Specific renderer for this type. If available use it, otherwise use\n\t\t\t// the default.\n\t\t\treturn host[renderer[type]] || host._;\n\t\t}\n\t\telse if ( typeof renderer === 'string' ) {\n\t\t\t// Common renderer - if there is one available for this type use it,\n\t\t\t// otherwise use the default\n\t\t\treturn host[renderer] || host._;\n\t\t}\n\t\n\t\t// Use the default\n\t\treturn host._;\n\t}\n\t\n\t\n\t/**\n\t * Detect the data source being used for the table. Used to simplify the code\n\t * a little (ajax) and to make it compress a little smaller.\n\t *\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {string} Data source\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDataSource ( settings )\n\t{\n\t\tif ( settings.oFeatures.bServerSide ) {\n\t\t\treturn 'ssp';\n\t\t}\n\t\telse if ( settings.ajax || settings.sAjaxSource ) {\n\t\t\treturn 'ajax';\n\t\t}\n\t\treturn 'dom';\n\t}\n\t\n\t\n\t\n\t\n\t/**\n\t * Computed structure of the DataTables API, defined by the options passed to\n\t * `DataTable.Api.register()` when building the API.\n\t *\n\t * The structure is built in order to speed creation and extension of the Api\n\t * objects since the extensions are effectively pre-parsed.\n\t *\n\t * The array is an array of objects with the following structure, where this\n\t * base array represents the Api prototype base:\n\t *\n\t *     [\n\t *       {\n\t *         name:      'data'                -- string   - Property name\n\t *         val:       function () {},       -- function - Api method (or undefined if just an object\n\t *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t *       },\n\t *       {\n\t *         name:     'row'\n\t *         val:       {},\n\t *         methodExt: [ ... ],\n\t *         propExt:   [\n\t *           {\n\t *             name:      'data'\n\t *             val:       function () {},\n\t *             methodExt: [ ... ],\n\t *             propExt:   [ ... ]\n\t *           },\n\t *           ...\n\t *         ]\n\t *       }\n\t *     ]\n\t *\n\t * @type {Array}\n\t * @ignore\n\t */\n\tvar __apiStruct = [];\n\t\n\t\n\t/**\n\t * `Array.prototype` reference.\n\t *\n\t * @type object\n\t * @ignore\n\t */\n\tvar __arrayProto = Array.prototype;\n\t\n\t\n\t/**\n\t * Abstraction for `context` parameter of the `Api` constructor to allow it to\n\t * take several different forms for ease of use.\n\t *\n\t * Each of the input parameter types will be converted to a DataTables settings\n\t * object where possible.\n\t *\n\t * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n\t *   of:\n\t *\n\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t *     with be found and used.\n\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t *   * `object` - DataTables settings object\n\t *   * `DataTables.Api` - API instance\n\t * @return {array|null} Matching DataTables settings objects. `null` or\n\t *   `undefined` is returned if no matching DataTable is found.\n\t * @ignore\n\t */\n\tvar _toSettings = function ( mixed )\n\t{\n\t\tvar idx, jq;\n\t\tvar settings = DataTable.settings;\n\t\tvar tables = $.map( settings, function (el, i) {\n\t\t\treturn el.nTable;\n\t\t} );\n\t\n\t\tif ( ! mixed ) {\n\t\t\treturn [];\n\t\t}\n\t\telse if ( mixed.nTable && mixed.oApi ) {\n\t\t\t// DataTables settings object\n\t\t\treturn [ mixed ];\n\t\t}\n\t\telse if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\n\t\t\t// Table node\n\t\t\tidx = $.inArray( mixed, tables );\n\t\t\treturn idx !== -1 ? [ settings[idx] ] : null;\n\t\t}\n\t\telse if ( mixed && typeof mixed.settings === 'function' ) {\n\t\t\treturn mixed.settings().toArray();\n\t\t}\n\t\telse if ( typeof mixed === 'string' ) {\n\t\t\t// jQuery selector\n\t\t\tjq = $(mixed);\n\t\t}\n\t\telse if ( mixed instanceof $ ) {\n\t\t\t// jQuery object (also DataTables instance)\n\t\t\tjq = mixed;\n\t\t}\n\t\n\t\tif ( jq ) {\n\t\t\treturn jq.map( function(i) {\n\t\t\t\tidx = $.inArray( this, tables );\n\t\t\t\treturn idx !== -1 ? settings[idx] : null;\n\t\t\t} ).toArray();\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * DataTables API class - used to control and interface with  one or more\n\t * DataTables enhanced tables.\n\t *\n\t * The API class is heavily based on jQuery, presenting a chainable interface\n\t * that you can use to interact with tables. Each instance of the API class has\n\t * a \"context\" - i.e. the tables that it will operate on. This could be a single\n\t * table, all tables on a page or a sub-set thereof.\n\t *\n\t * Additionally the API is designed to allow you to easily work with the data in\n\t * the tables, retrieving and manipulating it as required. This is done by\n\t * presenting the API class as an array like interface. The contents of the\n\t * array depend upon the actions requested by each method (for example\n\t * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n\t * return an array of objects or arrays depending upon your table's\n\t * configuration). The API object has a number of array like methods (`push`,\n\t * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n\t * `unique` etc) to assist your working with the data held in a table.\n\t *\n\t * Most methods (those which return an Api instance) are chainable, which means\n\t * the return from a method call also has all of the methods available that the\n\t * top level object had. For example, these two calls are equivalent:\n\t *\n\t *     // Not chained\n\t *     api.row.add( {...} );\n\t *     api.draw();\n\t *\n\t *     // Chained\n\t *     api.row.add( {...} ).draw();\n\t *\n\t * @class DataTable.Api\n\t * @param {array|object|string|jQuery} context DataTable identifier. This is\n\t *   used to define which DataTables enhanced tables this API will operate on.\n\t *   Can be one of:\n\t *\n\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t *     with be found and used.\n\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t *   * `object` - DataTables settings object\n\t * @param {array} [data] Data to initialise the Api instance with.\n\t *\n\t * @example\n\t *   // Direct initialisation during DataTables construction\n\t *   var api = $('#example').DataTable();\n\t *\n\t * @example\n\t *   // Initialisation using a DataTables jQuery object\n\t *   var api = $('#example').dataTable().api();\n\t *\n\t * @example\n\t *   // Initialisation as a constructor\n\t *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\n\t */\n\t_Api = function ( context, data )\n\t{\n\t\tif ( ! (this instanceof _Api) ) {\n\t\t\treturn new _Api( context, data );\n\t\t}\n\t\n\t\tvar settings = [];\n\t\tvar ctxSettings = function ( o ) {\n\t\t\tvar a = _toSettings( o );\n\t\t\tif ( a ) {\n\t\t\t\tsettings.push.apply( settings, a );\n\t\t\t}\n\t\t};\n\t\n\t\tif ( Array.isArray( context ) ) {\n\t\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\t\tctxSettings( context[i] );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tctxSettings( context );\n\t\t}\n\t\n\t\t// Remove duplicates\n\t\tthis.context = _unique( settings );\n\t\n\t\t// Initial data\n\t\tif ( data ) {\n\t\t\t$.merge( this, data );\n\t\t}\n\t\n\t\t// selector\n\t\tthis.selector = {\n\t\t\trows: null,\n\t\t\tcols: null,\n\t\t\topts: null\n\t\t};\n\t\n\t\t_Api.extend( this, this, __apiStruct );\n\t};\n\t\n\tDataTable.Api = _Api;\n\t\n\t// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n\t// isPlainObject.\n\t$.extend( _Api.prototype, {\n\t\tany: function ()\n\t\t{\n\t\t\treturn this.count() !== 0;\n\t\t},\n\t\n\t\n\t\tconcat:  __arrayProto.concat,\n\t\n\t\n\t\tcontext: [], // array of table settings objects\n\t\n\t\n\t\tcount: function ()\n\t\t{\n\t\t\treturn this.flatten().length;\n\t\t},\n\t\n\t\n\t\teach: function ( fn )\n\t\t{\n\t\t\tfor ( var i=0, ien=this.length ; i<ien; i++ ) {\n\t\t\t\tfn.call( this, this[i], i, this );\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\t},\n\t\n\t\n\t\teq: function ( idx )\n\t\t{\n\t\t\tvar ctx = this.context;\n\t\n\t\t\treturn ctx.length > idx ?\n\t\t\t\tnew _Api( ctx[idx], this[idx] ) :\n\t\t\t\tnull;\n\t\t},\n\t\n\t\n\t\tfilter: function ( fn )\n\t\t{\n\t\t\tvar a = [];\n\t\n\t\t\tif ( __arrayProto.filter ) {\n\t\t\t\ta = __arrayProto.filter.call( this, fn, this );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( fn.call( this, this[i], i, this ) ) {\n\t\t\t\t\t\ta.push( this[i] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn new _Api( this.context, a );\n\t\t},\n\t\n\t\n\t\tflatten: function ()\n\t\t{\n\t\t\tvar a = [];\n\t\t\treturn new _Api( this.context, a.concat.apply( a, this.toArray() ) );\n\t\t},\n\t\n\t\n\t\tjoin:    __arrayProto.join,\n\t\n\t\n\t\tindexOf: __arrayProto.indexOf || function (obj, start)\n\t\t{\n\t\t\tfor ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {\n\t\t\t\tif ( this[i] === obj ) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t},\n\t\n\t\titerator: function ( flatten, type, fn, alwaysNew ) {\n\t\t\tvar\n\t\t\t\ta = [], ret,\n\t\t\t\ti, ien, j, jen,\n\t\t\t\tcontext = this.context,\n\t\t\t\trows, items, item,\n\t\t\t\tselector = this.selector;\n\t\n\t\t\t// Argument shifting\n\t\t\tif ( typeof flatten === 'string' ) {\n\t\t\t\talwaysNew = fn;\n\t\t\t\tfn = type;\n\t\t\t\ttype = flatten;\n\t\t\t\tflatten = false;\n\t\t\t}\n\t\n\t\t\tfor ( i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\t\tvar apiInst = new _Api( context[i] );\n\t\n\t\t\t\tif ( type === 'table' ) {\n\t\t\t\t\tret = fn.call( apiInst, context[i], i );\n\t\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( type === 'columns' || type === 'rows' ) {\n\t\t\t\t\t// this has same length as context - one entry for each table\n\t\t\t\t\tret = fn.call( apiInst, context[i], this[i], i );\n\t\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\n\t\t\t\t\t// columns and rows share the same structure.\n\t\t\t\t\t// 'this' is an array of column indexes for each context\n\t\t\t\t\titems = this[i];\n\t\n\t\t\t\t\tif ( type === 'column-rows' ) {\n\t\t\t\t\t\trows = _selector_row_indexes( context[i], selector.opts );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor ( j=0, jen=items.length ; j<jen ; j++ ) {\n\t\t\t\t\t\titem = items[j];\n\t\n\t\t\t\t\t\tif ( type === 'cell' ) {\n\t\t\t\t\t\t\tret = fn.call( apiInst, context[i], item.row, item.column, i, j );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tret = fn.call( apiInst, context[i], item, i, j, rows );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( a.length || alwaysNew ) {\n\t\t\t\tvar api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\n\t\t\t\tvar apiSelector = api.selector;\n\t\t\t\tapiSelector.rows = selector.rows;\n\t\t\t\tapiSelector.cols = selector.cols;\n\t\t\t\tapiSelector.opts = selector.opts;\n\t\t\t\treturn api;\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\n\t\n\t\tlastIndexOf: __arrayProto.lastIndexOf || function (obj, start)\n\t\t{\n\t\t\t// Bit cheeky...\n\t\t\treturn this.indexOf.apply( this.toArray.reverse(), arguments );\n\t\t},\n\t\n\t\n\t\tlength:  0,\n\t\n\t\n\t\tmap: function ( fn )\n\t\t{\n\t\t\tvar a = [];\n\t\n\t\t\tif ( __arrayProto.map ) {\n\t\t\t\ta = __arrayProto.map.call( this, fn, this );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\t\ta.push( fn.call( this, this[i], i ) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn new _Api( this.context, a );\n\t\t},\n\t\n\t\n\t\tpluck: function ( prop )\n\t\t{\n\t\t\tlet fn = DataTable.util.get(prop);\n\t\n\t\t\treturn this.map( function ( el ) {\n\t\t\t\treturn fn(el);\n\t\t\t} );\n\t\t},\n\t\n\t\tpop:     __arrayProto.pop,\n\t\n\t\n\t\tpush:    __arrayProto.push,\n\t\n\t\n\t\t// Does not return an API instance\n\t\treduce: __arrayProto.reduce || function ( fn, init )\n\t\t{\n\t\t\treturn _fnReduce( this, fn, init, 0, this.length, 1 );\n\t\t},\n\t\n\t\n\t\treduceRight: __arrayProto.reduceRight || function ( fn, init )\n\t\t{\n\t\t\treturn _fnReduce( this, fn, init, this.length-1, -1, -1 );\n\t\t},\n\t\n\t\n\t\treverse: __arrayProto.reverse,\n\t\n\t\n\t\t// Object with rows, columns and opts\n\t\tselector: null,\n\t\n\t\n\t\tshift:   __arrayProto.shift,\n\t\n\t\n\t\tslice: function () {\n\t\t\treturn new _Api( this.context, this );\n\t\t},\n\t\n\t\n\t\tsort:    __arrayProto.sort, // ? name - order?\n\t\n\t\n\t\tsplice:  __arrayProto.splice,\n\t\n\t\n\t\ttoArray: function ()\n\t\t{\n\t\t\treturn __arrayProto.slice.call( this );\n\t\t},\n\t\n\t\n\t\tto$: function ()\n\t\t{\n\t\t\treturn $( this );\n\t\t},\n\t\n\t\n\t\ttoJQuery: function ()\n\t\t{\n\t\t\treturn $( this );\n\t\t},\n\t\n\t\n\t\tunique: function ()\n\t\t{\n\t\t\treturn new _Api( this.context, _unique(this) );\n\t\t},\n\t\n\t\n\t\tunshift: __arrayProto.unshift\n\t} );\n\t\n\t\n\t_Api.extend = function ( scope, obj, ext )\n\t{\n\t\t// Only extend API instances and static properties of the API\n\t\tif ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\ti, ien,\n\t\t\tstruct,\n\t\t\tmethodScoping = function ( scope, fn, struc ) {\n\t\t\t\treturn function () {\n\t\t\t\t\tvar ret = fn.apply( scope, arguments );\n\t\n\t\t\t\t\t// Method extension\n\t\t\t\t\t_Api.extend( ret, ret, struc.methodExt );\n\t\t\t\t\treturn ret;\n\t\t\t\t};\n\t\t\t};\n\t\n\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\tstruct = ext[i];\n\t\n\t\t\t// Value\n\t\t\tobj[ struct.name ] = struct.type === 'function' ?\n\t\t\t\tmethodScoping( scope, struct.val, struct ) :\n\t\t\t\tstruct.type === 'object' ?\n\t\t\t\t\t{} :\n\t\t\t\t\tstruct.val;\n\t\n\t\t\tobj[ struct.name ].__dt_wrapper = true;\n\t\n\t\t\t// Property extension\n\t\t\t_Api.extend( scope, obj[ struct.name ], struct.propExt );\n\t\t}\n\t};\n\t\n\t\n\t// @todo - Is there need for an augment function?\n\t// _Api.augment = function ( inst, name )\n\t// {\n\t// \t// Find src object in the structure from the name\n\t// \tvar parts = name.split('.');\n\t\n\t// \t_Api.extend( inst, obj );\n\t// };\n\t\n\t\n\t//     [\n\t//       {\n\t//         name:      'data'                -- string   - Property name\n\t//         val:       function () {},       -- function - Api method (or undefined if just an object\n\t//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t//       },\n\t//       {\n\t//         name:     'row'\n\t//         val:       {},\n\t//         methodExt: [ ... ],\n\t//         propExt:   [\n\t//           {\n\t//             name:      'data'\n\t//             val:       function () {},\n\t//             methodExt: [ ... ],\n\t//             propExt:   [ ... ]\n\t//           },\n\t//           ...\n\t//         ]\n\t//       }\n\t//     ]\n\t\n\t_Api.register = _api_register = function ( name, val )\n\t{\n\t\tif ( Array.isArray( name ) ) {\n\t\t\tfor ( var j=0, jen=name.length ; j<jen ; j++ ) {\n\t\t\t\t_Api.register( name[j], val );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\ti, ien,\n\t\t\their = name.split('.'),\n\t\t\tstruct = __apiStruct,\n\t\t\tkey, method;\n\t\n\t\tvar find = function ( src, name ) {\n\t\t\tfor ( var i=0, ien=src.length ; i<ien ; i++ ) {\n\t\t\t\tif ( src[i].name === name ) {\n\t\t\t\t\treturn src[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\n\t\tfor ( i=0, ien=heir.length ; i<ien ; i++ ) {\n\t\t\tmethod = heir[i].indexOf('()') !== -1;\n\t\t\tkey = method ?\n\t\t\t\their[i].replace('()', '') :\n\t\t\t\their[i];\n\t\n\t\t\tvar src = find( struct, key );\n\t\t\tif ( ! src ) {\n\t\t\t\tsrc = {\n\t\t\t\t\tname:      key,\n\t\t\t\t\tval:       {},\n\t\t\t\t\tmethodExt: [],\n\t\t\t\t\tpropExt:   [],\n\t\t\t\t\ttype:      'object'\n\t\t\t\t};\n\t\t\t\tstruct.push( src );\n\t\t\t}\n\t\n\t\t\tif ( i === ien-1 ) {\n\t\t\t\tsrc.val = val;\n\t\t\t\tsrc.type = typeof val === 'function' ?\n\t\t\t\t\t'function' :\n\t\t\t\t\t$.isPlainObject( val ) ?\n\t\t\t\t\t\t'object' :\n\t\t\t\t\t\t'other';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstruct = method ?\n\t\t\t\t\tsrc.methodExt :\n\t\t\t\t\tsrc.propExt;\n\t\t\t}\n\t\t}\n\t};\n\t\n\t_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\n\t\t_Api.register( pluralName, val );\n\t\n\t\t_Api.register( singularName, function () {\n\t\t\tvar ret = val.apply( this, arguments );\n\t\n\t\t\tif ( ret === this ) {\n\t\t\t\t// Returned item is the API instance that was passed in, return it\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\telse if ( ret instanceof _Api ) {\n\t\t\t\t// New API instance returned, want the value from the first item\n\t\t\t\t// in the returned array for the singular result.\n\t\t\t\treturn ret.length ?\n\t\t\t\t\tArray.isArray( ret[0] ) ?\n\t\t\t\t\t\tnew _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\n\t\t\t\t\t\tret[0] :\n\t\t\t\t\tundefined;\n\t\t\t}\n\t\n\t\t\t// Non-API return - just fire it back\n\t\t\treturn ret;\n\t\t} );\n\t};\n\t\n\t\n\t/**\n\t * Selector for HTML tables. Apply the given selector to the give array of\n\t * DataTables settings objects.\n\t *\n\t * @param {string|integer} [selector] jQuery selector string or integer\n\t * @param  {array} Array of DataTables settings objects to be filtered\n\t * @return {array}\n\t * @ignore\n\t */\n\tvar __table_selector = function ( selector, a )\n\t{\n\t\tif ( Array.isArray(selector) ) {\n\t\t\treturn $.map( selector, function (item) {\n\t\t\t\treturn __table_selector(item, a);\n\t\t\t} );\n\t\t}\n\t\n\t\t// Integer is used to pick out a table by index\n\t\tif ( typeof selector === 'number' ) {\n\t\t\treturn [ a[ selector ] ];\n\t\t}\n\t\n\t\t// Perform a jQuery selector on the table nodes\n\t\tvar nodes = $.map( a, function (el, i) {\n\t\t\treturn el.nTable;\n\t\t} );\n\t\n\t\treturn $(nodes)\n\t\t\t.filter( selector )\n\t\t\t.map( function (i) {\n\t\t\t\t// Need to translate back from the table node to the settings\n\t\t\t\tvar idx = $.inArray( this, nodes );\n\t\t\t\treturn a[ idx ];\n\t\t\t} )\n\t\t\t.toArray();\n\t};\n\t\n\t\n\t\n\t/**\n\t * Context selector for the API's context (i.e. the tables the API instance\n\t * refers to.\n\t *\n\t * @name    DataTable.Api#tables\n\t * @param {string|integer} [selector] Selector to pick which tables the iterator\n\t *   should operate on. If not given, all tables in the current context are\n\t *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n\t *   select multiple tables or as an integer to select a single table.\n\t * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n\t */\n\t_api_register( 'tables()', function ( selector ) {\n\t\t// A new instance is created if there was a selector specified\n\t\treturn selector !== undefined && selector !== null ?\n\t\t\tnew _Api( __table_selector( selector, this.context ) ) :\n\t\t\tthis;\n\t} );\n\t\n\t\n\t_api_register( 'table()', function ( selector ) {\n\t\tvar tables = this.tables( selector );\n\t\tvar ctx = tables.context;\n\t\n\t\t// Truncate to the first matched table\n\t\treturn ctx.length ?\n\t\t\tnew _Api( ctx[0] ) :\n\t\t\ttables;\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().nodes()', 'table().node()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTable;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().body()', 'table().body()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTBody;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().header()', 'table().header()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTHead;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().footer()', 'table().footer()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTFoot;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().containers()', 'table().container()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTableWrapper;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Redraw the tables in the current context.\n\t */\n\t_api_register( 'draw()', function ( paging ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( paging === 'page' ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( typeof paging === 'string' ) {\n\t\t\t\t\tpaging = paging === 'full-hold' ?\n\t\t\t\t\t\tfalse :\n\t\t\t\t\t\ttrue;\n\t\t\t\t}\n\t\n\t\t\t\t_fnReDraw( settings, paging===false );\n\t\t\t}\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Get the current page index.\n\t *\n\t * @return {integer} Current page index (zero based)\n\t *//**\n\t * Set the current page.\n\t *\n\t * Note that if you attempt to show a page which does not exist, DataTables will\n\t * not throw an error, but rather reset the paging.\n\t *\n\t * @param {integer|string} action The paging action to take. This can be one of:\n\t *  * `integer` - The page index to jump to\n\t *  * `string` - An action to take:\n\t *    * `first` - Jump to first page.\n\t *    * `next` - Jump to the next page\n\t *    * `previous` - Jump to previous page\n\t *    * `last` - Jump to the last page.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'page()', function ( action ) {\n\t\tif ( action === undefined ) {\n\t\t\treturn this.page.info().page; // not an expensive call\n\t\t}\n\t\n\t\t// else, have an action to take on all tables\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnPageChange( settings, action );\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Paging information for the first table in the current context.\n\t *\n\t * If you require paging information for another table, use the `table()` method\n\t * with a suitable selector.\n\t *\n\t * @return {object} Object with the following properties set:\n\t *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n\t *  * `pages` - Total number of pages\n\t *  * `start` - Display index for the first record shown on the current page\n\t *  * `end` - Display index for the last record shown on the current page\n\t *  * `length` - Display length (number of records). Note that generally `start\n\t *    + length = end`, but this is not always true, for example if there are\n\t *    only 2 records to show on the final page, with a length of 10.\n\t *  * `recordsTotal` - Full data set length\n\t *  * `recordsDisplay` - Data set length once the current filtering criterion\n\t *    are applied.\n\t */\n\t_api_register( 'page.info()', function ( action ) {\n\t\tif ( this.context.length === 0 ) {\n\t\t\treturn undefined;\n\t\t}\n\t\n\t\tvar\n\t\t\tsettings   = this.context[0],\n\t\t\tstart      = settings._iDisplayStart,\n\t\t\tlen        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\tall        = len === -1;\n\t\n\t\treturn {\n\t\t\t\"page\":           all ? 0 : Math.floor( start / len ),\n\t\t\t\"pages\":          all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\"start\":          start,\n\t\t\t\"end\":            settings.fnDisplayEnd(),\n\t\t\t\"length\":         len,\n\t\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\n\t\t\t\"recordsDisplay\": visRecords,\n\t\t\t\"serverSide\":     _fnDataSource( settings ) === 'ssp'\n\t\t};\n\t} );\n\t\n\t\n\t/**\n\t * Get the current page length.\n\t *\n\t * @return {integer} Current page length. Note `-1` indicates that all records\n\t *   are to be shown.\n\t *//**\n\t * Set the current page length.\n\t *\n\t * @param {integer} Page length to set. Use `-1` to show all records.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'page.len()', function ( len ) {\n\t\t// Note that we can't call this function 'length()' because `length`\n\t\t// is a Javascript property of functions which defines how many arguments\n\t\t// the function expects.\n\t\tif ( len === undefined ) {\n\t\t\treturn this.context.length !== 0 ?\n\t\t\t\tthis.context[0]._iDisplayLength :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// else, set the page length\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnLengthChange( settings, len );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\tvar __reload = function ( settings, holdPosition, callback ) {\n\t\t// Use the draw event to trigger a callback\n\t\tif ( callback ) {\n\t\t\tvar api = new _Api( settings );\n\t\n\t\t\tapi.one( 'draw', function () {\n\t\t\t\tcallback( api.ajax.json() );\n\t\t\t} );\n\t\t}\n\t\n\t\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t\t_fnReDraw( settings, holdPosition );\n\t\t}\n\t\telse {\n\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t// Cancel an existing request\n\t\t\tvar xhr = settings.jqXHR;\n\t\t\tif ( xhr && xhr.readyState !== 4 ) {\n\t\t\t\txhr.abort();\n\t\t\t}\n\t\n\t\t\t// Trigger xhr\n\t\t\t_fnBuildAjax( settings, [], function( json ) {\n\t\t\t\t_fnClearTable( settings );\n\t\n\t\t\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\t_fnAddData( settings, data[i] );\n\t\t\t\t}\n\t\n\t\t\t\t_fnReDraw( settings, holdPosition );\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t} );\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Get the JSON response from the last Ajax request that DataTables made to the\n\t * server. Note that this returns the JSON from the first table in the current\n\t * context.\n\t *\n\t * @return {object} JSON received from the server.\n\t */\n\t_api_register( 'ajax.json()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length > 0 ) {\n\t\t\treturn ctx[0].json;\n\t\t}\n\t\n\t\t// else return undefined;\n\t} );\n\t\n\t\n\t/**\n\t * Get the data submitted in the last Ajax request\n\t */\n\t_api_register( 'ajax.params()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length > 0 ) {\n\t\t\treturn ctx[0].oAjaxData;\n\t\t}\n\t\n\t\t// else return undefined;\n\t} );\n\t\n\t\n\t/**\n\t * Reload tables from the Ajax data source. Note that this function will\n\t * automatically re-draw the table when the remote data has been loaded.\n\t *\n\t * @param {boolean} [reset=true] Reset (default) or hold the current paging\n\t *   position. A full re-sort and re-filter is performed when this method is\n\t *   called, which is why the pagination reset is the default action.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.reload()', function ( callback, resetPaging ) {\n\t\treturn this.iterator( 'table', function (settings) {\n\t\t\t__reload( settings, resetPaging===false, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Get the current Ajax URL. Note that this returns the URL from the first\n\t * table in the current context.\n\t *\n\t * @return {string} Current Ajax source URL\n\t *//**\n\t * Set the Ajax URL. Note that this will set the URL for all tables in the\n\t * current context.\n\t *\n\t * @param {string} url URL to set.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.url()', function ( url ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( url === undefined ) {\n\t\t\t// get\n\t\t\tif ( ctx.length === 0 ) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tctx = ctx[0];\n\t\n\t\t\treturn ctx.ajax ?\n\t\t\t\t$.isPlainObject( ctx.ajax ) ?\n\t\t\t\t\tctx.ajax.url :\n\t\t\t\t\tctx.ajax :\n\t\t\t\tctx.sAjaxSource;\n\t\t}\n\t\n\t\t// set\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( $.isPlainObject( settings.ajax ) ) {\n\t\t\t\tsettings.ajax.url = url;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsettings.ajax = url;\n\t\t\t}\n\t\t\t// No need to consider sAjaxSource here since DataTables gives priority\n\t\t\t// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\n\t\t\t// value of `sAjaxSource` redundant.\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Load data from the newly set Ajax URL. Note that this method is only\n\t * available when `ajax.url()` is used to set a URL. Additionally, this method\n\t * has the same effect as calling `ajax.reload()` but is provided for\n\t * convenience when setting a new URL. Like `ajax.reload()` it will\n\t * automatically redraw the table once the remote data has been loaded.\n\t *\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\n\t\t// Same as a reload, but makes sense to present it for easy access after a\n\t\t// url change\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\t__reload( ctx, resetPaging===false, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t\n\tvar _selector_run = function ( type, selector, selectFn, settings, opts )\n\t{\n\t\tvar\n\t\t\tout = [], res,\n\t\t\ta, i, ien, j, jen,\n\t\t\tselectorType = typeof selector;\n\t\n\t\t// Can't just check for isArray here, as an API or jQuery instance might be\n\t\t// given with their array like look\n\t\tif ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\n\t\t\tselector = [ selector ];\n\t\t}\n\t\n\t\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t\t// Only split on simple strings - complex expressions will be jQuery selectors\n\t\t\ta = selector[i] && selector[i].split && ! selector[i].match(/[\\[\\(:]/) ?\n\t\t\t\tselector[i].split(',') :\n\t\t\t\t[ selector[i] ];\n\t\n\t\t\tfor ( j=0, jen=a.length ; j<jen ; j++ ) {\n\t\t\t\tres = selectFn( typeof a[j] === 'string' ? (a[j]).trim() : a[j] );\n\t\n\t\t\t\tif ( res && res.length ) {\n\t\t\t\t\tout = out.concat( res );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// selector extensions\n\t\tvar ext = _ext.selector[ type ];\n\t\tif ( ext.length ) {\n\t\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\t\tout = ext[i]( settings, opts, out );\n\t\t\t}\n\t\t}\n\t\n\t\treturn _unique( out );\n\t};\n\t\n\t\n\tvar _selector_opts = function ( opts )\n\t{\n\t\tif ( ! opts ) {\n\t\t\topts = {};\n\t\t}\n\t\n\t\t// Backwards compatibility for 1.9- which used the terminology filter rather\n\t\t// than search\n\t\tif ( opts.filter && opts.search === undefined ) {\n\t\t\topts.search = opts.filter;\n\t\t}\n\t\n\t\treturn $.extend( {\n\t\t\tsearch: 'none',\n\t\t\torder: 'current',\n\t\t\tpage: 'all'\n\t\t}, opts );\n\t};\n\t\n\t\n\tvar _selector_first = function ( inst )\n\t{\n\t\t// Reduce the API instance to the first item found\n\t\tfor ( var i=0, ien=inst.length ; i<ien ; i++ ) {\n\t\t\tif ( inst[i].length > 0 ) {\n\t\t\t\t// Assign the first element to the first item in the instance\n\t\t\t\t// and truncate the instance and context\n\t\t\t\tinst[0] = inst[i];\n\t\t\t\tinst[0].length = 1;\n\t\t\t\tinst.length = 1;\n\t\t\t\tinst.context = [ inst.context[i] ];\n\t\n\t\t\t\treturn inst;\n\t\t\t}\n\t\t}\n\t\n\t\t// Not found - return an empty instance\n\t\tinst.length = 0;\n\t\treturn inst;\n\t};\n\t\n\t\n\tvar _selector_row_indexes = function ( settings, opts )\n\t{\n\t\tvar\n\t\t\ti, ien, tmp, a=[],\n\t\t\tdisplayFiltered = settings.aiDisplay,\n\t\t\tdisplayMaster = settings.aiDisplayMaster;\n\t\n\t\tvar\n\t\t\tsearch = opts.search,  // none, applied, removed\n\t\t\torder  = opts.order,   // applied, current, index (original - compatibility with 1.9)\n\t\t\tpage   = opts.page;    // all, current\n\t\n\t\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t\t// In server-side processing mode, most options are irrelevant since\n\t\t\t// rows not shown don't exist and the index order is the applied order\n\t\t\t// Removed is a special case - for consistency just return an empty\n\t\t\t// array\n\t\t\treturn search === 'removed' ?\n\t\t\t\t[] :\n\t\t\t\t_range( 0, displayMaster.length );\n\t\t}\n\t\telse if ( page == 'current' ) {\n\t\t\t// Current page implies that order=current and filter=applied, since it is\n\t\t\t// fairly senseless otherwise, regardless of what order and search actually\n\t\t\t// are\n\t\t\tfor ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\n\t\t\t\ta.push( displayFiltered[i] );\n\t\t\t}\n\t\t}\n\t\telse if ( order == 'current' || order == 'applied' ) {\n\t\t\tif ( search == 'none') {\n\t\t\t\ta = displayMaster.slice();\n\t\t\t}\n\t\t\telse if ( search == 'applied' ) {\n\t\t\t\ta = displayFiltered.slice();\n\t\t\t}\n\t\t\telse if ( search == 'removed' ) {\n\t\t\t\t// O(n+m) solution by creating a hash map\n\t\t\t\tvar displayFilteredMap = {};\n\t\n\t\t\t\tfor ( var i=0, ien=displayFiltered.length ; i<ien ; i++ ) {\n\t\t\t\t\tdisplayFilteredMap[displayFiltered[i]] = null;\n\t\t\t\t}\n\t\n\t\t\t\ta = $.map( displayMaster, function (el) {\n\t\t\t\t\treturn ! displayFilteredMap.hasOwnProperty(el) ?\n\t\t\t\t\t\tel :\n\t\t\t\t\t\tnull;\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\telse if ( order == 'index' || order == 'original' ) {\n\t\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\t\tif ( search == 'none' ) {\n\t\t\t\t\ta.push( i );\n\t\t\t\t}\n\t\t\t\telse { // applied | removed\n\t\t\t\t\ttmp = $.inArray( i, displayFiltered );\n\t\n\t\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t\t{\n\t\t\t\t\t\ta.push( i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn a;\n\t};\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Rows\n\t *\n\t * {}          - no selector - use all available rows\n\t * {integer}   - row aoData index\n\t * {node}      - TR node\n\t * {string}    - jQuery selector to apply to the TR elements\n\t * {array}     - jQuery array of nodes, or simply an array of TR nodes\n\t *\n\t */\n\tvar __row_selector = function ( settings, selector, opts )\n\t{\n\t\tvar rows;\n\t\tvar run = function ( sel ) {\n\t\t\tvar selInt = _intVal( sel );\n\t\t\tvar i, ien;\n\t\t\tvar aoData = settings.aoData;\n\t\n\t\t\t// Short cut - selector is a number and no options provided (default is\n\t\t\t// all records, so no need to check if the index is in there, since it\n\t\t\t// must be - dev error if the index doesn't exist).\n\t\t\tif ( selInt !== null && ! opts ) {\n\t\t\t\treturn [ selInt ];\n\t\t\t}\n\t\n\t\t\tif ( ! rows ) {\n\t\t\t\trows = _selector_row_indexes( settings, opts );\n\t\t\t}\n\t\n\t\t\tif ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {\n\t\t\t\t// Selector - integer\n\t\t\t\treturn [ selInt ];\n\t\t\t}\n\t\t\telse if ( sel === null || sel === undefined || sel === '' ) {\n\t\t\t\t// Selector - none\n\t\t\t\treturn rows;\n\t\t\t}\n\t\n\t\t\t// Selector - function\n\t\t\tif ( typeof sel === 'function' ) {\n\t\t\t\treturn $.map( rows, function (idx) {\n\t\t\t\t\tvar row = aoData[ idx ];\n\t\t\t\t\treturn sel( idx, row._aData, row.nTr ) ? idx : null;\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// Selector - node\n\t\t\tif ( sel.nodeName ) {\n\t\t\t\tvar rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup\n\t\t\t\tvar cellIdx = sel._DT_CellIndex;\n\t\n\t\t\t\tif ( rowIdx !== undefined ) {\n\t\t\t\t\t// Make sure that the row is actually still present in the table\n\t\t\t\t\treturn aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?\n\t\t\t\t\t\t[ rowIdx ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t\telse if ( cellIdx ) {\n\t\t\t\t\treturn aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel.parentNode ?\n\t\t\t\t\t\t[ cellIdx.row ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\n\t\t\t\t\treturn host.length ?\n\t\t\t\t\t\t[ host.data('dt-row') ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// ID selector. Want to always be able to select rows by id, regardless\n\t\t\t// of if the tr element has been created or not, so can't rely upon\n\t\t\t// jQuery here - hence a custom implementation. This does not match\n\t\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n\t\t\t// but to select it using a CSS selector engine (like Sizzle or\n\t\t\t// querySelect) it would need to need to be escaped for some characters.\n\t\t\t// DataTables simplifies this for row selectors since you can select\n\t\t\t// only a row. A # indicates an id any anything that follows is the id -\n\t\t\t// unescaped.\n\t\t\tif ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\n\t\t\t\t// get row index from id\n\t\t\t\tvar rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\n\t\t\t\tif ( rowObj !== undefined ) {\n\t\t\t\t\treturn [ rowObj.idx ];\n\t\t\t\t}\n\t\n\t\t\t\t// need to fall through to jQuery in case there is DOM id that\n\t\t\t\t// matches\n\t\t\t}\n\t\t\t\n\t\t\t// Get nodes in the order from the `rows` array with null values removed\n\t\t\tvar nodes = _removeEmpty(\n\t\t\t\t_pluck_order( settings.aoData, rows, 'nTr' )\n\t\t\t);\n\t\n\t\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\n\t\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\n\t\t\t// it also allows arrays, so this will cope with all three options\n\t\t\treturn $(nodes)\n\t\t\t\t.filter( sel )\n\t\t\t\t.map( function () {\n\t\t\t\t\treturn this._DT_RowIndex;\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\t};\n\t\n\t\treturn _selector_run( 'row', selector, run, settings, opts );\n\t};\n\t\n\t\n\t_api_register( 'rows()', function ( selector, opts ) {\n\t\t// argument shifting\n\t\tif ( selector === undefined ) {\n\t\t\tselector = '';\n\t\t}\n\t\telse if ( $.isPlainObject( selector ) ) {\n\t\t\topts = selector;\n\t\t\tselector = '';\n\t\t}\n\t\n\t\topts = _selector_opts( opts );\n\t\n\t\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\t\treturn __row_selector( settings, selector, opts );\n\t\t}, 1 );\n\t\n\t\t// Want argument shifting here and in __row_selector?\n\t\tinst.selector.rows = selector;\n\t\tinst.selector.opts = opts;\n\t\n\t\treturn inst;\n\t} );\n\t\n\t_api_register( 'rows().nodes()', function () {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\treturn settings.aoData[ row ].nTr || undefined;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'rows().data()', function () {\n\t\treturn this.iterator( true, 'rows', function ( settings, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows, '_aData' );\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\tvar r = settings.aoData[ row ];\n\t\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\t_fnInvalidate( settings, row, src );\n\t\t} );\n\t} );\n\t\n\t_api_registerPlural( 'rows().indexes()', 'row().index()', function () {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\treturn row;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\n\t\tvar a = [];\n\t\tvar context = this.context;\n\t\n\t\t// `iterator` will drop undefined values, but in this case we want them\n\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tfor ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\n\t\t\t\tvar id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\n\t\t\t\ta.push( (hash === true ? '#' : '' )+ id );\n\t\t\t}\n\t\t}\n\t\n\t\treturn new _Api( context, a );\n\t} );\n\t\n\t_api_registerPlural( 'rows().remove()', 'row().remove()', function () {\n\t\tvar that = this;\n\t\n\t\tthis.iterator( 'row', function ( settings, row, thatIdx ) {\n\t\t\tvar data = settings.aoData;\n\t\t\tvar rowData = data[ row ];\n\t\t\tvar i, ien, j, jen;\n\t\t\tvar loopRow, loopCells;\n\t\n\t\t\tdata.splice( row, 1 );\n\t\n\t\t\t// Update the cached indexes\n\t\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\tloopRow = data[i];\n\t\t\t\tloopCells = loopRow.anCells;\n\t\n\t\t\t\t// Rows\n\t\t\t\tif ( loopRow.nTr !== null ) {\n\t\t\t\t\tloopRow.nTr._DT_RowIndex = i;\n\t\t\t\t}\n\t\n\t\t\t\t// Cells\n\t\t\t\tif ( loopCells !== null ) {\n\t\t\t\t\tfor ( j=0, jen=loopCells.length ; j<jen ; j++ ) {\n\t\t\t\t\t\tloopCells[j]._DT_CellIndex.row = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Delete from the display arrays\n\t\t\t_fnDeleteIndex( settings.aiDisplayMaster, row );\n\t\t\t_fnDeleteIndex( settings.aiDisplay, row );\n\t\t\t_fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes\n\t\n\t\t\t// For server-side processing tables - subtract the deleted row from the count\n\t\t\tif ( settings._iRecordsDisplay > 0 ) {\n\t\t\t\tsettings._iRecordsDisplay--;\n\t\t\t}\n\t\n\t\t\t// Check for an 'overflow' they case for displaying the table\n\t\t\t_fnLengthOverflow( settings );\n\t\n\t\t\t// Remove the row's ID reference if there is one\n\t\t\tvar id = settings.rowIdFn( rowData._aData );\n\t\t\tif ( id !== undefined ) {\n\t\t\t\tdelete settings.aIds[ id ];\n\t\t\t}\n\t\t} );\n\t\n\t\tthis.iterator( 'table', function ( settings ) {\n\t\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\t\tsettings.aoData[i].idx = i;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( 'rows.add()', function ( rows ) {\n\t\tvar newRows = this.iterator( 'table', function ( settings ) {\n\t\t\t\tvar row, i, ien;\n\t\t\t\tvar out = [];\n\t\n\t\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = rows[i];\n\t\n\t\t\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\t\t\tout.push( _fnAddTr( settings, row )[0] );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tout.push( _fnAddData( settings, row ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn out;\n\t\t\t}, 1 );\n\t\n\t\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\t\tvar modRows = this.rows( -1 );\n\t\tmodRows.pop();\n\t\t$.merge( modRows, newRows );\n\t\n\t\treturn modRows;\n\t} );\n\t\n\t\n\t\n\t\n\t\n\t/**\n\t *\n\t */\n\t_api_register( 'row()', function ( selector, opts ) {\n\t\treturn _selector_first( this.rows( selector, opts ) );\n\t} );\n\t\n\t\n\t_api_register( 'row().data()', function ( data ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// Get\n\t\t\treturn ctx.length && this.length ?\n\t\t\t\tctx[0].aoData[ this[0] ]._aData :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// Set\n\t\tvar row = ctx[0].aoData[ this[0] ];\n\t\trow._aData = data;\n\t\n\t\t// If the DOM has an id, and the data source is an array\n\t\tif ( Array.isArray( data ) && row.nTr && row.nTr.id ) {\n\t\t\t_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );\n\t\t}\n\t\n\t\t// Automatically invalidate\n\t\t_fnInvalidate( ctx[0], this[0], 'data' );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( 'row().node()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\treturn ctx.length && this.length ?\n\t\t\tctx[0].aoData[ this[0] ].nTr || null :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'row.add()', function ( row ) {\n\t\t// Allow a jQuery object to be passed in - only a single row is added from\n\t\t// it though - the first element in the set\n\t\tif ( row instanceof $ && row.length ) {\n\t\t\trow = row[0];\n\t\t}\n\t\n\t\tvar rows = this.iterator( 'table', function ( settings ) {\n\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\treturn _fnAddTr( settings, row )[0];\n\t\t\t}\n\t\t\treturn _fnAddData( settings, row );\n\t\t} );\n\t\n\t\t// Return an Api.rows() extended instance, with the newly added row selected\n\t\treturn this.row( rows[0] );\n\t} );\n\t\n\t\n\t$(document).on('plugin-init.dt', function (e, context) {\n\t\tvar api = new _Api( context );\n\t\n\t\tapi.on( 'stateSaveParams', function ( e, settings, d ) {\n\t\t\t// This could be more compact with the API, but it is a lot faster as a simple\n\t\t\t// internal loop\n\t\t\tvar idFn = settings.rowIdFn;\n\t\t\tvar data = settings.aoData;\n\t\t\tvar ids = [];\n\t\n\t\t\tfor (var i=0 ; i<data.length ; i++) {\n\t\t\t\tif (data[i]._detailsShow) {\n\t\t\t\t\tids.push( '#' + idFn(data[i]._aData) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\td.childRows = ids;\n\t\t})\n\t\n\t\tvar loaded = api.state.loaded();\n\t\n\t\tif ( loaded && loaded.childRows ) {\n\t\t\tapi\n\t\t\t\t.rows( $.map(loaded.childRows, function (id){\n\t\t\t\t\treturn id.replace(/:/g, '\\\\:')\n\t\t\t\t}) )\n\t\t\t\t.every( function () {\n\t\t\t\t\t_fnCallbackFire( context, null, 'requestChild', [ this ] )\n\t\t\t\t});\n\t\t}\n\t});\n\t\n\tvar __details_add = function ( ctx, row, data, klass )\n\t{\n\t\t// Convert to array of TR elements\n\t\tvar rows = [];\n\t\tvar addRow = function ( r, k ) {\n\t\t\t// Recursion to allow for arrays of jQuery objects\n\t\t\tif ( Array.isArray( r ) || r instanceof $ ) {\n\t\t\t\tfor ( var i=0, ien=r.length ; i<ien ; i++ ) {\n\t\t\t\t\taddRow( r[i], k );\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If we get a TR element, then just add it directly - up to the dev\n\t\t\t// to add the correct number of columns etc\n\t\t\tif ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\n\t\t\t\trows.push( r );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Otherwise create a row with a wrapper\n\t\t\t\tvar created = $('<tr><td></td></tr>').addClass( k );\n\t\t\t\t$('td', created)\n\t\t\t\t\t.addClass( k )\n\t\t\t\t\t.html( r )\n\t\t\t\t\t[0].colSpan = _fnVisbleColumns( ctx );\n\t\n\t\t\t\trows.push( created[0] );\n\t\t\t}\n\t\t};\n\t\n\t\taddRow( data, klass );\n\t\n\t\tif ( row._details ) {\n\t\t\trow._details.detach();\n\t\t}\n\t\n\t\trow._details = $(rows);\n\t\n\t\t// If the children were already shown, that state should be retained\n\t\tif ( row._detailsShow ) {\n\t\t\trow._details.insertAfter( row.nTr );\n\t\t}\n\t};\n\t\n\t\n\t// Make state saving of child row details async to allow them to be batch processed\n\tvar __details_state = DataTable.util.throttle(\n\t\tfunction (ctx) {\n\t\t\t_fnSaveState( ctx[0] )\n\t\t},\n\t\t500\n\t);\n\t\n\t\n\tvar __details_remove = function ( api, idx )\n\t{\n\t\tvar ctx = api.context;\n\t\n\t\tif ( ctx.length ) {\n\t\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\n\t\n\t\t\tif ( row && row._details ) {\n\t\t\t\trow._details.remove();\n\t\n\t\t\t\trow._detailsShow = undefined;\n\t\t\t\trow._details = undefined;\n\t\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\n\t\t\t\t__details_state( ctx );\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\tvar __details_display = function ( api, show ) {\n\t\tvar ctx = api.context;\n\t\n\t\tif ( ctx.length && api.length ) {\n\t\t\tvar row = ctx[0].aoData[ api[0] ];\n\t\n\t\t\tif ( row._details ) {\n\t\t\t\trow._detailsShow = show;\n\t\n\t\t\t\tif ( show ) {\n\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t\t$( row.nTr ).addClass( 'dt-hasChild' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\trow._details.detach();\n\t\t\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\n\t\t\t\t}\n\t\n\t\t\t\t_fnCallbackFire( ctx[0], null, 'childRow', [ show, api.row( api[0] ) ] )\n\t\n\t\t\t\t__details_events( ctx[0] );\n\t\t\t\t__details_state( ctx );\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\tvar __details_events = function ( settings )\n\t{\n\t\tvar api = new _Api( settings );\n\t\tvar namespace = '.dt.DT_details';\n\t\tvar drawEvent = 'draw'+namespace;\n\t\tvar colvisEvent = 'column-sizing'+namespace;\n\t\tvar destroyEvent = 'destroy'+namespace;\n\t\tvar data = settings.aoData;\n\t\n\t\tapi.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\n\t\n\t\tif ( _pluck( data, '_details' ).length > 0 ) {\n\t\t\t// On each draw, insert the required elements into the document\n\t\t\tapi.on( drawEvent, function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tapi.rows( {page:'current'} ).eq(0).each( function (idx) {\n\t\t\t\t\t// Internal data grab\n\t\t\t\t\tvar row = data[ idx ];\n\t\n\t\t\t\t\tif ( row._detailsShow ) {\n\t\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\n\t\t\t// Column visibility change - update the colspan\n\t\t\tapi.on( colvisEvent, function ( e, ctx, idx, vis ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Update the colspan for the details rows (note, only if it already has\n\t\t\t\t// a colspan)\n\t\t\t\tvar row, visible = _fnVisbleColumns( ctx );\n\t\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = data[i];\n\t\n\t\t\t\t\tif ( row._details ) {\n\t\t\t\t\t\trow._details.children('td[colspan]').attr('colspan', visible );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\t// Table destroyed - nuke any child rows\n\t\t\tapi.on( destroyEvent, function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( data[i]._details ) {\n\t\t\t\t\t\t__details_remove( api, i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t};\n\t\n\t// Strings for the method names to help minification\n\tvar _emp = '';\n\tvar _child_obj = _emp+'row().child';\n\tvar _child_mth = _child_obj+'()';\n\t\n\t// data can be:\n\t//  tr\n\t//  string\n\t//  jQuery or array of any of the above\n\t_api_register( _child_mth, function ( data, klass ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length && this.length ?\n\t\t\t\tctx[0].aoData[ this[0] ]._details :\n\t\t\t\tundefined;\n\t\t}\n\t\telse if ( data === true ) {\n\t\t\t// show\n\t\t\tthis.child.show();\n\t\t}\n\t\telse if ( data === false ) {\n\t\t\t// remove\n\t\t\t__details_remove( this );\n\t\t}\n\t\telse if ( ctx.length && this.length ) {\n\t\t\t// set\n\t\t\t__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\n\t\t}\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.show()',\n\t\t_child_mth+'.show()' // only when `child()` was called with parameters (without\n\t], function ( show ) {   // it returns an object and this method is not executed)\n\t\t__details_display( this, true );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.hide()',\n\t\t_child_mth+'.hide()' // only when `child()` was called with parameters (without\n\t], function () {         // it returns an object and this method is not executed)\n\t\t__details_display( this, false );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.remove()',\n\t\t_child_mth+'.remove()' // only when `child()` was called with parameters (without\n\t], function () {           // it returns an object and this method is not executed)\n\t\t__details_remove( this );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( _child_obj+'.isShown()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length && this.length ) {\n\t\t\t// _detailsShown as false or undefined will fall through to return false\n\t\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\n\t\t}\n\t\treturn false;\n\t} );\n\t\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Columns\n\t *\n\t * {integer}           - column index (>=0 count from left, <0 count from right)\n\t * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n\t * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n\t * \"{string}:name\"     - column name\n\t * \"{string}\"          - jQuery selector on column header nodes\n\t *\n\t */\n\t\n\t// can be an array of these items, comma separated list, or an array of comma\n\t// separated lists\n\t\n\tvar __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;\n\t\n\t\n\t// r1 and r2 are redundant - but it means that the parameters match for the\n\t// iterator callback in columns().data()\n\tvar __columnData = function ( settings, column, r1, r2, rows ) {\n\t\tvar a = [];\n\t\tfor ( var row=0, ien=rows.length ; row<ien ; row++ ) {\n\t\t\ta.push( _fnGetCellData( settings, rows[row], column ) );\n\t\t}\n\t\treturn a;\n\t};\n\t\n\t\n\tvar __column_selector = function ( settings, selector, opts )\n\t{\n\t\tvar\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tnames = _pluck( columns, 'sName' ),\n\t\t\tnodes = _pluck( columns, 'nTh' );\n\t\n\t\tvar run = function ( s ) {\n\t\t\tvar selInt = _intVal( s );\n\t\n\t\t\t// Selector - all\n\t\t\tif ( s === '' ) {\n\t\t\t\treturn _range( columns.length );\n\t\t\t}\n\t\n\t\t\t// Selector - index\n\t\t\tif ( selInt !== null ) {\n\t\t\t\treturn [ selInt >= 0 ?\n\t\t\t\t\tselInt : // Count from left\n\t\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\n\t\t\t\t];\n\t\t\t}\n\t\n\t\t\t// Selector = function\n\t\t\tif ( typeof s === 'function' ) {\n\t\t\t\tvar rows = _selector_row_indexes( settings, opts );\n\t\n\t\t\t\treturn $.map( columns, function (col, idx) {\n\t\t\t\t\treturn s(\n\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t__columnData( settings, idx, 0, 0, rows ),\n\t\t\t\t\t\t\tnodes[ idx ]\n\t\t\t\t\t\t) ? idx : null;\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// jQuery or string selector\n\t\t\tvar match = typeof s === 'string' ?\n\t\t\t\ts.match( __re_column_selector ) :\n\t\t\t\t'';\n\t\n\t\t\tif ( match ) {\n\t\t\t\tswitch( match[2] ) {\n\t\t\t\t\tcase 'visIdx':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\tvar idx = parseInt( match[1], 10 );\n\t\t\t\t\t\t// Visible index given, convert to column index\n\t\t\t\t\t\tif ( idx < 0 ) {\n\t\t\t\t\t\t\t// Counting from the right\n\t\t\t\t\t\t\tvar visColumns = $.map( columns, function (col,i) {\n\t\t\t\t\t\t\t\treturn col.bVisible ? i : null;\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\treturn [ visColumns[ visColumns.length + idx ] ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Counting from the left\n\t\t\t\t\t\treturn [ _fnVisibleToColumnIndex( settings, idx ) ];\n\t\n\t\t\t\t\tcase 'name':\n\t\t\t\t\t\t// match by name. `names` is column index complete and in order\n\t\t\t\t\t\treturn $.map( names, function (name, i) {\n\t\t\t\t\t\t\treturn name === match[1] ? i : null;\n\t\t\t\t\t\t} );\n\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Cell in the table body\n\t\t\tif ( s.nodeName && s._DT_CellIndex ) {\n\t\t\t\treturn [ s._DT_CellIndex.column ];\n\t\t\t}\n\t\n\t\t\t// jQuery selector on the TH elements for the columns\n\t\t\tvar jqResult = $( nodes )\n\t\t\t\t.filter( s )\n\t\t\t\t.map( function () {\n\t\t\t\t\treturn $.inArray( this, nodes ); // `nodes` is column index complete and in order\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\n\t\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\t\treturn jqResult;\n\t\t\t}\n\t\n\t\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\n\t\t\t// a child or such an element\n\t\t\tvar host = $(s).closest('*[data-dt-column]');\n\t\t\treturn host.length ?\n\t\t\t\t[ host.data('dt-column') ] :\n\t\t\t\t[];\n\t\t};\n\t\n\t\treturn _selector_run( 'column', selector, run, settings, opts );\n\t};\n\t\n\t\n\tvar __setColumnVis = function ( settings, column, vis ) {\n\t\tvar\n\t\t\tcols = settings.aoColumns,\n\t\t\tcol  = cols[ column ],\n\t\t\tdata = settings.aoData,\n\t\t\trow, cells, i, ien, tr;\n\t\n\t\t// Get\n\t\tif ( vis === undefined ) {\n\t\t\treturn col.bVisible;\n\t\t}\n\t\n\t\t// Set\n\t\t// No change\n\t\tif ( col.bVisible === vis ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( vis ) {\n\t\t\t// Insert column\n\t\t\t// Need to decide if we should use appendChild or insertBefore\n\t\t\tvar insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );\n\t\n\t\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\ttr = data[i].nTr;\n\t\t\t\tcells = data[i].anCells;\n\t\n\t\t\t\tif ( tr ) {\n\t\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\n\t\t\t\t\ttr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Remove column\n\t\t\t$( _pluck( settings.aoData, 'anCells', column ) ).detach();\n\t\t}\n\t\n\t\t// Common actions\n\t\tcol.bVisible = vis;\n\t};\n\t\n\t\n\t_api_register( 'columns()', function ( selector, opts ) {\n\t\t// argument shifting\n\t\tif ( selector === undefined ) {\n\t\t\tselector = '';\n\t\t}\n\t\telse if ( $.isPlainObject( selector ) ) {\n\t\t\topts = selector;\n\t\t\tselector = '';\n\t\t}\n\t\n\t\topts = _selector_opts( opts );\n\t\n\t\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\t\treturn __column_selector( settings, selector, opts );\n\t\t}, 1 );\n\t\n\t\t// Want argument shifting here and in _row_selector?\n\t\tinst.selector.cols = selector;\n\t\tinst.selector.opts = opts;\n\t\n\t\treturn inst;\n\t} );\n\t\n\t_api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].nTh;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].nTf;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().data()', 'column().data()', function () {\n\t\treturn this.iterator( 'column-rows', __columnData, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].mData;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\n\t\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows,\n\t\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\n\t\t\t);\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\n\t\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows, 'anCells', column ) ;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\n\t\tvar that = this;\n\t\tvar ret = this.iterator( 'column', function ( settings, column ) {\n\t\t\tif ( vis === undefined ) {\n\t\t\t\treturn settings.aoColumns[ column ].bVisible;\n\t\t\t} // else\n\t\t\t__setColumnVis( settings, column, vis );\n\t\t} );\n\t\n\t\t// Group the column visibility changes\n\t\tif ( vis !== undefined ) {\n\t\t\tthis.iterator( 'table', function ( settings ) {\n\t\t\t\t// Redraw the header after changes\n\t\t\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\t\n\t\t\t\t// Update colspan for no records display. Child rows and extensions will use their own\n\t\t\t\t// listeners to do this - only need to update the empty table item here\n\t\t\t\tif ( ! settings.aiDisplay.length ) {\n\t\t\t\t\t$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n\t\t\t\t}\n\t\t\n\t\t\t\t_fnSaveState( settings );\n\t\n\t\t\t\t// Second loop once the first is done for events\n\t\t\t\tthat.iterator( 'column', function ( settings, column ) {\n\t\t\t\t\t_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\n\t\t\t\t} );\n\t\n\t\t\t\tif ( calc === undefined || calc ) {\n\t\t\t\t\tthat.columns.adjust();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\n\t\treturn ret;\n\t} );\n\t\n\t_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn type === 'visible' ?\n\t\t\t\t_fnColumnIndexToVisible( settings, column ) :\n\t\t\t\tcolumn;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'columns.adjust()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'column.index()', function ( type, idx ) {\n\t\tif ( this.context.length !== 0 ) {\n\t\t\tvar ctx = this.context[0];\n\t\n\t\t\tif ( type === 'fromVisible' || type === 'toData' ) {\n\t\t\t\treturn _fnVisibleToColumnIndex( ctx, idx );\n\t\t\t}\n\t\t\telse if ( type === 'fromData' || type === 'toVisible' ) {\n\t\t\t\treturn _fnColumnIndexToVisible( ctx, idx );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t_api_register( 'column()', function ( selector, opts ) {\n\t\treturn _selector_first( this.columns( selector, opts ) );\n\t} );\n\t\n\tvar __cell_selector = function ( settings, selector, opts )\n\t{\n\t\tvar data = settings.aoData;\n\t\tvar rows = _selector_row_indexes( settings, opts );\n\t\tvar cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\n\t\tvar allCells = $(_flatten( [], cells ));\n\t\tvar row;\n\t\tvar columns = settings.aoColumns.length;\n\t\tvar a, i, ien, j, o, host;\n\t\n\t\tvar run = function ( s ) {\n\t\t\tvar fnSelector = typeof s === 'function';\n\t\n\t\t\tif ( s === null || s === undefined || fnSelector ) {\n\t\t\t\t// All cells and function selectors\n\t\t\t\ta = [];\n\t\n\t\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = rows[i];\n\t\n\t\t\t\t\tfor ( j=0 ; j<columns ; j++ ) {\n\t\t\t\t\t\to = {\n\t\t\t\t\t\t\trow: row,\n\t\t\t\t\t\t\tcolumn: j\n\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\tif ( fnSelector ) {\n\t\t\t\t\t\t\t// Selector - function\n\t\t\t\t\t\t\thost = data[ row ];\n\t\n\t\t\t\t\t\t\tif ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\n\t\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Selector - all\n\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn a;\n\t\t\t}\n\t\t\t\n\t\t\t// Selector - index\n\t\t\tif ( $.isPlainObject( s ) ) {\n\t\t\t\t// Valid cell index and its in the array of selectable rows\n\t\t\t\treturn s.column !== undefined && s.row !== undefined && $.inArray( s.row, rows ) !== -1 ?\n\t\t\t\t\t[s] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\n\t\t\t// Selector - jQuery filtered cells\n\t\t\tvar jqResult = allCells\n\t\t\t\t.filter( s )\n\t\t\t\t.map( function (i, el) {\n\t\t\t\t\treturn { // use a new object, in case someone changes the values\n\t\t\t\t\t\trow:    el._DT_CellIndex.row,\n\t\t\t\t\t\tcolumn: el._DT_CellIndex.column\n\t \t\t\t\t};\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\n\t\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\t\treturn jqResult;\n\t\t\t}\n\t\n\t\t\t// Otherwise the selector is a node, and there is one last option - the\n\t\t\t// element might be a child of an element which has dt-row and dt-column\n\t\t\t// data attributes\n\t\t\thost = $(s).closest('*[data-dt-row]');\n\t\t\treturn host.length ?\n\t\t\t\t[ {\n\t\t\t\t\trow: host.data('dt-row'),\n\t\t\t\t\tcolumn: host.data('dt-column')\n\t\t\t\t} ] :\n\t\t\t\t[];\n\t\t};\n\t\n\t\treturn _selector_run( 'cell', selector, run, settings, opts );\n\t};\n\t\n\t\n\t\n\t\n\t_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\n\t\t// Argument shifting\n\t\tif ( $.isPlainObject( rowSelector ) ) {\n\t\t\t// Indexes\n\t\t\tif ( rowSelector.row === undefined ) {\n\t\t\t\t// Selector options in first parameter\n\t\t\t\topts = rowSelector;\n\t\t\t\trowSelector = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Cell index objects in first parameter\n\t\t\t\topts = columnSelector;\n\t\t\t\tcolumnSelector = null;\n\t\t\t}\n\t\t}\n\t\tif ( $.isPlainObject( columnSelector ) ) {\n\t\t\topts = columnSelector;\n\t\t\tcolumnSelector = null;\n\t\t}\n\t\n\t\t// Cell selector\n\t\tif ( columnSelector === null || columnSelector === undefined ) {\n\t\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t\treturn __cell_selector( settings, rowSelector, _selector_opts( opts ) );\n\t\t\t} );\n\t\t}\n\t\n\t\t// The default built in options need to apply to row and columns\n\t\tvar internalOpts = opts ? {\n\t\t\tpage: opts.page,\n\t\t\torder: opts.order,\n\t\t\tsearch: opts.search\n\t\t} : {};\n\t\n\t\t// Row + column selector\n\t\tvar columns = this.columns( columnSelector, internalOpts );\n\t\tvar rows = this.rows( rowSelector, internalOpts );\n\t\tvar i, ien, j, jen;\n\t\n\t\tvar cellsNoOpts = this.iterator( 'table', function ( settings, idx ) {\n\t\t\tvar a = [];\n\t\n\t\t\tfor ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\n\t\t\t\tfor ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\n\t\t\t\t\ta.push( {\n\t\t\t\t\t\trow:    rows[idx][i],\n\t\t\t\t\t\tcolumn: columns[idx][j]\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn a;\n\t\t}, 1 );\n\t\n\t\t// There is currently only one extension which uses a cell selector extension\n\t\t// It is a _major_ performance drag to run this if it isn't needed, so this is\n\t\t// an extension specific check at the moment\n\t\tvar cells = opts && opts.selected ?\n\t\t\tthis.cells( cellsNoOpts, opts ) :\n\t\t\tcellsNoOpts;\n\t\n\t\t$.extend( cells.selector, {\n\t\t\tcols: columnSelector,\n\t\t\trows: rowSelector,\n\t\t\topts: opts\n\t\t} );\n\t\n\t\treturn cells;\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\tvar data = settings.aoData[ row ];\n\t\n\t\t\treturn data && data.anCells ?\n\t\t\t\tdata.anCells[ column ] :\n\t\t\t\tundefined;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_register( 'cells().data()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn _fnGetCellData( settings, row, column );\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\n\t\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\n\t\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn settings.aoData[ row ][ type ][ column ];\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn _fnGetCellData( settings, row, column, type );\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn {\n\t\t\t\trow: row,\n\t\t\t\tcolumn: column,\n\t\t\t\tcolumnVisible: _fnColumnIndexToVisible( settings, column )\n\t\t\t};\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\t_fnInvalidate( settings, row, src, column );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\n\t\treturn _selector_first( this.cells( rowSelector, columnSelector, opts ) );\n\t} );\n\t\n\t\n\t_api_register( 'cell().data()', function ( data ) {\n\t\tvar ctx = this.context;\n\t\tvar cell = this[0];\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// Get\n\t\t\treturn ctx.length && cell.length ?\n\t\t\t\t_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// Set\n\t\t_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\n\t\t_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Get current ordering (sorting) that has been applied to the table.\n\t *\n\t * @returns {array} 2D array containing the sorting information for the first\n\t *   table in the current context. Each element in the parent array represents\n\t *   a column being sorted upon (i.e. multi-sorting with two columns would have\n\t *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n\t *   the column index that the sorting condition applies to, the second is the\n\t *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n\t *   index of the sorting order from the `column.sorting` initialisation array.\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {integer} order Column index to sort upon.\n\t * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n\t * @returns {DataTables.Api} this\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {array} order 1D array of sorting information to be applied.\n\t * @param {array} [...] Optional additional sorting conditions\n\t * @returns {DataTables.Api} this\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {array} order 2D array of sorting information to be applied.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'order()', function ( order, dir ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( order === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length !== 0 ?\n\t\t\t\tctx[0].aaSorting :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// set\n\t\tif ( typeof order === 'number' ) {\n\t\t\t// Simple column / direction passed in\n\t\t\torder = [ [ order, dir ] ];\n\t\t}\n\t\telse if ( order.length && ! Array.isArray( order[0] ) ) {\n\t\t\t// Arguments passed in (list of 1D arrays)\n\t\t\torder = Array.prototype.slice.call( arguments );\n\t\t}\n\t\t// otherwise a 2D array was passed in\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tsettings.aaSorting = order.slice();\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Attach a sort listener to an element for a given column\n\t *\n\t * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n\t *   listener to. This can take the form of a single DOM node, a jQuery\n\t *   collection of nodes or a jQuery selector which will identify the node(s).\n\t * @param {integer} column the column that a click on this node will sort on\n\t * @param {function} [callback] callback function when sort is run\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'order.listener()', function ( node, column, callback ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnSortAttachListener( settings, node, column, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'order.fixed()', function ( set ) {\n\t\tif ( ! set ) {\n\t\t\tvar ctx = this.context;\n\t\t\tvar fixed = ctx.length ?\n\t\t\t\tctx[0].aaSortingFixed :\n\t\t\t\tundefined;\n\t\n\t\t\treturn Array.isArray( fixed ) ?\n\t\t\t\t{ pre: fixed } :\n\t\t\t\tfixed;\n\t\t}\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tsettings.aaSortingFixed = $.extend( true, {}, set );\n\t\t} );\n\t} );\n\t\n\t\n\t// Order by the selected column(s)\n\t_api_register( [\n\t\t'columns().order()',\n\t\t'column().order()'\n\t], function ( dir ) {\n\t\tvar that = this;\n\t\n\t\treturn this.iterator( 'table', function ( settings, i ) {\n\t\t\tvar sort = [];\n\t\n\t\t\t$.each( that[i], function (j, col) {\n\t\t\t\tsort.push( [ col, dir ] );\n\t\t\t} );\n\t\n\t\t\tsettings.aaSorting = sort;\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t_api_register( 'search()', function ( input, regex, smart, caseInsen ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( input === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length !== 0 ?\n\t\t\t\tctx[0].oPreviousSearch.sSearch :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// set\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t_fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {\n\t\t\t\t\"sSearch\": input+\"\",\n\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t} ), 1 );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_registerPlural(\n\t\t'columns().search()',\n\t\t'column().search()',\n\t\tfunction ( input, regex, smart, caseInsen ) {\n\t\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\t\tvar preSearch = settings.aoPreSearchCols;\n\t\n\t\t\t\tif ( input === undefined ) {\n\t\t\t\t\t// get\n\t\t\t\t\treturn preSearch[ column ].sSearch;\n\t\t\t\t}\n\t\n\t\t\t\t// set\n\t\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t$.extend( preSearch[ column ], {\n\t\t\t\t\t\"sSearch\": input+\"\",\n\t\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t\t} );\n\t\n\t\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch, 1 );\n\t\t\t} );\n\t\t}\n\t);\n\t\n\t/*\n\t * State API methods\n\t */\n\t\n\t_api_register( 'state()', function () {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oSavedState :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'state.clear()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t// Save an empty object\n\t\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'state.loaded()', function () {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oLoadedState :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'state.save()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnSaveState( settings );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Provide a common method for plug-ins to check the version of DataTables being\n\t * used, in order to ensure compatibility.\n\t *\n\t *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n\t *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n\t *  @returns {boolean} true if this version of DataTables is greater or equal to\n\t *    the required version, or false if this version of DataTales is not\n\t *    suitable\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n\t */\n\tDataTable.versionCheck = DataTable.fnVersionCheck = function( version )\n\t{\n\t\tvar aThis = DataTable.version.split('.');\n\t\tvar aThat = version.split('.');\n\t\tvar iThis, iThat;\n\t\n\t\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\n\t\t\tiThis = parseInt( aThis[i], 10 ) || 0;\n\t\t\tiThat = parseInt( aThat[i], 10 ) || 0;\n\t\n\t\t\t// Parts are the same, keep comparing\n\t\t\tif (iThis === iThat) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\t// Parts are different, return immediately\n\t\t\treturn iThis > iThat;\n\t\t}\n\t\n\t\treturn true;\n\t};\n\t\n\t\n\t/**\n\t * Check if a `<table>` node is a DataTable table already or not.\n\t *\n\t *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n\t *      selector for the table to test. Note that if more than more than one\n\t *      table is passed on, only the first will be checked\n\t *  @returns {boolean} true the table given is a DataTable, or false otherwise\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n\t *      $('#example').dataTable();\n\t *    }\n\t */\n\tDataTable.isDataTable = DataTable.fnIsDataTable = function ( table )\n\t{\n\t\tvar t = $(table).get(0);\n\t\tvar is = false;\n\t\n\t\tif ( table instanceof DataTable.Api ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\t$.each( DataTable.settings, function (i, o) {\n\t\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n\t\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\t\n\t\t\tif ( o.nTable === t || head === t || foot === t ) {\n\t\t\t\tis = true;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn is;\n\t};\n\t\n\t\n\t/**\n\t * Get all DataTable tables that have been initialised - optionally you can\n\t * select to get only currently visible tables.\n\t *\n\t *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n\t *    or visible tables only.\n\t *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n\t *    DataTables\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    $.each( $.fn.dataTable.tables(true), function () {\n\t *      $(table).DataTable().columns.adjust();\n\t *    } );\n\t */\n\tDataTable.tables = DataTable.fnTables = function ( visible )\n\t{\n\t\tvar api = false;\n\t\n\t\tif ( $.isPlainObject( visible ) ) {\n\t\t\tapi = visible.api;\n\t\t\tvisible = visible.visible;\n\t\t}\n\t\n\t\tvar a = $.map( DataTable.settings, function (o) {\n\t\t\tif ( !visible || (visible && $(o.nTable).is(':visible')) ) {\n\t\t\t\treturn o.nTable;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn api ?\n\t\t\tnew _Api( a ) :\n\t\t\ta;\n\t};\n\t\n\t\n\t/**\n\t * Convert from camel case parameters to Hungarian notation. This is made public\n\t * for the extensions to provide the same ability as DataTables core to accept\n\t * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n\t * parameters.\n\t *\n\t *  @param {object} src The model object which holds all parameters that can be\n\t *    mapped.\n\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t *  @param {boolean} force When set to `true`, properties which already have a\n\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t *    won't be.\n\t */\n\tDataTable.camelToHungarian = _fnCamelToHungarian;\n\t\n\t\n\t\n\t/**\n\t *\n\t */\n\t_api_register( '$()', function ( selector, opts ) {\n\t\tvar\n\t\t\trows   = this.rows( opts ).nodes(), // Get all rows\n\t\t\tjqRows = $(rows);\n\t\n\t\treturn $( [].concat(\n\t\t\tjqRows.filter( selector ).toArray(),\n\t\t\tjqRows.find( selector ).toArray()\n\t\t) );\n\t} );\n\t\n\t\n\t// jQuery functions to operate on the tables\n\t$.each( [ 'on', 'one', 'off' ], function (i, key) {\n\t\t_api_register( key+'()', function ( /* event, handler */ ) {\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\n\t\t\t// Add the `dt` namespace automatically if it isn't already present\n\t\t\targs[0] = $.map( args[0].split( /\\s/ ), function ( e ) {\n\t\t\t\treturn ! e.match(/\\.dt\\b/) ?\n\t\t\t\t\te+'.dt' :\n\t\t\t\t\te;\n\t\t\t\t} ).join( ' ' );\n\t\n\t\t\tvar inst = $( this.tables().nodes() );\n\t\t\tinst[key].apply( inst, args );\n\t\t\treturn this;\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'clear()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnClearTable( settings );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'settings()', function () {\n\t\treturn new _Api( this.context, this.context );\n\t} );\n\t\n\t\n\t_api_register( 'init()', function () {\n\t\tvar ctx = this.context;\n\t\treturn ctx.length ? ctx[0].oInit : null;\n\t} );\n\t\n\t\n\t_api_register( 'data()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\treturn _pluck( settings.aoData, '_aData' );\n\t\t} ).flatten();\n\t} );\n\t\n\t\n\t_api_register( 'destroy()', function ( remove ) {\n\t\tremove = remove || false;\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tvar classes   = settings.oClasses;\n\t\t\tvar table     = settings.nTable;\n\t\t\tvar tbody     = settings.nTBody;\n\t\t\tvar thead     = settings.nTHead;\n\t\t\tvar tfoot     = settings.nTFoot;\n\t\t\tvar jqTable   = $(table);\n\t\t\tvar jqTbody   = $(tbody);\n\t\t\tvar jqWrapper = $(settings.nTableWrapper);\n\t\t\tvar rows      = $.map( settings.aoData, function (r) { return r.nTr; } );\n\t\t\tvar i, ien;\n\t\n\t\t\t// Flag to note that the table is currently being destroyed - no action\n\t\t\t// should be taken\n\t\t\tsettings.bDestroying = true;\n\t\n\t\t\t// Fire off the destroy callbacks for plug-ins etc\n\t\t\t_fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings] );\n\t\n\t\t\t// If not being removed from the document, make all columns visible\n\t\t\tif ( ! remove ) {\n\t\t\t\tnew _Api( settings ).columns().visible( true );\n\t\t\t}\n\t\n\t\t\t// Blitz all `DT` namespaced events (these are internal events, the\n\t\t\t// lowercase, `dt` events are user subscribed and they are responsible\n\t\t\t// for removing them\n\t\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n\t\t\t$(window).off('.DT-'+settings.sInstance);\n\t\n\t\t\t// When scrolling we had to break the table up - restore it\n\t\t\tif ( table != thead.parentNode ) {\n\t\t\t\tjqTable.children('thead').detach();\n\t\t\t\tjqTable.append( thead );\n\t\t\t}\n\t\n\t\t\tif ( tfoot && table != tfoot.parentNode ) {\n\t\t\t\tjqTable.children('tfoot').detach();\n\t\t\t\tjqTable.append( tfoot );\n\t\t\t}\n\t\n\t\t\tsettings.aaSorting = [];\n\t\t\tsettings.aaSortingFixed = [];\n\t\t\t_fnSortingClasses( settings );\n\t\n\t\t\t$( rows ).removeClass( settings.asStripeClasses.join(' ') );\n\t\n\t\t\t$('th, td', thead).removeClass( classes.sSortable+' '+\n\t\t\t\tclasses.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone\n\t\t\t);\n\t\n\t\t\t// Add the TR elements back into the table in their original order\n\t\t\tjqTbody.children().detach();\n\t\t\tjqTbody.append( rows );\n\t\n\t\t\tvar orig = settings.nTableWrapper.parentNode;\n\t\n\t\t\t// Remove the DataTables generated nodes, events and classes\n\t\t\tvar removedMethod = remove ? 'remove' : 'detach';\n\t\t\tjqTable[ removedMethod ]();\n\t\t\tjqWrapper[ removedMethod ]();\n\t\n\t\t\t// If we need to reattach the table to the document\n\t\t\tif ( ! remove && orig ) {\n\t\t\t\t// insertBefore acts like appendChild if !arg[1]\n\t\t\t\torig.insertBefore( table, settings.nTableReinsertBefore );\n\t\n\t\t\t\t// Restore the width of the original table - was read from the style property,\n\t\t\t\t// so we can restore directly to that\n\t\t\t\tjqTable\n\t\t\t\t\t.css( 'width', settings.sDestroyWidth )\n\t\t\t\t\t.removeClass( classes.sTable );\n\t\n\t\t\t\t// If the were originally stripe classes - then we add them back here.\n\t\t\t\t// Note this is not fool proof (for example if not all rows had stripe\n\t\t\t\t// classes - but it's a good effort without getting carried away\n\t\t\t\tien = settings.asDestroyStripes.length;\n\t\n\t\t\t\tif ( ien ) {\n\t\t\t\t\tjqTbody.children().each( function (i) {\n\t\t\t\t\t\t$(this).addClass( settings.asDestroyStripes[i % ien] );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Remove the settings object from the settings array */\n\t\t\tvar idx = $.inArray( settings, DataTable.settings );\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tDataTable.settings.splice( idx, 1 );\n\t\t\t}\n\t\t} );\n\t} );\n\t\n\t\n\t// Add the `every()` method for rows, columns and cells in a compact form\n\t$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\n\t\t_api_register( type+'s().every()', function ( fn ) {\n\t\t\tvar opts = this.selector.opts;\n\t\t\tvar api = this;\n\t\n\t\t\treturn this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {\n\t\t\t\t// Rows and columns:\n\t\t\t\t//  arg1 - index\n\t\t\t\t//  arg2 - table counter\n\t\t\t\t//  arg3 - loop counter\n\t\t\t\t//  arg4 - undefined\n\t\t\t\t// Cells:\n\t\t\t\t//  arg1 - row index\n\t\t\t\t//  arg2 - column index\n\t\t\t\t//  arg3 - table counter\n\t\t\t\t//  arg4 - loop counter\n\t\t\t\tfn.call(\n\t\t\t\t\tapi[ type ](\n\t\t\t\t\t\targ1,\n\t\t\t\t\t\ttype==='cell' ? arg2 : opts,\n\t\t\t\t\t\ttype==='cell' ? opts : undefined\n\t\t\t\t\t),\n\t\t\t\t\targ1, arg2, arg3, arg4\n\t\t\t\t);\n\t\t\t} );\n\t\t} );\n\t} );\n\t\n\t\n\t// i18n method for extensions to be able to use the language object from the\n\t// DataTable\n\t_api_register( 'i18n()', function ( token, def, plural ) {\n\t\tvar ctx = this.context[0];\n\t\tvar resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\n\t\n\t\tif ( resolved === undefined ) {\n\t\t\tresolved = def;\n\t\t}\n\t\n\t\tif ( plural !== undefined && $.isPlainObject( resolved ) ) {\n\t\t\tresolved = resolved[ plural ] !== undefined ?\n\t\t\t\tresolved[ plural ] :\n\t\t\t\tresolved._;\n\t\t}\n\t\n\t\treturn resolved.replace( '%d', plural ); // nb: plural might be undefined,\n\t} );\t\n\t/**\n\t * Version string for plug-ins to check compatibility. Allowed format is\n\t * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n\t * only for non-release builds. See http://semver.org/ for more information.\n\t *  @member\n\t *  @type string\n\t *  @default Version number\n\t */\n\tDataTable.version = \"1.12.1\";\n\t\n\t/**\n\t * Private data store, containing all of the settings objects that are\n\t * created for the tables on a given page.\n\t *\n\t * Note that the `DataTable.settings` object is aliased to\n\t * `jQuery.fn.dataTableExt` through which it may be accessed and\n\t * manipulated, or `jQuery.fn.dataTable.settings`.\n\t *  @member\n\t *  @type array\n\t *  @default []\n\t *  @private\n\t */\n\tDataTable.settings = [];\n\t\n\t/**\n\t * Object models container, for the various models that DataTables has\n\t * available to it. These models define the objects that are used to hold\n\t * the active state and configuration of the table.\n\t *  @namespace\n\t */\n\tDataTable.models = {};\n\t\n\t\n\t\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * search information for the global filter and individual column filters.\n\t *  @namespace\n\t */\n\tDataTable.models.oSearch = {\n\t\t/**\n\t\t * Flag to indicate if the filtering should be case insensitive or not\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bCaseInsensitive\": true,\n\t\n\t\t/**\n\t\t * Applied search term\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sSearch\": \"\",\n\t\n\t\t/**\n\t\t * Flag to indicate if the search term should be interpreted as a\n\t\t * regular expression (true) or not (false) and therefore and special\n\t\t * regex characters escaped.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bRegex\": false,\n\t\n\t\t/**\n\t\t * Flag to indicate if DataTables is to use its smart filtering or not.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bSmart\": true,\n\t\n\t\t/**\n\t\t * Flag to indicate if DataTables should only trigger a search when\n\t\t * the return key is pressed.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"return\": false\n\t};\n\t\n\t\n\t\n\t\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * each individual row. This is the object format used for the settings\n\t * aoData array.\n\t *  @namespace\n\t */\n\tDataTable.models.oRow = {\n\t\t/**\n\t\t * TR element for the row\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTr\": null,\n\t\n\t\t/**\n\t\t * Array of TD elements for each row. This is null until the row has been\n\t\t * created.\n\t\t *  @type array nodes\n\t\t *  @default []\n\t\t */\n\t\t\"anCells\": null,\n\t\n\t\t/**\n\t\t * Data object from the original data source for the row. This is either\n\t\t * an array if using the traditional form of DataTables, or an object if\n\t\t * using mData options. The exact type will depend on the passed in\n\t\t * data from the data source, or will be an array if using DOM a data\n\t\t * source.\n\t\t *  @type array|object\n\t\t *  @default []\n\t\t */\n\t\t\"_aData\": [],\n\t\n\t\t/**\n\t\t * Sorting data cache - this array is ostensibly the same length as the\n\t\t * number of columns (although each index is generated only as it is\n\t\t * needed), and holds the data that is used for sorting each column in the\n\t\t * row. We do this cache generation at the start of the sort in order that\n\t\t * the formatting of the sort data need be done only once for each cell\n\t\t * per sort. This array should not be read from or written to by anything\n\t\t * other than the master sorting methods.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_aSortData\": null,\n\t\n\t\t/**\n\t\t * Per cell filtering data cache. As per the sort data cache, used to\n\t\t * increase the performance of the filtering in DataTables\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_aFilterData\": null,\n\t\n\t\t/**\n\t\t * Filtering data cache. This is the same as the cell filtering cache, but\n\t\t * in this case a string rather than an array. This is easily computed with\n\t\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\n\t\t * needed on every search (memory traded for performance)\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_sFilterRow\": null,\n\t\n\t\t/**\n\t\t * Cache of the class name that DataTables has applied to the row, so we\n\t\t * can quickly look at this variable rather than needing to do a DOM check\n\t\t * on className for the nTr property.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *  @private\n\t\t */\n\t\t\"_sRowStripe\": \"\",\n\t\n\t\t/**\n\t\t * Denote if the original data source was from the DOM, or the data source\n\t\t * object. This is used for invalidating data, so DataTables can\n\t\t * automatically read data from the original source, unless uninstructed\n\t\t * otherwise.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"src\": null,\n\t\n\t\t/**\n\t\t * Index in the aoData array. This saves an indexOf lookup when we have the\n\t\t * object, but want to know the index\n\t\t *  @type integer\n\t\t *  @default -1\n\t\t *  @private\n\t\t */\n\t\t\"idx\": -1\n\t};\n\t\n\t\n\t/**\n\t * Template object for the column information object in DataTables. This object\n\t * is held in the settings aoColumns array and contains all the information that\n\t * DataTables needs about each individual column.\n\t *\n\t * Note that this object is related to {@link DataTable.defaults.column}\n\t * but this one is the internal data store for DataTables's cache of columns.\n\t * It should NOT be manipulated outside of DataTables. Any configuration should\n\t * be done through the initialisation options.\n\t *  @namespace\n\t */\n\tDataTable.models.oColumn = {\n\t\t/**\n\t\t * Column index. This could be worked out on-the-fly with $.inArray, but it\n\t\t * is faster to just hold it as a variable\n\t\t *  @type integer\n\t\t *  @default null\n\t\t */\n\t\t\"idx\": null,\n\t\n\t\t/**\n\t\t * A list of the columns that sorting should occur on when this column\n\t\t * is sorted. That this property is an array allows multi-column sorting\n\t\t * to be defined for a column (for example first name / last name columns\n\t\t * would benefit from this). The values are integers pointing to the\n\t\t * columns to be sorted on (typically it will be a single integer pointing\n\t\t * at itself, but that doesn't need to be the case).\n\t\t *  @type array\n\t\t */\n\t\t\"aDataSort\": null,\n\t\n\t\t/**\n\t\t * Define the sorting directions that are applied to the column, in sequence\n\t\t * as the column is repeatedly sorted upon - i.e. the first value is used\n\t\t * as the sorting direction when the column if first sorted (clicked on).\n\t\t * Sort it again (click again) and it will move on to the next index.\n\t\t * Repeat until loop.\n\t\t *  @type array\n\t\t */\n\t\t\"asSorting\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is searchable, and thus should be included\n\t\t * in the filtering or not.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSearchable\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is sortable or not.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortable\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is currently visible in the table or not\n\t\t *  @type boolean\n\t\t */\n\t\t\"bVisible\": null,\n\t\n\t\t/**\n\t\t * Store for manual type assignment using the `column.type` option. This\n\t\t * is held in store so we can manipulate the column's `sType` property.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_sManualType\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if HTML5 data attributes should be used as the data\n\t\t * source for filtering or sorting. True is either are.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @private\n\t\t */\n\t\t\"_bAttrSrc\": false,\n\t\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t *  @type function\n\t\t *  @param {element} nTd The TD node that has been created\n\t\t *  @param {*} sData The Data for the cell\n\t\t *  @param {array|object} oData The data for the whole row\n\t\t *  @param {int} iRow The row index for the aoData data store\n\t\t *  @default null\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\t\n\t\t/**\n\t\t * Function to get data from a cell in a column. You should <b>never</b>\n\t\t * access data directly through _aData internally in DataTables - always use\n\t\t * the method attached to this property. It allows mData to function as\n\t\t * required. This function is automatically assigned by the column\n\t\t * initialisation method\n\t\t *  @type function\n\t\t *  @param {array|object} oData The data array/object for the array\n\t\t *    (i.e. aoData[]._aData)\n\t\t *  @param {string} sSpecific The specific data type you want to get -\n\t\t *    'display', 'type' 'filter' 'sort'\n\t\t *  @returns {*} The data for the cell from the given row's data\n\t\t *  @default null\n\t\t */\n\t\t\"fnGetData\": null,\n\t\n\t\t/**\n\t\t * Function to set data for a cell in the column. You should <b>never</b>\n\t\t * set the data directly to _aData internally in DataTables - always use\n\t\t * this method. It allows mData to function as required. This function\n\t\t * is automatically assigned by the column initialisation method\n\t\t *  @type function\n\t\t *  @param {array|object} oData The data array/object for the array\n\t\t *    (i.e. aoData[]._aData)\n\t\t *  @param {*} sValue Value to set\n\t\t *  @default null\n\t\t */\n\t\t\"fnSetData\": null,\n\t\n\t\t/**\n\t\t * Property to read the value for the cells in the column from the data\n\t\t * source array / object. If null, then the default content is used, if a\n\t\t * function is given then the return from the function is used.\n\t\t *  @type function|int|string|null\n\t\t *  @default null\n\t\t */\n\t\t\"mData\": null,\n\t\n\t\t/**\n\t\t * Partner property to mData which is used (only when defined) to get\n\t\t * the data - i.e. it is basically the same as mData, but without the\n\t\t * 'set' option, and also the data fed to it is the result from mData.\n\t\t * This is the rendering method to match the data method of mData.\n\t\t *  @type function|int|string|null\n\t\t *  @default null\n\t\t */\n\t\t\"mRender\": null,\n\t\n\t\t/**\n\t\t * Unique header TH/TD element for this column - this is what the sorting\n\t\t * listener is attached to (if sorting is enabled.)\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTh\": null,\n\t\n\t\t/**\n\t\t * Unique footer TH/TD element for this column (if there is one). Not used\n\t\t * in DataTables as such, but can be used for plug-ins to reference the\n\t\t * footer for each column.\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTf\": null,\n\t\n\t\t/**\n\t\t * The class to apply to all TD elements in the table's TBODY for the column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sClass\": null,\n\t\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t *  @type string\n\t\t */\n\t\t\"sContentPadding\": null,\n\t\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because mData\n\t\t * is set to null, or because the data source itself is null).\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sDefaultContent\": null,\n\t\n\t\t/**\n\t\t * Name for the column, allowing reference to the column by name as well as\n\t\t * by index (needs a lookup to work by name).\n\t\t *  @type string\n\t\t */\n\t\t\"sName\": null,\n\t\n\t\t/**\n\t\t * Custom sorting data type - defines which of the available plug-ins in\n\t\t * afnSortData the custom sorting will use - if any is defined.\n\t\t *  @type string\n\t\t *  @default std\n\t\t */\n\t\t\"sSortDataType\": 'std',\n\t\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sSortingClass\": null,\n\t\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column -\n\t\t * when jQuery UI theming is used.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sSortingClassJUI\": null,\n\t\n\t\t/**\n\t\t * Title of the column - what is seen in the TH element (nTh).\n\t\t *  @type string\n\t\t */\n\t\t\"sTitle\": null,\n\t\n\t\t/**\n\t\t * Column sorting and filtering type\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sType\": null,\n\t\n\t\t/**\n\t\t * Width of the column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sWidth\": null,\n\t\n\t\t/**\n\t\t * Width of the column when it was first \"encountered\"\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sWidthOrig\": null\n\t};\n\t\n\t\n\t/*\n\t * Developer note: The properties of the object below are given in Hungarian\n\t * notation, that was used as the interface for DataTables prior to v1.10, however\n\t * from v1.10 onwards the primary interface is camel case. In order to avoid\n\t * breaking backwards compatibility utterly with this change, the Hungarian\n\t * version is still, internally the primary interface, but is is not documented\n\t * - hence the @name tags in each doc comment. This allows a Javascript function\n\t * to create a map from Hungarian notation to camel case (going the other direction\n\t * would require each property to be listed, which would add around 3K to the size\n\t * of DataTables, while this method is about a 0.5K hit).\n\t *\n\t * Ultimately this does pave the way for Hungarian notation to be dropped\n\t * completely, but that is a massive amount of work and will break current\n\t * installs (therefore is on-hold until v2).\n\t */\n\t\n\t/**\n\t * Initialisation options that can be given to DataTables at initialisation\n\t * time.\n\t *  @namespace\n\t */\n\tDataTable.defaults = {\n\t\t/**\n\t\t * An array of data to use for the table, passed in at initialisation which\n\t\t * will be used in preference to any data which is already in the DOM. This is\n\t\t * particularly useful for constructing tables purely in Javascript, for\n\t\t * example with a custom Ajax call.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.data\n\t\t *\n\t\t *  @example\n\t\t *    // Using a 2D array data source\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"data\": [\n\t\t *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n\t\t *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n\t\t *        ],\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"Engine\" },\n\t\t *          { \"title\": \"Browser\" },\n\t\t *          { \"title\": \"Platform\" },\n\t\t *          { \"title\": \"Version\" },\n\t\t *          { \"title\": \"Grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using an array of objects as a data source (`data`)\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"data\": [\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 4.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  4,\n\t\t *            \"grade\":    \"X\"\n\t\t *          },\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 5.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  5,\n\t\t *            \"grade\":    \"C\"\n\t\t *          }\n\t\t *        ],\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"Engine\",   \"data\": \"engine\" },\n\t\t *          { \"title\": \"Browser\",  \"data\": \"browser\" },\n\t\t *          { \"title\": \"Platform\", \"data\": \"platform\" },\n\t\t *          { \"title\": \"Version\",  \"data\": \"version\" },\n\t\t *          { \"title\": \"Grade\",    \"data\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aaData\": null,\n\t\n\t\n\t\t/**\n\t\t * If ordering is enabled, then DataTables will perform a first pass sort on\n\t\t * initialisation. You can define which column(s) the sort is performed\n\t\t * upon, and the sorting direction, with this variable. The `sorting` array\n\t\t * should contain an array for each column to be sorted initially containing\n\t\t * the column's index and a direction string ('asc' or 'desc').\n\t\t *  @type array\n\t\t *  @default [[0,'asc']]\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.order\n\t\t *\n\t\t *  @example\n\t\t *    // Sort by 3rd column first, and then 4th column\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"order\": [[2,'asc'], [3,'desc']]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *    // No initial sorting\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"order\": []\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aaSorting\": [[0,'asc']],\n\t\n\t\n\t\t/**\n\t\t * This parameter is basically identical to the `sorting` parameter, but\n\t\t * cannot be overridden by user interaction with the table. What this means\n\t\t * is that you could have a column (visible or hidden) which the sorting\n\t\t * will always be forced on first - any sorting after that (from the user)\n\t\t * will then be performed as required. This can be useful for grouping rows\n\t\t * together.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.orderFixed\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderFixed\": [[0,'asc']]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"aaSortingFixed\": [],\n\t\n\t\n\t\t/**\n\t\t * DataTables can be instructed to load data to display in the table from a\n\t\t * Ajax source. This option defines how that Ajax call is made and where to.\n\t\t *\n\t\t * The `ajax` property has three different modes of operation, depending on\n\t\t * how it is defined. These are:\n\t\t *\n\t\t * * `string` - Set the URL from where the data should be loaded from.\n\t\t * * `object` - Define properties for `jQuery.ajax`.\n\t\t * * `function` - Custom data get function\n\t\t *\n\t\t * `string`\n\t\t * --------\n\t\t *\n\t\t * As a string, the `ajax` property simply defines the URL from which\n\t\t * DataTables will load data.\n\t\t *\n\t\t * `object`\n\t\t * --------\n\t\t *\n\t\t * As an object, the parameters in the object are passed to\n\t\t * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control\n\t\t * of the Ajax request. DataTables has a number of default parameters which\n\t\t * you can override using this option. Please refer to the jQuery\n\t\t * documentation for a full description of the options available, although\n\t\t * the following parameters provide additional options in DataTables or\n\t\t * require special consideration:\n\t\t *\n\t\t * * `data` - As with jQuery, `data` can be provided as an object, but it\n\t\t *   can also be used as a function to manipulate the data DataTables sends\n\t\t *   to the server. The function takes a single parameter, an object of\n\t\t *   parameters with the values that DataTables has readied for sending. An\n\t\t *   object may be returned which will be merged into the DataTables\n\t\t *   defaults, or you can add the items to the object that was passed in and\n\t\t *   not return anything from the function. This supersedes `fnServerParams`\n\t\t *   from DataTables 1.9-.\n\t\t *\n\t\t * * `dataSrc` - By default DataTables will look for the property `data` (or\n\t\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n\t\t *   from an Ajax source or for server-side processing - this parameter\n\t\t *   allows that property to be changed. You can use Javascript dotted\n\t\t *   object notation to get a data source for multiple levels of nesting, or\n\t\t *   it my be used as a function. As a function it takes a single parameter,\n\t\t *   the JSON returned from the server, which can be manipulated as\n\t\t *   required, with the returned value being that used by DataTables as the\n\t\t *   data source for the table. This supersedes `sAjaxDataProp` from\n\t\t *   DataTables 1.9-.\n\t\t *\n\t\t * * `success` - Should not be overridden it is used internally in\n\t\t *   DataTables. To manipulate / transform the data returned by the server\n\t\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n\t\t *\n\t\t * `function`\n\t\t * ----------\n\t\t *\n\t\t * As a function, making the Ajax call is left up to yourself allowing\n\t\t * complete control of the Ajax request. Indeed, if desired, a method other\n\t\t * than Ajax could be used to obtain the required data, such as Web storage\n\t\t * or an AIR database.\n\t\t *\n\t\t * The function is given four parameters and no return is required. The\n\t\t * parameters are:\n\t\t *\n\t\t * 1. _object_ - Data to send to the server\n\t\t * 2. _function_ - Callback function that must be executed when the required\n\t\t *    data has been obtained. That data should be passed into the callback\n\t\t *    as the only parameter\n\t\t * 3. _object_ - DataTables settings object for the table\n\t\t *\n\t\t * Note that this supersedes `fnServerData` from DataTables 1.9-.\n\t\t *\n\t\t *  @type string|object|function\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.ajax\n\t\t *  @since 1.10.0\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax.\n\t\t *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": \"data.json\"\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax, using `dataSrc` to change\n\t\t *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": \"tableData\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\n\t\t *   // from a plain array rather than an array in an object\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": \"\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Manipulate the data returned from the server - add a link to data\n\t\t *   // (note this can, should, be done using `render` for the column - this\n\t\t *   // is just a simple example of how the data can be manipulated).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": function ( json ) {\n\t\t *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\n\t\t *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\n\t\t *         }\n\t\t *         return json;\n\t\t *       }\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Add data to the request\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"data\": function ( d ) {\n\t\t *         return {\n\t\t *           \"extra_search\": $('#extra').val()\n\t\t *         };\n\t\t *       }\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Send request as POST\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"type\": \"POST\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get the data from localStorage (could interface with a form for\n\t\t *   // adding, editing and removing rows).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": function (data, callback, settings) {\n\t\t *       callback(\n\t\t *         JSON.parse( localStorage.getItem('dataTablesData') )\n\t\t *       );\n\t\t *     }\n\t\t *   } );\n\t\t */\n\t\t\"ajax\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter allows you to readily specify the entries in the length drop\n\t\t * down menu that DataTables shows when pagination is enabled. It can be\n\t\t * either a 1D array of options which will be used for both the displayed\n\t\t * option and the value, or a 2D array which will use the array in the first\n\t\t * position as the value, and the array in the second position as the\n\t\t * displayed options (useful for language strings such as 'All').\n\t\t *\n\t\t * Note that the `pageLength` property will be automatically set to the\n\t\t * first value given in this array, unless `pageLength` is also provided.\n\t\t *  @type array\n\t\t *  @default [ 10, 25, 50, 100 ]\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.lengthMenu\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\n\t\n\t\n\t\t/**\n\t\t * The `columns` option in the initialisation parameter allows you to define\n\t\t * details about the way individual columns behave. For a full list of\n\t\t * column options that can be set, please see\n\t\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\n\t\t * define your columns, you must have an entry in the array for every single\n\t\t * column that you have in your table (these can be null if you don't which\n\t\t * to specify any options).\n\t\t *  @member\n\t\t *\n\t\t *  @name DataTable.defaults.column\n\t\t */\n\t\t\"aoColumns\": null,\n\t\n\t\t/**\n\t\t * Very similar to `columns`, `columnDefs` allows you to target a specific\n\t\t * column, multiple columns, or all columns, using the `targets` property of\n\t\t * each object in the array. This allows great flexibility when creating\n\t\t * tables, as the `columnDefs` arrays can be of any length, targeting the\n\t\t * columns you specifically want. `columnDefs` may use any of the column\n\t\t * options available: {@link DataTable.defaults.column}, but it _must_\n\t\t * have `targets` defined in each object in the array. Values in the `targets`\n\t\t * array may be:\n\t\t *   <ul>\n\t\t *     <li>a string - class name will be matched on the TH for the column</li>\n\t\t *     <li>0 or a positive integer - column index counting from the left</li>\n\t\t *     <li>a negative integer - column index counting from the right</li>\n\t\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n\t\t *   </ul>\n\t\t *  @member\n\t\t *\n\t\t *  @name DataTable.defaults.columnDefs\n\t\t */\n\t\t\"aoColumnDefs\": null,\n\t\n\t\n\t\t/**\n\t\t * Basically the same as `search`, this parameter defines the individual column\n\t\t * filtering state at initialisation time. The array must be of the same size\n\t\t * as the number of columns, and each element be an object with the parameters\n\t\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\n\t\t * accepted and the default will be used.\n\t\t *  @type array\n\t\t *  @default []\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.searchCols\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searchCols\": [\n\t\t *          null,\n\t\t *          { \"search\": \"My filter\" },\n\t\t *          null,\n\t\t *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"aoSearchCols\": [],\n\t\n\t\n\t\t/**\n\t\t * An array of CSS classes that should be applied to displayed rows. This\n\t\t * array may be of any length, and DataTables will apply each class\n\t\t * sequentially, looping when required.\n\t\t *  @type array\n\t\t *  @default null <i>Will take the values determined by the `oClasses.stripe*`\n\t\t *    options</i>\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.stripeClasses\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"asStripeClasses\": null,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable automatic column width calculation. This can be disabled\n\t\t * as an optimisation (it takes some time to calculate the widths) if the\n\t\t * tables widths are passed in using `columns`.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.autoWidth\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"autoWidth\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bAutoWidth\": true,\n\t\n\t\n\t\t/**\n\t\t * Deferred rendering can provide DataTables with a huge speed boost when you\n\t\t * are using an Ajax or JS data source for the table. This option, when set to\n\t\t * true, will cause DataTables to defer the creation of the table elements for\n\t\t * each row until they are needed for a draw - saving a significant amount of\n\t\t * time.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.deferRender\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajax\": \"sources/arrays.txt\",\n\t\t *        \"deferRender\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bDeferRender\": false,\n\t\n\t\n\t\t/**\n\t\t * Replace a DataTable which matches the given selector and replace it with\n\t\t * one which has the properties of the new initialisation object passed. If no\n\t\t * table matches the selector, then the new DataTable will be constructed as\n\t\t * per normal.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.destroy\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"srollY\": \"200px\",\n\t\t *        \"paginate\": false\n\t\t *      } );\n\t\t *\n\t\t *      // Some time later....\n\t\t *      $('#example').dataTable( {\n\t\t *        \"filter\": false,\n\t\t *        \"destroy\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bDestroy\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n\t\t * that it allows the end user to input multiple words (space separated) and\n\t\t * will match a row containing those words, even if not in the order that was\n\t\t * specified (this allow matching across multiple columns). Note that if you\n\t\t * wish to use filtering in DataTables this must remain 'true' - to remove the\n\t\t * default filtering input box and retain filtering abilities, please use\n\t\t * {@link DataTable.defaults.dom}.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.searching\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searching\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bFilter\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the table information display. This shows information\n\t\t * about the data that is currently visible on the page, including information\n\t\t * about filtered data if that action is being performed.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.info\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"info\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bInfo\": true,\n\t\n\t\n\t\t/**\n\t\t * Allows the end user to select the size of a formatted page from a select\n\t\t * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.lengthChange\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"lengthChange\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bLengthChange\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable pagination.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.paging\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"paging\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bPaginate\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the display of a 'processing' indicator when the table is\n\t\t * being processed (e.g. a sort). This is particularly useful for tables with\n\t\t * large amounts of data where it can take a noticeable amount of time to sort\n\t\t * the entries.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.processing\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"processing\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bProcessing\": false,\n\t\n\t\n\t\t/**\n\t\t * Retrieve the DataTables object for the given selector. Note that if the\n\t\t * table has already been initialised, this parameter will cause DataTables\n\t\t * to simply return the object that has already been set up - it will not take\n\t\t * account of any changes you might have made to the initialisation object\n\t\t * passed to DataTables (setting this parameter to true is an acknowledgement\n\t\t * that you understand this). `destroy` can be used to reinitialise a table if\n\t\t * you need.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.retrieve\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      initTable();\n\t\t *      tableActions();\n\t\t *    } );\n\t\t *\n\t\t *    function initTable ()\n\t\t *    {\n\t\t *      return $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200px\",\n\t\t *        \"paginate\": false,\n\t\t *        \"retrieve\": true\n\t\t *      } );\n\t\t *    }\n\t\t *\n\t\t *    function tableActions ()\n\t\t *    {\n\t\t *      var table = initTable();\n\t\t *      // perform API operations with oTable\n\t\t *    }\n\t\t */\n\t\t\"bRetrieve\": false,\n\t\n\t\n\t\t/**\n\t\t * When vertical (y) scrolling is enabled, DataTables will force the height of\n\t\t * the table's viewport to the given height at all times (useful for layout).\n\t\t * However, this can look odd when filtering data down to a small data set,\n\t\t * and the footer is left \"floating\" further down. This parameter (when\n\t\t * enabled) will cause DataTables to collapse the table's viewport down when\n\t\t * the result set will fit within the given Y height.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.scrollCollapse\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200\",\n\t\t *        \"scrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bScrollCollapse\": false,\n\t\n\t\n\t\t/**\n\t\t * Configure DataTables to use server-side processing. Note that the\n\t\t * `ajax` parameter must also be given in order to give DataTables a\n\t\t * source to obtain the required data for each draw.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverSide\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"xhr.php\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bServerSide\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable sorting of columns. Sorting of individual columns can be\n\t\t * disabled by the `sortable` option for each column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.ordering\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ordering\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSort\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or display DataTables' ability to sort multiple columns at the\n\t\t * same time (activated by shift-click by the user).\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.orderMulti\n\t\t *\n\t\t *  @example\n\t\t *    // Disable multiple column sorting ability\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderMulti\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortMulti\": true,\n\t\n\t\n\t\t/**\n\t\t * Allows control over whether DataTables should use the top (true) unique\n\t\t * cell that is found for a single column, or the bottom (false - default).\n\t\t * This is useful when using complex headers.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.orderCellsTop\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderCellsTop\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortCellsTop\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n\t\t * `sorting\\_3` to the columns which are currently being sorted on. This is\n\t\t * presented as a feature switch as it can increase processing time (while\n\t\t * classes are removed and added) so for large data sets you might want to\n\t\t * turn this off.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.orderClasses\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderClasses\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortClasses\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n\t\t * used to save table display information such as pagination information,\n\t\t * display length, filtering and sorting. As such when the end user reloads\n\t\t * the page the display display will match what thy had previously set up.\n\t\t *\n\t\t * Due to the use of `localStorage` the default state saving is not supported\n\t\t * in IE6 or 7. If state saving is required in those browsers, use\n\t\t * `stateSaveCallback` to provide a storage solution such as cookies.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.stateSave\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bStateSave\": false,\n\t\n\t\n\t\t/**\n\t\t * This function is called when a TR element is created (and all TD child\n\t\t * elements have been inserted), or registered if using a DOM source, allowing\n\t\t * manipulation of the TR element (adding classes etc).\n\t\t *  @type function\n\t\t *  @param {node} row \"TR\" element for the current row\n\t\t *  @param {array} data Raw data array for this row\n\t\t *  @param {int} dataIndex The index of this row in the internal aoData array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.createdRow\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"createdRow\": function( row, data, dataIndex ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( data[4] == \"A\" )\n\t\t *          {\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnCreatedRow\": null,\n\t\n\t\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify any aspect you want about the created DOM.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.drawCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"drawCallback\": function( settings ) {\n\t\t *          alert( 'DataTables has redrawn the table' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnDrawCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * Identical to fnHeaderCallback() but for the table footer this function\n\t\t * allows you to modify the table footer on every 'draw' event.\n\t\t *  @type function\n\t\t *  @param {node} foot \"TR\" element for the footer\n\t\t *  @param {array} data Full table data (as derived from the original HTML)\n\t\t *  @param {int} start Index for the current display starting point in the\n\t\t *    display array\n\t\t *  @param {int} end Index for the current display ending point in the\n\t\t *    display array\n\t\t *  @param {array int} display Index array to translate the visual position\n\t\t *    to the full data array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.footerCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"footerCallback\": function( tfoot, data, start, end, display ) {\n\t\t *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnFooterCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * When rendering large numbers in the information element for the table\n\t\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n\t\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\n\t\t * rendered as \"1,000,000\") to help readability for the end user. This\n\t\t * function will override the default method DataTables uses.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {int} toFormat number to be formatted\n\t\t *  @returns {string} formatted string for DataTables to show the number\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.formatNumber\n\t\t *\n\t\t *  @example\n\t\t *    // Format a number using a single quote for the separator (note that\n\t\t *    // this can also be done with the language.thousands option)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"formatNumber\": function ( toFormat ) {\n\t\t *          return toFormat.toString().replace(\n\t\t *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\n\t\t *          );\n\t\t *        };\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnFormatNumber\": function ( toFormat ) {\n\t\t\treturn toFormat.toString().replace(\n\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\n\t\t\t\tthis.oLanguage.sThousands\n\t\t\t);\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify the header row. This can be used to calculate and\n\t\t * display useful information about the table.\n\t\t *  @type function\n\t\t *  @param {node} head \"TR\" element for the header\n\t\t *  @param {array} data Full table data (as derived from the original HTML)\n\t\t *  @param {int} start Index for the current display starting point in the\n\t\t *    display array\n\t\t *  @param {int} end Index for the current display ending point in the\n\t\t *    display array\n\t\t *  @param {array int} display Index array to translate the visual position\n\t\t *    to the full data array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.headerCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"fheaderCallback\": function( head, data, start, end, display ) {\n\t\t *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnHeaderCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * The information element can be used to convey information about the current\n\t\t * state of the table. Although the internationalisation options presented by\n\t\t * DataTables are quite capable of dealing with most customisations, there may\n\t\t * be times where you wish to customise the string further. This callback\n\t\t * allows you to do exactly that.\n\t\t *  @type function\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @param {int} start Starting position in data for the draw\n\t\t *  @param {int} end End position in data for the draw\n\t\t *  @param {int} max Total number of rows in the table (regardless of\n\t\t *    filtering)\n\t\t *  @param {int} total Total number of rows in the data set, after filtering\n\t\t *  @param {string} pre The string that DataTables has formatted using it's\n\t\t *    own rules\n\t\t *  @returns {string} The string to be displayed in the information element.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.infoCallback\n\t\t *\n\t\t *  @example\n\t\t *    $('#example').dataTable( {\n\t\t *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\n\t\t *        return start +\" to \"+ end;\n\t\t *      }\n\t\t *    } );\n\t\t */\n\t\t\"fnInfoCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * Called when the table has been initialised. Normally DataTables will\n\t\t * initialise sequentially and there will be no need for this function,\n\t\t * however, this does not hold true when using external language information\n\t\t * since that is obtained using an async XHR call.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} json The JSON object request from the server - only\n\t\t *    present if client-side Ajax sourced data is used\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.initComplete\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"initComplete\": function(settings, json) {\n\t\t *          alert( 'DataTables has finished its initialisation.' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnInitComplete\": null,\n\t\n\t\n\t\t/**\n\t\t * Called at the very start of each table draw and can be used to cancel the\n\t\t * draw by returning false, any other return (including undefined) results in\n\t\t * the full draw occurring).\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @returns {boolean} False will cancel the draw, anything else (including no\n\t\t *    return) will allow it to complete.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.preDrawCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"preDrawCallback\": function( settings ) {\n\t\t *          if ( $('#test').val() == 1 ) {\n\t\t *            return false;\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnPreDrawCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * This function allows you to 'post process' each row after it have been\n\t\t * generated for each table draw, but before it is rendered on screen. This\n\t\t * function might be used for setting the row class name etc.\n\t\t *  @type function\n\t\t *  @param {node} row \"TR\" element for the current row\n\t\t *  @param {array} data Raw data array for this row\n\t\t *  @param {int} displayIndex The display index for the current table draw\n\t\t *  @param {int} displayIndexFull The index of the data in the full list of\n\t\t *    rows (after filtering)\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.rowCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( data[4] == \"A\" ) {\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnRowCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * This parameter allows you to override the default function which obtains\n\t\t * the data from the server so something more suitable for your application.\n\t\t * For example you could use POST data, or pull information from a Gears or\n\t\t * AIR database.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {string} source HTTP source to obtain the data from (`ajax`)\n\t\t *  @param {array} data A key/value pair object containing the data to send\n\t\t *    to the server\n\t\t *  @param {function} callback to be called on completion of the data get\n\t\t *    process that will draw the data on the page.\n\t\t *  @param {object} settings DataTables settings object\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverData\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"fnServerData\": null,\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t *  It is often useful to send extra data to the server when making an Ajax\n\t\t * request - for example custom filtering information, and this callback\n\t\t * function makes it trivial to send extra information to the server. The\n\t\t * passed in parameter is the data set that has been constructed by\n\t\t * DataTables, and you can add to this or modify it as you require.\n\t\t *  @type function\n\t\t *  @param {array} data Data array (array of objects which are name/value\n\t\t *    pairs) that has been constructed by DataTables and will be sent to the\n\t\t *    server. In the case of Ajax sourced data with server-side processing\n\t\t *    this will be an empty array, for server-side processing there will be a\n\t\t *    significant number of parameters!\n\t\t *  @returns {undefined} Ensure that you modify the data array passed in,\n\t\t *    as this is passed by reference.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverParams\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"fnServerParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Load the table state. With this function you can define from where, and how, the\n\t\t * state of a table is loaded. By default DataTables will load from `localStorage`\n\t\t * but you might wish to use a server-side database or cookies.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} callback Callback that can be executed when done. It\n\t\t *    should be passed the loaded state object.\n\t\t *  @return {object} The DataTables state object to be loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoadCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadCallback\": function (settings, callback) {\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_load\",\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"success\": function (json) {\n\t\t *              callback( json );\n\t\t *            }\n\t\t *          } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoadCallback\": function ( settings ) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(\n\t\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n\t\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} catch (e) {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Callback which allows modification of the saved state prior to loading that state.\n\t\t * This callback is called when the table is loading state from the stored data, but\n\t\t * prior to the settings object being modified by the saved state. Note that for\n\t\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n\t\t * a plug-in.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object that is to be loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoadParams\n\t\t *\n\t\t *  @example\n\t\t *    // Remove a saved filter, so filtering is never loaded\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t *          data.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Disallow state loading by returning false\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t *          return false;\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoadParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Callback that is called when the state has been loaded from the state saving method\n\t\t * and the DataTables settings object has been modified as a result of the loaded state.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object that was loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoaded\n\t\t *\n\t\t *  @example\n\t\t *    // Show an alert with the filtering value that was saved\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoaded\": function (settings, data) {\n\t\t *          alert( 'Saved filter was: '+data.oSearch.sSearch );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoaded\": null,\n\t\n\t\n\t\t/**\n\t\t * Save the table state. This function allows you to define where and how the state\n\t\t * information for the table is stored By default DataTables will use `localStorage`\n\t\t * but you might wish to use a server-side database or cookies.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object to be saved\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateSaveCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateSaveCallback\": function (settings, data) {\n\t\t *          // Send an Ajax request to the server with the state object\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_save\",\n\t\t *            \"data\": data,\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"method\": \"POST\"\n\t\t *            \"success\": function () {}\n\t\t *          } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateSaveCallback\": function ( settings, data ) {\n\t\t\ttry {\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname,\n\t\t\t\t\tJSON.stringify( data )\n\t\t\t\t);\n\t\t\t} catch (e) {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Callback which allows modification of the state to be saved. Called when the table\n\t\t * has changed state a new state save is required. This method allows modification of\n\t\t * the state saving object prior to actually doing the save, including addition or\n\t\t * other state properties or modification. Note that for plug-in authors, you should\n\t\t * use the `stateSaveParams` event to save parameters for a plug-in.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object to be saved\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateSaveParams\n\t\t *\n\t\t *  @example\n\t\t *    // Remove a saved filter, so filtering is never saved\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateSaveParams\": function (settings, data) {\n\t\t *          data.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateSaveParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Duration for which the saved state information is considered valid. After this period\n\t\t * has elapsed the state will be returned to the default.\n\t\t * Value is given in seconds.\n\t\t *  @type int\n\t\t *  @default 7200 <i>(2 hours)</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.stateDuration\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateDuration\": 60*60*24; // 1 day\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iStateDuration\": 7200,\n\t\n\t\n\t\t/**\n\t\t * When enabled DataTables will not make a request to the server for the first\n\t\t * page draw - rather it will use the data already on the page (no sorting etc\n\t\t * will be applied to it), thus saving on an XHR at load time. `deferLoading`\n\t\t * is used to indicate that deferred loading is required, but it is also used\n\t\t * to tell DataTables how many records there are in the full table (allowing\n\t\t * the information element and pagination to be displayed correctly). In the case\n\t\t * where a filtering is applied to the table on initial load, this can be\n\t\t * indicated by giving the parameter as an array, where the first element is\n\t\t * the number of records available after filtering and the second element is the\n\t\t * number of records without filtering (allowing the table information element\n\t\t * to be shown correctly).\n\t\t *  @type int | array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.deferLoading\n\t\t *\n\t\t *  @example\n\t\t *    // 57 records available in the table, no filtering applied\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t *        \"deferLoading\": 57\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // 57 records after filtering, 100 without filtering (an initial filter applied)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t *        \"deferLoading\": [ 57, 100 ],\n\t\t *        \"search\": {\n\t\t *          \"search\": \"my_filter\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iDeferLoading\": null,\n\t\n\t\n\t\t/**\n\t\t * Number of rows to display on a single page when using pagination. If\n\t\t * feature enabled (`lengthChange`) then the end user will be able to override\n\t\t * this to a custom setting using a pop-up menu.\n\t\t *  @type int\n\t\t *  @default 10\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.pageLength\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"pageLength\": 50\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iDisplayLength\": 10,\n\t\n\t\n\t\t/**\n\t\t * Define the starting point for data display when using DataTables with\n\t\t * pagination. Note that this parameter is the number of records, rather than\n\t\t * the page number, so if you have 10 records per page and want to start on\n\t\t * the third page, it should be \"20\".\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.displayStart\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"displayStart\": 20\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iDisplayStart\": 0,\n\t\n\t\n\t\t/**\n\t\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\n\t\t * and filtering) by adding a `tabindex` attribute to the required elements. This\n\t\t * allows you to tab through the controls and press the enter key to activate them.\n\t\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\n\t\t * You can overrule this using this parameter if you wish. Use a value of -1 to\n\t\t * disable built-in keyboard navigation.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.tabIndex\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"tabIndex\": 1\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iTabIndex\": 0,\n\t\n\t\n\t\t/**\n\t\t * Classes that DataTables assigns to the various components and features\n\t\t * that it adds to the HTML table. This allows classes to be configured\n\t\t * during initialisation in addition to through the static\n\t\t * {@link DataTable.ext.oStdClasses} object).\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.classes\n\t\t */\n\t\t\"oClasses\": {},\n\t\n\t\n\t\t/**\n\t\t * All strings that DataTables uses in the user interface that it creates\n\t\t * are defined in this object, allowing you to modified them individually or\n\t\t * completely replace them all as required.\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.language\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\n\t\t\t * actually visible on the page, but will be read by screenreaders, and thus\n\t\t\t * must be internationalised as well).\n\t\t\t *  @namespace\n\t\t\t *  @name DataTable.defaults.language.aria\n\t\t\t */\n\t\t\t\"oAria\": {\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t * sorted ascending by activing the column (click or return when focused).\n\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.aria.sortAscending\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"aria\": {\n\t\t\t\t *            \"sortAscending\": \" - click/return to sort ascending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSortAscending\": \": activate to sort column ascending\",\n\t\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t * sorted descending by activing the column (click or return when focused).\n\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.aria.sortDescending\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"aria\": {\n\t\t\t\t *            \"sortDescending\": \" - click/return to sort descending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSortDescending\": \": activate to sort column descending\"\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Pagination string used by DataTables for the built-in pagination\n\t\t\t * control types.\n\t\t\t *  @namespace\n\t\t\t *  @name DataTable.defaults.language.paginate\n\t\t\t */\n\t\t\t\"oPaginate\": {\n\t\t\t\t/**\n\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t * button to take the user to the first page.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default First\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.first\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"first\": \"First page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sFirst\": \"First\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t * button to take the user to the last page.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Last\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.last\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"last\": \"Last page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sLast\": \"Last\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use for the 'next' pagination button (to take the user to the\n\t\t\t\t * next page).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Next\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.next\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"next\": \"Next page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sNext\": \"Next\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use for the 'previous' pagination button (to take the user to\n\t\t\t\t * the previous page).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Previous\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.previous\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"previous\": \"Previous page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sPrevious\": \"Previous\"\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * This string is shown in preference to `zeroRecords` when the table is\n\t\t\t * empty of data (regardless of filtering). Note that this is an optional\n\t\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\n\t\t\t * instead (either the default or given value).\n\t\t\t *  @type string\n\t\t\t *  @default No data available in table\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.emptyTable\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"emptyTable\": \"No data available in table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sEmptyTable\": \"No data available in table\",\n\t\n\t\n\t\t\t/**\n\t\t\t * This string gives information to the end user about the information\n\t\t\t * that is current on display on the page. The following tokens can be\n\t\t\t * used in the string and will be dynamically replaced as the table\n\t\t\t * display updates. This tokens can be placed anywhere in the string, or\n\t\t\t * removed as needed by the language requires:\n\t\t\t *\n\t\t\t * * `\\_START\\_` - Display index of the first record on the current page\n\t\t\t * * `\\_END\\_` - Display index of the last record on the current page\n\t\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\n\t\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\n\t\t\t * * `\\_PAGE\\_` - Current page number\n\t\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\n\t\t\t *\n\t\t\t *  @type string\n\t\t\t *  @default Showing _START_ to _END_ of _TOTAL_ entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.info\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Display information string for when the table is empty. Typically the\n\t\t\t * format of this string should match `info`.\n\t\t\t *  @type string\n\t\t\t *  @default Showing 0 to 0 of 0 entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoEmpty\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoEmpty\": \"No entries to show\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * When a user filters the information in a table, this string is appended\n\t\t\t * to the information (`info`) to give an idea of how strong the filtering\n\t\t\t * is. The variable _MAX_ is dynamically updated.\n\t\t\t *  @type string\n\t\t\t *  @default (filtered from _MAX_ total entries)\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoFiltered\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoFiltered\": \" - filtering from _MAX_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\n\t\n\t\n\t\t\t/**\n\t\t\t * If can be useful to append extra information to the info string at times,\n\t\t\t * and this variable does exactly that. This information will be appended to\n\t\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n\t\t\t * being used) at all times.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string</i>\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoPostFix\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoPostFix\": \"All records shown are derived from real information.\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoPostFix\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * This decimal place operator is a little different from the other\n\t\t\t * language options since DataTables doesn't output floating point\n\t\t\t * numbers, so it won't ever use this for display of a number. Rather,\n\t\t\t * what this parameter does is modify the sort methods of the table so\n\t\t\t * that numbers which are in a format which has a character other than\n\t\t\t * a period (`.`) as a decimal place will be sorted numerically.\n\t\t\t *\n\t\t\t * Note that numbers with different decimal places cannot be shown in\n\t\t\t * the same table and still be sortable, the table must be consistent.\n\t\t\t * However, multiple different tables on the page can use different\n\t\t\t * decimal place characters.\n\t\t\t *  @type string\n\t\t\t *  @default \n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.decimal\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"decimal\": \",\"\n\t\t\t *          \"thousands\": \".\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sDecimal\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * DataTables has a build in number formatter (`formatNumber`) which is\n\t\t\t * used to format large numbers that are used in the table information.\n\t\t\t * By default a comma is used, but this can be trivially changed to any\n\t\t\t * character you wish with this parameter.\n\t\t\t *  @type string\n\t\t\t *  @default ,\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.thousands\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"thousands\": \"'\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sThousands\": \",\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Detail the action that will be taken when the drop down menu for the\n\t\t\t * pagination length option is changed. The '_MENU_' variable is replaced\n\t\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\n\t\t\t * with a custom select box if required.\n\t\t\t *  @type string\n\t\t\t *  @default Show _MENU_ entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.lengthMenu\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Language change only\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"lengthMenu\": \"Display _MENU_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Language and options change\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"lengthMenu\": 'Display <select>'+\n\t\t\t *            '<option value=\"10\">10</option>'+\n\t\t\t *            '<option value=\"20\">20</option>'+\n\t\t\t *            '<option value=\"30\">30</option>'+\n\t\t\t *            '<option value=\"40\">40</option>'+\n\t\t\t *            '<option value=\"50\">50</option>'+\n\t\t\t *            '<option value=\"-1\">All</option>'+\n\t\t\t *            '</select> records'\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLengthMenu\": \"Show _MENU_ entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * When using Ajax sourced data and during the first draw when DataTables is\n\t\t\t * gathering the data, this message is shown in an empty row in the table to\n\t\t\t * indicate to the end user the the data is being loaded. Note that this\n\t\t\t * parameter is not used when loading data by server-side processing, just\n\t\t\t * Ajax sourced data with client-side processing.\n\t\t\t *  @type string\n\t\t\t *  @default Loading...\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.loadingRecords\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"loadingRecords\": \"Please wait - loading...\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLoadingRecords\": \"Loading...\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Text which is displayed when the table is processing a user action\n\t\t\t * (usually a sort command or similar).\n\t\t\t *  @type string\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.processing\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"processing\": \"DataTables is currently busy\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sProcessing\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Details the actions that will be taken when the user types into the\n\t\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\n\t\t\t * is replaced with the HTML text box for the filtering input allowing\n\t\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\n\t\t\t * then the input box is appended to the string automatically.\n\t\t\t *  @type string\n\t\t\t *  @default Search:\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.search\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Input text box will be appended at the end automatically\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"search\": \"Filter records:\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Specify where the filter should appear\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"search\": \"Apply filter _INPUT_ to table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sSearch\": \"Search:\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Assign a `placeholder` attribute to the search `input` element\n\t\t\t *  @type string\n\t\t\t *  @default \n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.searchPlaceholder\n\t\t\t */\n\t\t\t\"sSearchPlaceholder\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * All of the language information can be stored in a file on the\n\t\t\t * server-side, which DataTables will look up if this parameter is passed.\n\t\t\t * It must store the URL of the language file, which is in a JSON format,\n\t\t\t * and the object has the same properties as the oLanguage object in the\n\t\t\t * initialiser object (i.e. the above parameters). Please refer to one of\n\t\t\t * the example language files to see how this works in action.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string - i.e. disabled</i>\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.url\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"url\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sUrl\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Text shown inside the table records when the is no information to be\n\t\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\n\t\t\t * information in the table at all (regardless of filtering).\n\t\t\t *  @type string\n\t\t\t *  @default No matching records found\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.zeroRecords\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"zeroRecords\": \"No records to display\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sZeroRecords\": \"No matching records found\"\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * This parameter allows you to have define the global filtering state at\n\t\t * initialisation time. As an object the `search` parameter must be\n\t\t * defined, but all other parameters are optional. When `regex` is true,\n\t\t * the search string will be treated as a regular expression, when false\n\t\t * (default) it will be treated as a straight string. When `smart`\n\t\t * DataTables will use it's smart filtering methods (to word match at\n\t\t * any point in the data), when false this will not be done.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.oSearch\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.search\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"search\": {\"search\": \"Initial search\"}\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * By default DataTables will look for the property `data` (or `aaData` for\n\t\t * compatibility with DataTables 1.9-) when obtaining data from an Ajax\n\t\t * source or for server-side processing - this parameter allows that\n\t\t * property to be changed. You can use Javascript dotted object notation to\n\t\t * get a data source for multiple levels of nesting.\n\t\t *  @type string\n\t\t *  @default data\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.ajaxDataProp\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sAjaxDataProp\": \"data\",\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * You can instruct DataTables to load data from an external\n\t\t * source using this parameter (use aData if you want to pass data in you\n\t\t * already have). Simply provide a url a JSON object can be obtained from.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.ajaxSource\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sAjaxSource\": null,\n\t\n\t\n\t\t/**\n\t\t * This initialisation variable allows you to specify exactly where in the\n\t\t * DOM you want DataTables to inject the various controls it adds to the page\n\t\t * (for example you might want the pagination controls at the top of the\n\t\t * table). DIV elements (with or without a custom class) can also be added to\n\t\t * aid styling. The follow syntax is used:\n\t\t *   <ul>\n\t\t *     <li>The following options are allowed:\n\t\t *       <ul>\n\t\t *         <li>'l' - Length changing</li>\n\t\t *         <li>'f' - Filtering input</li>\n\t\t *         <li>'t' - The table!</li>\n\t\t *         <li>'i' - Information</li>\n\t\t *         <li>'p' - Pagination</li>\n\t\t *         <li>'r' - pRocessing</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>The following constants are allowed:\n\t\t *       <ul>\n\t\t *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\n\t\t *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>The following syntax is expected:\n\t\t *       <ul>\n\t\t *         <li>'&lt;' and '&gt;' - div elements</li>\n\t\t *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\n\t\t *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>Examples:\n\t\t *       <ul>\n\t\t *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\n\t\t *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *   </ul>\n\t\t *  @type string\n\t\t *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\n\t\t *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.dom\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDom\": \"lfrtip\",\n\t\n\t\n\t\t/**\n\t\t * Search delay option. This will throttle full table searches that use the\n\t\t * DataTables provided search input element (it does not effect calls to\n\t\t * `dt-api search()`, providing a delay before the search is made.\n\t\t *  @type integer\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.searchDelay\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searchDelay\": 200\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"searchDelay\": null,\n\t\n\t\n\t\t/**\n\t\t * DataTables features six different built-in options for the buttons to\n\t\t * display for pagination control:\n\t\t *\n\t\t * * `numbers` - Page number buttons only\n\t\t * * `simple` - 'Previous' and 'Next' buttons only\n\t\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n\t\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n\t\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n\t\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n\t\t *  \n\t\t * Further methods can be added using {@link DataTable.ext.oPagination}.\n\t\t *  @type string\n\t\t *  @default simple_numbers\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.pagingType\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"pagingType\": \"full_numbers\"\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"sPaginationType\": \"simple_numbers\",\n\t\n\t\n\t\t/**\n\t\t * Enable horizontal scrolling. When a table is too wide to fit into a\n\t\t * certain layout, or you have a large number of columns in the table, you\n\t\t * can enable x-scrolling to show the table in a viewport, which can be\n\t\t * scrolled. This property can be `true` which will allow the table to\n\t\t * scroll horizontally when needed, or any CSS unit, or a number (in which\n\t\t * case it will be treated as a pixel measurement). Setting as simply `true`\n\t\t * is recommended.\n\t\t *  @type boolean|string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.scrollX\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollX\": true,\n\t\t *        \"scrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollX\": \"\",\n\t\n\t\n\t\t/**\n\t\t * This property can be used to force a DataTable to use more width than it\n\t\t * might otherwise do when x-scrolling is enabled. For example if you have a\n\t\t * table which requires to be well spaced, this parameter is useful for\n\t\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n\t\t * any CSS unit, or a number (in which case it will be treated as a pixel\n\t\t * measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.scrollXInner\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollX\": \"100%\",\n\t\t *        \"scrollXInner\": \"110%\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollXInner\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n\t\t * to the given height, and enable scrolling for any data which overflows the\n\t\t * current viewport. This can be used as an alternative to paging to display\n\t\t * a lot of data in a small area (although paging and scrolling can both be\n\t\t * enabled at the same time). This property can be any CSS unit, or a number\n\t\t * (in which case it will be treated as a pixel measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.scrollY\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200px\",\n\t\t *        \"paginate\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollY\": \"\",\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * Set the HTTP method that is used to make the Ajax call for server-side\n\t\t * processing or Ajax sourced data.\n\t\t *  @type string\n\t\t *  @default GET\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverMethod\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sServerMethod\": \"GET\",\n\t\n\t\n\t\t/**\n\t\t * DataTables makes use of renderers when displaying HTML elements for\n\t\t * a table. These renderers can be added or modified by plug-ins to\n\t\t * generate suitable mark-up for a site. For example the Bootstrap\n\t\t * integration plug-in for DataTables uses a paging button renderer to\n\t\t * display pagination buttons in the mark-up required by Bootstrap.\n\t\t *\n\t\t * For further information about the renderers available see\n\t\t * DataTable.ext.renderer\n\t\t *  @type string|object\n\t\t *  @default null\n\t\t *\n\t\t *  @name DataTable.defaults.renderer\n\t\t *\n\t\t */\n\t\t\"renderer\": null,\n\t\n\t\n\t\t/**\n\t\t * Set the data property name that DataTables should use to get a row's id\n\t\t * to set as the `id` property in the node.\n\t\t *  @type string\n\t\t *  @default DT_RowId\n\t\t *\n\t\t *  @name DataTable.defaults.rowId\n\t\t */\n\t\t\"rowId\": \"DT_RowId\"\n\t};\n\t\n\t_fnHungarianMap( DataTable.defaults );\n\t\n\t\n\t\n\t/*\n\t * Developer note - See note in model.defaults.js about the use of Hungarian\n\t * notation and camel case.\n\t */\n\t\n\t/**\n\t * Column options that can be given to DataTables at initialisation time.\n\t *  @namespace\n\t */\n\tDataTable.defaults.column = {\n\t\t/**\n\t\t * Define which column(s) an order will occur on for this column. This\n\t\t * allows a column's ordering to take multiple columns into account when\n\t\t * doing a sort or use the data from a different column. For example first\n\t\t * name / last name columns make sense to do a multi-column sort over the\n\t\t * two columns.\n\t\t *  @type array|int\n\t\t *  @default null <i>Takes the value of the column index automatically</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderData\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\n\t\t *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\n\t\t *          { \"orderData\": 2, \"targets\": [ 2 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"orderData\": [ 0, 1 ] },\n\t\t *          { \"orderData\": [ 1, 0 ] },\n\t\t *          { \"orderData\": 2 },\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aDataSort\": null,\n\t\t\"iDataSort\": -1,\n\t\n\t\n\t\t/**\n\t\t * You can control the default ordering direction, and even alter the\n\t\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n\t\t * using this parameter.\n\t\t *  @type array\n\t\t *  @default [ 'asc', 'desc' ]\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderSequence\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\n\t\t *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          { \"orderSequence\": [ \"asc\" ] },\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\n\t\t *          { \"orderSequence\": [ \"desc\" ] },\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"asSorting\": [ 'asc', 'desc' ],\n\t\n\t\n\t\t/**\n\t\t * Enable or disable filtering on the data in this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.searchable\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"searchable\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"searchable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bSearchable\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable ordering on this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderable\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderable\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"orderable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortable\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the display of this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.visible\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"visible\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"visible\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bVisible\": true,\n\t\n\t\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t *  @type function\n\t\t *  @param {element} td The TD node that has been created\n\t\t *  @param {*} cellData The Data for the cell\n\t\t *  @param {array|object} rowData The data for the whole row\n\t\t *  @param {int} row The row index for the aoData data store\n\t\t *  @param {int} col The column index for aoColumns\n\t\t *\n\t\t *  @name DataTable.defaults.column.createdCell\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [3],\n\t\t *          \"createdCell\": function (td, cellData, rowData, row, col) {\n\t\t *            if ( cellData == \"1.7\" ) {\n\t\t *              $(td).css('color', 'blue')\n\t\t *            }\n\t\t *          }\n\t\t *        } ]\n\t\t *      });\n\t\t *    } );\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter has been replaced by `data` in DataTables to ensure naming\n\t\t * consistency. `dataProp` can still be used, as there is backwards\n\t\t * compatibility in DataTables for this option, but it is strongly\n\t\t * recommended that you use `data` in preference to `dataProp`.\n\t\t *  @name DataTable.defaults.column.dataProp\n\t\t */\n\t\n\t\n\t\t/**\n\t\t * This property can be used to read data from any data source property,\n\t\t * including deeply nested objects / properties. `data` can be given in a\n\t\t * number of different ways which effect its behaviour:\n\t\t *\n\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t * * `string` - read an object property from the data source. There are\n\t\t *   three 'special' options that can be used in the string to alter how\n\t\t *   DataTables reads the data from the source object:\n\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t *      Javascript to read from nested objects, so to can the options\n\t\t *      specified in `data`. For example: `browser.version` or\n\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t *      from and array source, joining the data with the characters provided\n\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t *      comma-space separated list from the source array. If no characters\n\t\t *      are provided between the brackets, the original array source is\n\t\t *      returned.\n\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t *      simple function on the data source, `browser.version()` for a\n\t\t *      function in a nested property or even `browser().version` to get an\n\t\t *      object property if the function called returns an object. Note that\n\t\t *      function notation is recommended for use in `render` rather than\n\t\t *      `data` as it is much simpler to use as a renderer.\n\t\t * * `null` - use the original data source for the row rather than plucking\n\t\t *   data directly from it. This action has effects on two other\n\t\t *   initialisation options:\n\t\t *    * `defaultContent` - When null is given as the `data` option and\n\t\t *      `defaultContent` is specified for the column, the value defined by\n\t\t *      `defaultContent` will be used for the cell.\n\t\t *    * `render` - When null is used for the `data` option and the `render`\n\t\t *      option is specified for the column, the whole data source for the\n\t\t *      row is used for the renderer.\n\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t *   takes three parameters:\n\t\t *    * Parameters:\n\t\t *      * `{array|object}` The data source for the row\n\t\t *      * `{string}` The type call data requested - this will be 'set' when\n\t\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n\t\t *        when gathering data. Note that when `undefined` is given for the\n\t\t *        type DataTables expects to get the raw data for the object back<\n\t\t *      * `{*}` Data to set when the second parameter is 'set'.\n\t\t *    * Return:\n\t\t *      * The return value from the function is not required when 'set' is\n\t\t *        the type of call, but otherwise the return is what will be used\n\t\t *        for the data requested.\n\t\t *\n\t\t * Note that `data` is a getter and setter option. If you just require\n\t\t * formatting of data for output, you will likely want to use `render` which\n\t\t * is simply a getter and thus simpler to use.\n\t\t *\n\t\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n\t\t * name change reflects the flexibility of this property and is consistent\n\t\t * with the naming of mRender. If 'mDataProp' is given, then it will still\n\t\t * be used by DataTables, as it automatically maps the old name to the new\n\t\t * if required.\n\t\t *\n\t\t *  @type string|int|function|null\n\t\t *  @default null <i>Use automatically calculated column index</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.data\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Read table data from objects\n\t\t *    // JSON structure for each row:\n\t\t *    //   {\n\t\t *    //      \"engine\": {value},\n\t\t *    //      \"browser\": {value},\n\t\t *    //      \"platform\": {value},\n\t\t *    //      \"version\": {value},\n\t\t *    //      \"grade\": {value}\n\t\t *    //   }\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/objects.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          { \"data\": \"platform\" },\n\t\t *          { \"data\": \"version\" },\n\t\t *          { \"data\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Read information from deeply nested objects\n\t\t *    // JSON structure for each row:\n\t\t *    //   {\n\t\t *    //      \"engine\": {value},\n\t\t *    //      \"browser\": {value},\n\t\t *    //      \"platform\": {\n\t\t *    //         \"inner\": {value}\n\t\t *    //      },\n\t\t *    //      \"details\": [\n\t\t *    //         {value}, {value}\n\t\t *    //      ]\n\t\t *    //   }\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          { \"data\": \"platform.inner\" },\n\t\t *          { \"data\": \"details.0\" },\n\t\t *          { \"data\": \"details.1\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `data` as a function to provide different information for\n\t\t *    // sorting, filtering and display. In this case, currency (price)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": function ( source, type, val ) {\n\t\t *            if (type === 'set') {\n\t\t *              source.price = val;\n\t\t *              // Store the computed display and filter values for efficiency\n\t\t *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n\t\t *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n\t\t *              return;\n\t\t *            }\n\t\t *            else if (type === 'display') {\n\t\t *              return source.price_display;\n\t\t *            }\n\t\t *            else if (type === 'filter') {\n\t\t *              return source.price_filter;\n\t\t *            }\n\t\t *            // 'sort', 'type' and undefined all just use the integer\n\t\t *            return source.price;\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using default content\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null,\n\t\t *          \"defaultContent\": \"Click to edit\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using array notation - outputting a list from an array\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": \"name[, ]\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t */\n\t\t\"mData\": null,\n\t\n\t\n\t\t/**\n\t\t * This property is the rendering partner to `data` and it is suggested that\n\t\t * when you want to manipulate data for display (including filtering,\n\t\t * sorting etc) without altering the underlying data for the table, use this\n\t\t * property. `render` can be considered to be the the read only companion to\n\t\t * `data` which is read / write (then as such more complex). Like `data`\n\t\t * this option can be given in a number of different ways to effect its\n\t\t * behaviour:\n\t\t *\n\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t * * `string` - read an object property from the data source. There are\n\t\t *   three 'special' options that can be used in the string to alter how\n\t\t *   DataTables reads the data from the source object:\n\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t *      Javascript to read from nested objects, so to can the options\n\t\t *      specified in `data`. For example: `browser.version` or\n\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t *      from and array source, joining the data with the characters provided\n\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t *      comma-space separated list from the source array. If no characters\n\t\t *      are provided between the brackets, the original array source is\n\t\t *      returned.\n\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t *      simple function on the data source, `browser.version()` for a\n\t\t *      function in a nested property or even `browser().version` to get an\n\t\t *      object property if the function called returns an object.\n\t\t * * `object` - use different data for the different data types requested by\n\t\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n\t\t *   of the object is the data type the property refers to and the value can\n\t\t *   defined using an integer, string or function using the same rules as\n\t\t *   `render` normally does. Note that an `_` option _must_ be specified.\n\t\t *   This is the default value to use if you haven't specified a value for\n\t\t *   the data type requested by DataTables.\n\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t *   takes three parameters:\n\t\t *    * Parameters:\n\t\t *      * {array|object} The data source for the row (based on `data`)\n\t\t *      * {string} The type call data requested - this will be 'filter',\n\t\t *        'display', 'type' or 'sort'.\n\t\t *      * {array|object} The full data source for the row (not based on\n\t\t *        `data`)\n\t\t *    * Return:\n\t\t *      * The return value from the function is what will be used for the\n\t\t *        data requested.\n\t\t *\n\t\t *  @type string|int|function|object|null\n\t\t *  @default null Use the data source value.\n\t\t *\n\t\t *  @name DataTable.defaults.column.render\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Create a comma separated list from an array of objects\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          {\n\t\t *            \"data\": \"platform\",\n\t\t *            \"render\": \"[, ].name\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Execute a function to obtain data\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t *          \"render\": \"browserName()\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // As an object, extracting different data for the different types\n\t\t *    // This would be used with a data source such as:\n\t\t *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\n\t\t *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\n\t\t *    // (which has both forms) is used for filtering for if a user inputs either format, while\n\t\t *    // the formatted phone number is the one that is shown in the table.\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t *          \"render\": {\n\t\t *            \"_\": \"phone\",\n\t\t *            \"filter\": \"phone_filter\",\n\t\t *            \"display\": \"phone_display\"\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Use as a function to create a link from the data source\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": \"download_link\",\n\t\t *          \"render\": function ( data, type, full ) {\n\t\t *            return '<a href=\"'+data+'\">Download</a>';\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"mRender\": null,\n\t\n\t\n\t\t/**\n\t\t * Change the cell type created for the column - either TD cells or TH cells. This\n\t\t * can be useful as TH cells have semantic meaning in the table body, allowing them\n\t\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n\t\t *  @type string\n\t\t *  @default td\n\t\t *\n\t\t *  @name DataTable.defaults.column.cellType\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Make the first column use TH cells\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"cellType\": \"th\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sCellType\": \"td\",\n\t\n\t\n\t\t/**\n\t\t * Class to give to each cell in this column.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.class\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"class\": \"my_class\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sClass\": \"\",\n\t\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t * Generally you shouldn't need this!\n\t\t *  @type string\n\t\t *  @default <i>Empty string<i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.contentPadding\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"contentPadding\": \"mmm\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sContentPadding\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because `data`\n\t\t * is set to null, or because the data source itself is null).\n\t\t *  @type string\n\t\t *  @default null\n\t\t *\n\t\t *  @name DataTable.defaults.column.defaultContent\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          {\n\t\t *            \"data\": null,\n\t\t *            \"defaultContent\": \"Edit\",\n\t\t *            \"targets\": [ -1 ]\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"data\": null,\n\t\t *            \"defaultContent\": \"Edit\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDefaultContent\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter is only used in DataTables' server-side processing. It can\n\t\t * be exceptionally useful to know what columns are being displayed on the\n\t\t * client side, and to map these to database fields. When defined, the names\n\t\t * also allow DataTables to reorder information from the server if it comes\n\t\t * back in an unexpected order (i.e. if you switch your columns around on the\n\t\t * client-side, your server-side code does not also need updating).\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.name\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"name\": \"engine\", \"targets\": [ 0 ] },\n\t\t *          { \"name\": \"browser\", \"targets\": [ 1 ] },\n\t\t *          { \"name\": \"platform\", \"targets\": [ 2 ] },\n\t\t *          { \"name\": \"version\", \"targets\": [ 3 ] },\n\t\t *          { \"name\": \"grade\", \"targets\": [ 4 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"name\": \"engine\" },\n\t\t *          { \"name\": \"browser\" },\n\t\t *          { \"name\": \"platform\" },\n\t\t *          { \"name\": \"version\" },\n\t\t *          { \"name\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sName\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Defines a data source type for the ordering which can be used to read\n\t\t * real-time information from the table (updating the internally cached\n\t\t * version) prior to ordering. This allows ordering to occur on user\n\t\t * editable elements such as form inputs.\n\t\t *  @type string\n\t\t *  @default std\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderDataType\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\n\t\t *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\n\t\t *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\n\t\t *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          { \"orderDataType\": \"dom-text\" },\n\t\t *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\n\t\t *          { \"orderDataType\": \"dom-select\" },\n\t\t *          { \"orderDataType\": \"dom-checkbox\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sSortDataType\": \"std\",\n\t\n\t\n\t\t/**\n\t\t * The title of this column.\n\t\t *  @type string\n\t\t *  @default null <i>Derived from the 'TH' value for this column in the\n\t\t *    original HTML table.</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.title\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"My column title\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sTitle\": null,\n\t\n\t\n\t\t/**\n\t\t * The type allows you to specify how the data for this column will be\n\t\t * ordered. Four types (string, numeric, date and html (which will strip\n\t\t * HTML tags before ordering)) are currently available. Note that only date\n\t\t * formats understood by Javascript's Date() object will be accepted as type\n\t\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n\t\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\n\t\t * through plug-ins.\n\t\t *  @type string\n\t\t *  @default null <i>Auto-detected from raw data</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.type\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"type\": \"html\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"type\": \"html\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sType\": null,\n\t\n\t\n\t\t/**\n\t\t * Defining the width of the column, this parameter may take any CSS value\n\t\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n\t\t * been given a specific width through this interface ensuring that the table\n\t\t * remains readable.\n\t\t *  @type string\n\t\t *  @default null <i>Automatic</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.width\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"width\": \"20%\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"width\": \"20%\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sWidth\": null\n\t};\n\t\n\t_fnHungarianMap( DataTable.defaults.column );\n\t\n\t\n\t\n\t/**\n\t * DataTables settings object - this holds all the information needed for a\n\t * given table, including configuration, data and current application of the\n\t * table options. DataTables does not have a single instance for each DataTable\n\t * with the settings attached to that instance, but rather instances of the\n\t * DataTable \"class\" are created on-the-fly as needed (typically by a\n\t * $().dataTable() call) and the settings object is then applied to that\n\t * instance.\n\t *\n\t * Note that this object is related to {@link DataTable.defaults} but this\n\t * one is the internal data store for DataTables's cache of columns. It should\n\t * NOT be manipulated outside of DataTables. Any configuration should be done\n\t * through the initialisation options.\n\t *  @namespace\n\t *  @todo Really should attach the settings object to individual instances so we\n\t *    don't need to create new instances on each $().dataTable() call (if the\n\t *    table already exists). It would also save passing oSettings around and\n\t *    into every single function. However, this is a very significant\n\t *    architecture change for DataTables and will almost certainly break\n\t *    backwards compatibility with older installations. This is something that\n\t *    will be done in 2.0.\n\t */\n\tDataTable.models.oSettings = {\n\t\t/**\n\t\t * Primary features of DataTables and their enablement state.\n\t\t *  @namespace\n\t\t */\n\t\t\"oFeatures\": {\n\t\n\t\t\t/**\n\t\t\t * Flag to say if DataTables should automatically try to calculate the\n\t\t\t * optimum table and columns widths (true) or not (false).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bAutoWidth\": null,\n\t\n\t\t\t/**\n\t\t\t * Delay the creation of TR and TD elements until they are actually\n\t\t\t * needed by a driven page draw. This can give a significant speed\n\t\t\t * increase for Ajax source and Javascript source data, but makes no\n\t\t\t * difference at all for DOM and server-side processing tables.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bDeferRender\": null,\n\t\n\t\t\t/**\n\t\t\t * Enable filtering on the table or not. Note that if this is disabled\n\t\t\t * then there is no filtering at all on the table, including fnFilter.\n\t\t\t * To just remove the filtering input use sDom and remove the 'f' option.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bFilter\": null,\n\t\n\t\t\t/**\n\t\t\t * Table information element (the 'Showing x of y records' div) enable\n\t\t\t * flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bInfo\": null,\n\t\n\t\t\t/**\n\t\t\t * Present a user control allowing the end user to change the page size\n\t\t\t * when pagination is enabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bLengthChange\": null,\n\t\n\t\t\t/**\n\t\t\t * Pagination enabled or not. Note that if this is disabled then length\n\t\t\t * changing must also be disabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bPaginate\": null,\n\t\n\t\t\t/**\n\t\t\t * Processing indicator enable flag whenever DataTables is enacting a\n\t\t\t * user request - typically an Ajax request for server-side processing.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bProcessing\": null,\n\t\n\t\t\t/**\n\t\t\t * Server-side processing enabled flag - when enabled DataTables will\n\t\t\t * get all data from the server for every draw - there is no filtering,\n\t\t\t * sorting or paging done on the client-side.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bServerSide\": null,\n\t\n\t\t\t/**\n\t\t\t * Sorting enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSort\": null,\n\t\n\t\t\t/**\n\t\t\t * Multi-column sorting\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortMulti\": null,\n\t\n\t\t\t/**\n\t\t\t * Apply a class to the columns which are being sorted to provide a\n\t\t\t * visual highlight or not. This can slow things down when enabled since\n\t\t\t * there is a lot of DOM interaction.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortClasses\": null,\n\t\n\t\t\t/**\n\t\t\t * State saving enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bStateSave\": null\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Scrolling settings for a table.\n\t\t *  @namespace\n\t\t */\n\t\t\"oScroll\": {\n\t\t\t/**\n\t\t\t * When the table is shorter in height than sScrollY, collapse the\n\t\t\t * table container down to the height of the table (when true).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bCollapse\": null,\n\t\n\t\t\t/**\n\t\t\t * Width of the scrollbar for the web-browser's platform. Calculated\n\t\t\t * during table initialisation.\n\t\t\t *  @type int\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"iBarWidth\": 0,\n\t\n\t\t\t/**\n\t\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\n\t\t\t * disabled if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sX\": null,\n\t\n\t\t\t/**\n\t\t\t * Width to expand the table to when using x-scrolling. Typically you\n\t\t\t * should not need to use this.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t *  @deprecated\n\t\t\t */\n\t\t\t\"sXInner\": null,\n\t\n\t\t\t/**\n\t\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\n\t\t\t * if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sY\": null\n\t\t},\n\t\n\t\t/**\n\t\t * Language information for the table.\n\t\t *  @namespace\n\t\t *  @extends DataTable.defaults.oLanguage\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Information callback function. See\n\t\t\t * {@link DataTable.defaults.fnInfoCallback}\n\t\t\t *  @type function\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"fnInfoCallback\": null\n\t\t},\n\t\n\t\t/**\n\t\t * Browser support parameters\n\t\t *  @namespace\n\t\t */\n\t\t\"oBrowser\": {\n\t\t\t/**\n\t\t\t * Indicate if the browser incorrectly calculates width:100% inside a\n\t\t\t * scrolling element (IE6/7)\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bScrollOversize\": false,\n\t\n\t\t\t/**\n\t\t\t * Determine if the vertical scrollbar is on the right or left of the\n\t\t\t * scrolling container - needed for rtl language layout, although not\n\t\t\t * all browsers move the scrollbar (Safari).\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bScrollbarLeft\": false,\n\t\n\t\t\t/**\n\t\t\t * Flag for if `getBoundingClientRect` is fully supported or not\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bBounding\": false,\n\t\n\t\t\t/**\n\t\t\t * Browser scrollbar width\n\t\t\t *  @type integer\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"barWidth\": 0\n\t\t},\n\t\n\t\n\t\t\"ajax\": null,\n\t\n\t\n\t\t/**\n\t\t * Array referencing the nodes which are used for the features. The\n\t\t * parameters of this object match what is allowed by sDom - i.e.\n\t\t *   <ul>\n\t\t *     <li>'l' - Length changing</li>\n\t\t *     <li>'f' - Filtering input</li>\n\t\t *     <li>'t' - The table!</li>\n\t\t *     <li>'i' - Information</li>\n\t\t *     <li>'p' - Pagination</li>\n\t\t *     <li>'r' - pRocessing</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aanFeatures\": [],\n\t\n\t\t/**\n\t\t * Store data information - see {@link DataTable.models.oRow} for detailed\n\t\t * information.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoData\": [],\n\t\n\t\t/**\n\t\t * Array of indexes which are in the current display (after filtering etc)\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aiDisplay\": [],\n\t\n\t\t/**\n\t\t * Array of indexes for display - no filtering\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aiDisplayMaster\": [],\n\t\n\t\t/**\n\t\t * Map of row ids to data indexes\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"aIds\": {},\n\t\n\t\t/**\n\t\t * Store information about each column that is in use\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoColumns\": [],\n\t\n\t\t/**\n\t\t * Store information about the table's header\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoHeader\": [],\n\t\n\t\t/**\n\t\t * Store information about the table's footer\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoFooter\": [],\n\t\n\t\t/**\n\t\t * Store the applied global search information in case we want to force a\n\t\t * research or compare the old search to a new one.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.oSearch\n\t\t */\n\t\t\"oPreviousSearch\": {},\n\t\n\t\t/**\n\t\t * Store the applied search for each column - see\n\t\t * {@link DataTable.models.oSearch} for the format that is used for the\n\t\t * filtering information for each column.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoPreSearchCols\": [],\n\t\n\t\t/**\n\t\t * Sorting that is applied to the table. Note that the inner arrays are\n\t\t * used in the following manner:\n\t\t * <ul>\n\t\t *   <li>Index 0 - column number</li>\n\t\t *   <li>Index 1 - current sorting direction</li>\n\t\t * </ul>\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @todo These inner arrays should really be objects\n\t\t */\n\t\t\"aaSorting\": null,\n\t\n\t\t/**\n\t\t * Sorting that is always applied to the table (i.e. prefixed in front of\n\t\t * aaSorting).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aaSortingFixed\": [],\n\t\n\t\t/**\n\t\t * Classes to use for the striping of a table.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asStripeClasses\": null,\n\t\n\t\t/**\n\t\t * If restoring a table - we should restore its striping classes as well\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asDestroyStripes\": [],\n\t\n\t\t/**\n\t\t * If restoring a table - we should restore its width\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"sDestroyWidth\": 0,\n\t\n\t\t/**\n\t\t * Callback functions array for every time a row is inserted (i.e. on a draw).\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoRowCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for the header on each draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoHeaderCallback\": [],\n\t\n\t\t/**\n\t\t * Callback function for the footer on each draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoFooterCallback\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for draw callback functions\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoDrawCallback\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for row created function\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoRowCreatedCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for just before the table is redrawn. A return of\n\t\t * false will be used to cancel the draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoPreDrawCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for when the table has been initialised.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoInitComplete\": [],\n\t\n\t\n\t\t/**\n\t\t * Callbacks for modifying the settings to be stored for state saving, prior to\n\t\t * saving state.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateSaveParams\": [],\n\t\n\t\t/**\n\t\t * Callbacks for modifying the settings that have been stored for state saving\n\t\t * prior to using the stored values to restore the state.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoadParams\": [],\n\t\n\t\t/**\n\t\t * Callbacks for operating on the settings object once the saved state has been\n\t\t * loaded\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoaded\": [],\n\t\n\t\t/**\n\t\t * Cache the table ID for quick access\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sTableId\": \"\",\n\t\n\t\t/**\n\t\t * The TABLE node for the main table\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTable\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the thead element\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTHead\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the tfoot element - if it exists\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTFoot\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the tbody element\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTBody\": null,\n\t\n\t\t/**\n\t\t * Cache the wrapper node (contains all DataTables controlled elements)\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTableWrapper\": null,\n\t\n\t\t/**\n\t\t * Indicate if when using server-side processing the loading of data\n\t\t * should be deferred until the second draw.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bDeferLoading\": false,\n\t\n\t\t/**\n\t\t * Indicate if all required information has been read in\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bInitialised\": false,\n\t\n\t\t/**\n\t\t * Information about open rows. Each object in the array has the parameters\n\t\t * 'nTr' and 'nParent'\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoOpenRows\": [],\n\t\n\t\t/**\n\t\t * Dictate the positioning of DataTables' control elements - see\n\t\t * {@link DataTable.model.oInit.sDom}.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sDom\": null,\n\t\n\t\t/**\n\t\t * Search delay (in mS)\n\t\t *  @type integer\n\t\t *  @default null\n\t\t */\n\t\t\"searchDelay\": null,\n\t\n\t\t/**\n\t\t * Which type of pagination should be used.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default two_button\n\t\t */\n\t\t\"sPaginationType\": \"two_button\",\n\t\n\t\t/**\n\t\t * The state duration (for `stateSave`) in seconds.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iStateDuration\": 0,\n\t\n\t\t/**\n\t\t * Array of callback functions for state saving. Each array element is an\n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the JSON string to save that has been thus far created. Returns\n\t\t *       a JSON string to be inserted into a json object\n\t\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateSave\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for state loading. Each array element is an\n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the object stored. May return false to cancel state loading</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoad\": [],\n\t\n\t\t/**\n\t\t * State that was saved. Useful for back reference\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oSavedState\": null,\n\t\n\t\t/**\n\t\t * State that was loaded. Useful for back reference\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oLoadedState\": null,\n\t\n\t\t/**\n\t\t * Source url for AJAX data for the table.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sAjaxSource\": null,\n\t\n\t\t/**\n\t\t * Property from a given object from which to read the table data from. This\n\t\t * can be an empty string (when not server-side processing), in which case\n\t\t * it is  assumed an an array is given directly.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sAjaxDataProp\": null,\n\t\n\t\t/**\n\t\t * The last jQuery XHR object that was used for server-side data gathering.\n\t\t * This can be used for working with the XHR information in one of the\n\t\t * callbacks\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"jqXHR\": null,\n\t\n\t\t/**\n\t\t * JSON returned from the server in the last Ajax request\n\t\t *  @type object\n\t\t *  @default undefined\n\t\t */\n\t\t\"json\": undefined,\n\t\n\t\t/**\n\t\t * Data submitted as part of the last Ajax request\n\t\t *  @type object\n\t\t *  @default undefined\n\t\t */\n\t\t\"oAjaxData\": undefined,\n\t\n\t\t/**\n\t\t * Function to get the server-side data.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t */\n\t\t\"fnServerData\": null,\n\t\n\t\t/**\n\t\t * Functions which are called prior to sending an Ajax request so extra\n\t\t * parameters can easily be sent to the server\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoServerParams\": [],\n\t\n\t\t/**\n\t\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n\t\t * required).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sServerMethod\": null,\n\t\n\t\t/**\n\t\t * Format numbers for display.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t */\n\t\t\"fnFormatNumber\": null,\n\t\n\t\t/**\n\t\t * List of options that can be used for the user selectable length menu.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aLengthMenu\": null,\n\t\n\t\t/**\n\t\t * Counter for the draws that the table does. Also used as a tracker for\n\t\t * server-side processing\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iDraw\": 0,\n\t\n\t\t/**\n\t\t * Indicate if a redraw is being done - useful for Ajax\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bDrawing\": false,\n\t\n\t\t/**\n\t\t * Draw index (iDraw) of the last error when parsing the returned data\n\t\t *  @type int\n\t\t *  @default -1\n\t\t */\n\t\t\"iDrawError\": -1,\n\t\n\t\t/**\n\t\t * Paging display length\n\t\t *  @type int\n\t\t *  @default 10\n\t\t */\n\t\t\"_iDisplayLength\": 10,\n\t\n\t\t/**\n\t\t * Paging start point - aiDisplay index\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"_iDisplayStart\": 0,\n\t\n\t\t/**\n\t\t * Server-side processing - number of records in the result set\n\t\t * (i.e. before filtering), Use fnRecordsTotal rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *  @private\n\t\t */\n\t\t\"_iRecordsTotal\": 0,\n\t\n\t\t/**\n\t\t * Server-side processing - number of records in the current display set\n\t\t * (i.e. after filtering). Use fnRecordsDisplay rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t *  @type boolean\n\t\t *  @default 0\n\t\t *  @private\n\t\t */\n\t\t\"_iRecordsDisplay\": 0,\n\t\n\t\t/**\n\t\t * The classes to use for the table\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oClasses\": {},\n\t\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw\n\t\t * callback if filtering has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @deprecated\n\t\t */\n\t\t\"bFiltered\": false,\n\t\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw\n\t\t * callback if sorting has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @deprecated\n\t\t */\n\t\t\"bSorted\": false,\n\t\n\t\t/**\n\t\t * Indicate that if multiple rows are in the header and there is more than\n\t\t * one unique cell per column, if the top one (true) or bottom one (false)\n\t\t * should be used for sorting / title by DataTables.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortCellsTop\": null,\n\t\n\t\t/**\n\t\t * Initialisation object that is used for the table\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oInit\": null,\n\t\n\t\t/**\n\t\t * Destroy callback functions - for plug-ins to attach themselves to the\n\t\t * destroy so they can clean up markup and events.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoDestroyCallback\": [],\n\t\n\t\n\t\t/**\n\t\t * Get the number of records in the current record set, before filtering\n\t\t *  @type function\n\t\t */\n\t\t\"fnRecordsTotal\": function ()\n\t\t{\n\t\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\t\tthis._iRecordsTotal * 1 :\n\t\t\t\tthis.aiDisplayMaster.length;\n\t\t},\n\t\n\t\t/**\n\t\t * Get the number of records in the current record set, after filtering\n\t\t *  @type function\n\t\t */\n\t\t\"fnRecordsDisplay\": function ()\n\t\t{\n\t\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\t\tthis._iRecordsDisplay * 1 :\n\t\t\t\tthis.aiDisplay.length;\n\t\t},\n\t\n\t\t/**\n\t\t * Get the display end point - aiDisplay index\n\t\t *  @type function\n\t\t */\n\t\t\"fnDisplayEnd\": function ()\n\t\t{\n\t\t\tvar\n\t\t\t\tlen      = this._iDisplayLength,\n\t\t\t\tstart    = this._iDisplayStart,\n\t\t\t\tcalc     = start + len,\n\t\t\t\trecords  = this.aiDisplay.length,\n\t\t\t\tfeatures = this.oFeatures,\n\t\t\t\tpaginate = features.bPaginate;\n\t\n\t\t\tif ( features.bServerSide ) {\n\t\t\t\treturn paginate === false || len === -1 ?\n\t\t\t\t\tstart + records :\n\t\t\t\t\tMath.min( start+len, this._iRecordsDisplay );\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn ! paginate || calc>records || len===-1 ?\n\t\t\t\t\trecords :\n\t\t\t\t\tcalc;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * The DataTables object for this table\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oInstance\": null,\n\t\n\t\t/**\n\t\t * Unique identifier for each instance of the DataTables object. If there\n\t\t * is an ID on the table node, then it takes that value, otherwise an\n\t\t * incrementing internal counter is used.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sInstance\": null,\n\t\n\t\t/**\n\t\t * tabindex attribute value that is added to DataTables control elements, allowing\n\t\t * keyboard navigation of the table and its controls.\n\t\t */\n\t\t\"iTabIndex\": 0,\n\t\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollHead\": null,\n\t\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollFoot\": null,\n\t\n\t\t/**\n\t\t * Last applied sort\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aLastSort\": [],\n\t\n\t\t/**\n\t\t * Stored plug-in instances\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oPlugins\": {},\n\t\n\t\t/**\n\t\t * Function used to get a row's id from the row's data\n\t\t *  @type function\n\t\t *  @default null\n\t\t */\n\t\t\"rowIdFn\": null,\n\t\n\t\t/**\n\t\t * Data location where to store a row's id\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"rowId\": null\n\t};\n\t\n\t/**\n\t * Extension object for DataTables that is used to provide all extension\n\t * options.\n\t *\n\t * Note that the `DataTable.ext` object is available through\n\t * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n\t * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n\t *  @namespace\n\t *  @extends DataTable.models.ext\n\t */\n\t\n\t\n\t/**\n\t * DataTables extensions\n\t * \n\t * This namespace acts as a collection area for plug-ins that can be used to\n\t * extend DataTables capabilities. Indeed many of the build in methods\n\t * use this method to provide their own capabilities (sorting methods for\n\t * example).\n\t *\n\t * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n\t * reasons\n\t *\n\t *  @namespace\n\t */\n\tDataTable.ext = _ext = {\n\t\t/**\n\t\t * Buttons. For use with the Buttons extension for DataTables. This is\n\t\t * defined here so other extensions can define buttons regardless of load\n\t\t * order. It is _not_ used by DataTables core.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tbuttons: {},\n\t\n\t\n\t\t/**\n\t\t * Element class names\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tclasses: {},\n\t\n\t\n\t\t/**\n\t\t * DataTables build type (expanded by the download builder)\n\t\t *\n\t\t *  @type string\n\t\t */\n\t\tbuilder: \"-source-\",\n\t\n\t\n\t\t/**\n\t\t * Error reporting.\n\t\t * \n\t\t * How should DataTables report an error. Can take the value 'alert',\n\t\t * 'throw', 'none' or a function.\n\t\t *\n\t\t *  @type string|function\n\t\t *  @default alert\n\t\t */\n\t\terrMode: \"alert\",\n\t\n\t\n\t\t/**\n\t\t * Feature plug-ins.\n\t\t * \n\t\t * This is an array of objects which describe the feature plug-ins that are\n\t\t * available to DataTables. These feature plug-ins are then available for\n\t\t * use through the `dom` initialisation option.\n\t\t * \n\t\t * Each feature plug-in is described by an object which must have the\n\t\t * following properties:\n\t\t * \n\t\t * * `fnInit` - function that is used to initialise the plug-in,\n\t\t * * `cFeature` - a character so the feature can be enabled by the `dom`\n\t\t *   instillation option. This is case sensitive.\n\t\t *\n\t\t * The `fnInit` function has the following input parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t *\n\t\t * And the following return is expected:\n\t\t * \n\t\t * * {node|null} The element which contains your feature. Note that the\n\t\t *   return may also be void if your plug-in does not require to inject any\n\t\t *   DOM elements into DataTables control (`dom`) - for example this might\n\t\t *   be useful when developing a plug-in which allows table control via\n\t\t *   keyboard entry\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    $.fn.dataTable.ext.features.push( {\n\t\t *      \"fnInit\": function( oSettings ) {\n\t\t *        return new TableTools( { \"oDTSettings\": oSettings } );\n\t\t *      },\n\t\t *      \"cFeature\": \"T\"\n\t\t *    } );\n\t\t */\n\t\tfeature: [],\n\t\n\t\n\t\t/**\n\t\t * Row searching.\n\t\t * \n\t\t * This method of searching is complimentary to the default type based\n\t\t * searching, and a lot more comprehensive as it allows you complete control\n\t\t * over the searching logic. Each element in this array is a function\n\t\t * (parameters described below) that is called for every row in the table,\n\t\t * and your logic decides if it should be included in the searching data set\n\t\t * or not.\n\t\t *\n\t\t * Searching functions have the following input parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t * 2. `{array|object}` Data for the row to be processed (same as the\n\t\t *    original format that was passed in as the data source, or an array\n\t\t *    from a DOM data source\n\t\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n\t\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\n\t\t *\n\t\t * And the following return is expected:\n\t\t *\n\t\t * * {boolean} Include the row in the searched result set (true) or not\n\t\t *   (false)\n\t\t *\n\t\t * Note that as with the main search ability in DataTables, technically this\n\t\t * is \"filtering\", since it is subtractive. However, for consistency in\n\t\t * naming we call it searching here.\n\t\t *\n\t\t *  @type array\n\t\t *  @default []\n\t\t *\n\t\t *  @example\n\t\t *    // The following example shows custom search being applied to the\n\t\t *    // fourth column (i.e. the data[3] index) based on two input values\n\t\t *    // from the end-user, matching the data in a certain range.\n\t\t *    $.fn.dataTable.ext.search.push(\n\t\t *      function( settings, data, dataIndex ) {\n\t\t *        var min = document.getElementById('min').value * 1;\n\t\t *        var max = document.getElementById('max').value * 1;\n\t\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t\t *\n\t\t *        if ( min == \"\" && max == \"\" ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min == \"\" && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && \"\" == max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        return false;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\tsearch: [],\n\t\n\t\n\t\t/**\n\t\t * Selector extensions\n\t\t *\n\t\t * The `selector` option can be used to extend the options available for the\n\t\t * selector modifier options (`selector-modifier` object data type) that\n\t\t * each of the three built in selector types offer (row, column and cell +\n\t\t * their plural counterparts). For example the Select extension uses this\n\t\t * mechanism to provide an option to select only rows, columns and cells\n\t\t * that have been marked as selected by the end user (`{selected: true}`),\n\t\t * which can be used in conjunction with the existing built in selector\n\t\t * options.\n\t\t *\n\t\t * Each property is an array to which functions can be pushed. The functions\n\t\t * take three attributes:\n\t\t *\n\t\t * * Settings object for the host table\n\t\t * * Options object (`selector-modifier` object type)\n\t\t * * Array of selected item indexes\n\t\t *\n\t\t * The return is an array of the resulting item indexes after the custom\n\t\t * selector has been applied.\n\t\t *\n\t\t *  @type object\n\t\t */\n\t\tselector: {\n\t\t\tcell: [],\n\t\t\tcolumn: [],\n\t\t\trow: []\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Internal functions, exposed for used in plug-ins.\n\t\t * \n\t\t * Please note that you should not need to use the internal methods for\n\t\t * anything other than a plug-in (and even then, try to avoid if possible).\n\t\t * The internal function may change between releases.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tinternal: {},\n\t\n\t\n\t\t/**\n\t\t * Legacy configuration options. Enable and disable legacy options that\n\t\t * are available in DataTables.\n\t\t *\n\t\t *  @type object\n\t\t */\n\t\tlegacy: {\n\t\t\t/**\n\t\t\t * Enable / disable DataTables 1.9 compatible server-side processing\n\t\t\t * requests\n\t\t\t *\n\t\t\t *  @type boolean\n\t\t\t *  @default null\n\t\t\t */\n\t\t\tajax: null\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Pagination plug-in methods.\n\t\t * \n\t\t * Each entry in this object is a function and defines which buttons should\n\t\t * be shown by the pagination rendering method that is used for the table:\n\t\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n\t\t * buttons are displayed in the document, while the functions here tell it\n\t\t * what buttons to display. This is done by returning an array of button\n\t\t * descriptions (what each button will do).\n\t\t *\n\t\t * Pagination types (the four built in options and any additional plug-in\n\t\t * options defined here) can be used through the `paginationType`\n\t\t * initialisation parameter.\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t\t * 1. `{int} page` The current page index\n\t\t * 2. `{int} pages` The number of pages in the table\n\t\t *\n\t\t * Each function is expected to return an array where each element of the\n\t\t * array can be one of:\n\t\t *\n\t\t * * `first` - Jump to first page when activated\n\t\t * * `last` - Jump to last page when activated\n\t\t * * `previous` - Show previous page when activated\n\t\t * * `next` - Show next page when activated\n\t\t * * `{int}` - Show page of the index given\n\t\t * * `{array}` - A nested array containing the above elements to add a\n\t\t *   containing 'DIV' element (might be useful for styling).\n\t\t *\n\t\t * Note that DataTables v1.9- used this object slightly differently whereby\n\t\t * an object with two functions would be defined for each plug-in. That\n\t\t * ability is still supported by DataTables 1.10+ to provide backwards\n\t\t * compatibility, but this option of use is now decremented and no longer\n\t\t * documented in DataTables 1.10+.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    // Show previous, next and current page buttons only\n\t\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t\t *      return [ 'previous', page, 'next' ];\n\t\t *    };\n\t\t */\n\t\tpager: {},\n\t\n\t\n\t\trenderer: {\n\t\t\tpageButton: {},\n\t\t\theader: {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Ordering plug-ins - custom data source\n\t\t * \n\t\t * The extension options for ordering of data available here is complimentary\n\t\t * to the default type based ordering that DataTables typically uses. It\n\t\t * allows much greater control over the the data that is being used to\n\t\t * order a column, but is necessarily therefore more complex.\n\t\t * \n\t\t * This type of ordering is useful if you want to do ordering based on data\n\t\t * live from the DOM (for example the contents of an 'input' element) rather\n\t\t * than just the static string that DataTables knows of.\n\t\t * \n\t\t * The way these plug-ins work is that you create an array of the values you\n\t\t * wish to be ordering for the column in question and then return that\n\t\t * array. The data in the array much be in the index order of the rows in\n\t\t * the table (not the currently ordering order!). Which order data gathering\n\t\t * function is run here depends on the `dt-init columns.orderDataType`\n\t\t * parameter that is used for the column (if any).\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t * 2. `{int}` Target column index\n\t\t *\n\t\t * Each function is expected to return an array:\n\t\t *\n\t\t * * `{array}` Data for the column to be ordering upon\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    // Ordering using `input` node values\n\t\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n\t\t *    {\n\t\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t\t *        return $('input', td).val();\n\t\t *      } );\n\t\t *    }\n\t\t */\n\t\torder: {},\n\t\n\t\n\t\t/**\n\t\t * Type based plug-ins.\n\t\t *\n\t\t * Each column in DataTables has a type assigned to it, either by automatic\n\t\t * detection or by direct assignment using the `type` option for the column.\n\t\t * The type of a column will effect how it is ordering and search (plug-ins\n\t\t * can also make use of the column type if required).\n\t\t *\n\t\t * @namespace\n\t\t */\n\t\ttype: {\n\t\t\t/**\n\t\t\t * Type detection functions.\n\t\t\t *\n\t\t\t * The functions defined in this object are used to automatically detect\n\t\t\t * a column's type, making initialisation of DataTables super easy, even\n\t\t\t * when complex data is in the table.\n\t\t\t *\n\t\t\t * The functions defined take two parameters:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be analysed\n\t\t     *  2. `{settings}` DataTables settings object. This can be used to\n\t\t     *     perform context specific type detection - for example detection\n\t\t     *     based on language settings such as using a comma for a decimal\n\t\t     *     place. Generally speaking the options from the settings will not\n\t\t     *     be required\n\t\t\t *\n\t\t\t * Each function is expected to return:\n\t\t\t *\n\t\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\n\t\t\t *   pass it on to the other type detection functions.\n\t\t\t *\n\t\t\t *  @type array\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Currency type detection plug-in:\n\t\t\t *    $.fn.dataTable.ext.type.detect.push(\n\t\t\t *      function ( data, settings ) {\n\t\t\t *        // Check the numeric part\n\t\t\t *        if ( ! data.substring(1).match(/[0-9]/) ) {\n\t\t\t *          return null;\n\t\t\t *        }\n\t\t\t *\n\t\t\t *        // Check prefixed by currency\n\t\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t\t *          return 'currency';\n\t\t\t *        }\n\t\t\t *        return null;\n\t\t\t *      }\n\t\t\t *    );\n\t\t\t */\n\t\t\tdetect: [],\n\t\n\t\n\t\t\t/**\n\t\t\t * Type based search formatting.\n\t\t\t *\n\t\t\t * The type based searching functions can be used to pre-format the\n\t\t\t * data to be search on. For example, it can be used to strip HTML\n\t\t\t * tags or to de-format telephone numbers for numeric only searching.\n\t\t\t *\n\t\t\t * Note that is a search is not defined for a column of a given type,\n\t\t\t * no search formatting will be performed.\n\t\t\t * \n\t\t\t * Pre-processing of searching data plug-ins - When you assign the sType\n\t\t\t * for a column (or have it automatically detected for you by DataTables\n\t\t\t * or a type detection plug-in), you will typically be using this for\n\t\t\t * custom sorting, but it can also be used to provide custom searching\n\t\t\t * by allowing you to pre-processing the data and returning the data in\n\t\t\t * the format that should be searched upon. This is done by adding\n\t\t\t * functions this object with a parameter name which matches the sType\n\t\t\t * for that target column. This is the corollary of <i>afnSortData</i>\n\t\t\t * for searching data.\n\t\t\t *\n\t\t\t * The functions defined take a single parameter:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be prepared for searching\n\t\t\t *\n\t\t\t * Each function is expected to return:\n\t\t\t *\n\t\t\t * * `{string|null}` Formatted string that will be used for the searching.\n\t\t\t *\n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t\t *    }\n\t\t\t */\n\t\t\tsearch: {},\n\t\n\t\n\t\t\t/**\n\t\t\t * Type based ordering.\n\t\t\t *\n\t\t\t * The column type tells DataTables what ordering to apply to the table\n\t\t\t * when a column is sorted upon. The order for each type that is defined,\n\t\t\t * is defined by the functions available in this object.\n\t\t\t *\n\t\t\t * Each ordering option can be described by three properties added to\n\t\t\t * this object:\n\t\t\t *\n\t\t\t * * `{type}-pre` - Pre-formatting function\n\t\t\t * * `{type}-asc` - Ascending order function\n\t\t\t * * `{type}-desc` - Descending order function\n\t\t\t *\n\t\t\t * All three can be used together, only `{type}-pre` or only\n\t\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\n\t\t\t * that only `{type}-pre` is used, as this provides the optimal\n\t\t\t * implementation in terms of speed, although the others are provided\n\t\t\t * for compatibility with existing Javascript sort functions.\n\t\t\t *\n\t\t\t * `{type}-pre`: Functions defined take a single parameter:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be prepared for ordering\n\t\t\t *\n\t\t\t * And return:\n\t\t\t *\n\t\t\t * * `{*}` Data to be sorted upon\n\t\t\t *\n\t\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n\t\t\t * functions, taking two parameters:\n\t\t\t *\n\t\t     *  1. `{*}` Data to compare to the second parameter\n\t\t     *  2. `{*}` Data to compare to the first parameter\n\t\t\t *\n\t\t\t * And returning:\n\t\t\t *\n\t\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n\t\t\t *   than the second parameter, ===0 if the two parameters are equal and\n\t\t\t *   >0 if the first parameter should be sorted height than the second\n\t\t\t *   parameter.\n\t\t\t * \n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\n\t\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t\t *      \"string-pre\": function(x) {\n\t\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t\t *        return parseFloat( a );\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Case-sensitive string ordering, with no pre-formatting method\n\t\t\t *    $.extend( $.fn.dataTable.ext.order, {\n\t\t\t *      \"string-case-asc\": function(x,y) {\n\t\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t\t *      },\n\t\t\t *      \"string-case-desc\": function(x,y) {\n\t\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t */\n\t\t\torder: {}\n\t\t},\n\t\n\t\t/**\n\t\t * Unique DataTables instance counter\n\t\t *\n\t\t * @type int\n\t\t * @private\n\t\t */\n\t\t_unique: 0,\n\t\n\t\n\t\t//\n\t\t// Depreciated\n\t\t// The following properties are retained for backwards compatibility only.\n\t\t// The should not be used in new projects and will be removed in a future\n\t\t// version\n\t\t//\n\t\n\t\t/**\n\t\t * Version check function.\n\t\t *  @type function\n\t\t *  @depreciated Since 1.10\n\t\t */\n\t\tfnVersionCheck: DataTable.fnVersionCheck,\n\t\n\t\n\t\t/**\n\t\t * Index for what 'this' index API functions should use\n\t\t *  @type int\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\tiApiIndex: 0,\n\t\n\t\n\t\t/**\n\t\t * jQuery UI class container\n\t\t *  @type object\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\toJUIClasses: {},\n\t\n\t\n\t\t/**\n\t\t * Software version\n\t\t *  @type string\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\tsVersion: DataTable.version\n\t};\n\t\n\t\n\t//\n\t// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n\t//\n\t$.extend( _ext, {\n\t\tafnFiltering: _ext.search,\n\t\taTypes:       _ext.type.detect,\n\t\tofnSearch:    _ext.type.search,\n\t\toSort:        _ext.type.order,\n\t\tafnSortData:  _ext.order,\n\t\taoFeatures:   _ext.feature,\n\t\toApi:         _ext.internal,\n\t\toStdClasses:  _ext.classes,\n\t\toPagination:  _ext.pager\n\t} );\n\t\n\t\n\t$.extend( DataTable.ext.classes, {\n\t\t\"sTable\": \"dataTable\",\n\t\t\"sNoFooter\": \"no-footer\",\n\t\n\t\t/* Paging buttons */\n\t\t\"sPageButton\": \"paginate_button\",\n\t\t\"sPageButtonActive\": \"current\",\n\t\t\"sPageButtonDisabled\": \"disabled\",\n\t\n\t\t/* Striping classes */\n\t\t\"sStripeOdd\": \"odd\",\n\t\t\"sStripeEven\": \"even\",\n\t\n\t\t/* Empty row */\n\t\t\"sRowEmpty\": \"dataTables_empty\",\n\t\n\t\t/* Features */\n\t\t\"sWrapper\": \"dataTables_wrapper\",\n\t\t\"sFilter\": \"dataTables_filter\",\n\t\t\"sInfo\": \"dataTables_info\",\n\t\t\"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\n\t\t\"sLength\": \"dataTables_length\",\n\t\t\"sProcessing\": \"dataTables_processing\",\n\t\n\t\t/* Sorting */\n\t\t\"sSortAsc\": \"sorting_asc\",\n\t\t\"sSortDesc\": \"sorting_desc\",\n\t\t\"sSortable\": \"sorting\", /* Sortable in both directions */\n\t\t\"sSortableAsc\": \"sorting_desc_disabled\",\n\t\t\"sSortableDesc\": \"sorting_asc_disabled\",\n\t\t\"sSortableNone\": \"sorting_disabled\",\n\t\t\"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\n\t\n\t\t/* Filtering */\n\t\t\"sFilterInput\": \"\",\n\t\n\t\t/* Page length */\n\t\t\"sLengthSelect\": \"\",\n\t\n\t\t/* Scrolling */\n\t\t\"sScrollWrapper\": \"dataTables_scroll\",\n\t\t\"sScrollHead\": \"dataTables_scrollHead\",\n\t\t\"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\n\t\t\"sScrollBody\": \"dataTables_scrollBody\",\n\t\t\"sScrollFoot\": \"dataTables_scrollFoot\",\n\t\t\"sScrollFootInner\": \"dataTables_scrollFootInner\",\n\t\n\t\t/* Misc */\n\t\t\"sHeaderTH\": \"\",\n\t\t\"sFooterTH\": \"\",\n\t\n\t\t// Deprecated\n\t\t\"sSortJUIAsc\": \"\",\n\t\t\"sSortJUIDesc\": \"\",\n\t\t\"sSortJUI\": \"\",\n\t\t\"sSortJUIAscAllowed\": \"\",\n\t\t\"sSortJUIDescAllowed\": \"\",\n\t\t\"sSortJUIWrapper\": \"\",\n\t\t\"sSortIcon\": \"\",\n\t\t\"sJUIHeader\": \"\",\n\t\t\"sJUIFooter\": \"\"\n\t} );\n\t\n\t\n\tvar extPagination = DataTable.ext.pager;\n\t\n\tfunction _numbers ( page, pages ) {\n\t\tvar\n\t\t\tnumbers = [],\n\t\t\tbuttons = extPagination.numbers_length,\n\t\t\thalf = Math.floor( buttons / 2 ),\n\t\t\ti = 1;\n\t\n\t\tif ( pages <= buttons ) {\n\t\t\tnumbers = _range( 0, pages );\n\t\t}\n\t\telse if ( page <= half ) {\n\t\t\tnumbers = _range( 0, buttons-2 );\n\t\t\tnumbers.push( 'ellipsis' );\n\t\t\tnumbers.push( pages-1 );\n\t\t}\n\t\telse if ( page >= pages - 1 - half ) {\n\t\t\tnumbers = _range( pages-(buttons-2), pages );\n\t\t\tnumbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6\n\t\t\tnumbers.splice( 0, 0, 0 );\n\t\t}\n\t\telse {\n\t\t\tnumbers = _range( page-half+2, page+half-1 );\n\t\t\tnumbers.push( 'ellipsis' );\n\t\t\tnumbers.push( pages-1 );\n\t\t\tnumbers.splice( 0, 0, 'ellipsis' );\n\t\t\tnumbers.splice( 0, 0, 0 );\n\t\t}\n\t\n\t\tnumbers.DT_el = 'span';\n\t\treturn numbers;\n\t}\n\t\n\t\n\t$.extend( extPagination, {\n\t\tsimple: function ( page, pages ) {\n\t\t\treturn [ 'previous', 'next' ];\n\t\t},\n\t\n\t\tfull: function ( page, pages ) {\n\t\t\treturn [  'first', 'previous', 'next', 'last' ];\n\t\t},\n\t\n\t\tnumbers: function ( page, pages ) {\n\t\t\treturn [ _numbers(page, pages) ];\n\t\t},\n\t\n\t\tsimple_numbers: function ( page, pages ) {\n\t\t\treturn [ 'previous', _numbers(page, pages), 'next' ];\n\t\t},\n\t\n\t\tfull_numbers: function ( page, pages ) {\n\t\t\treturn [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];\n\t\t},\n\t\t\n\t\tfirst_last_numbers: function (page, pages) {\n\t \t\treturn ['first', _numbers(page, pages), 'last'];\n\t \t},\n\t\n\t\t// For testing and plug-ins to use\n\t\t_numbers: _numbers,\n\t\n\t\t// Number of number buttons (including ellipsis) to show. _Must be odd!_\n\t\tnumbers_length: 7\n\t} );\n\t\n\t\n\t$.extend( true, DataTable.ext.renderer, {\n\t\tpageButton: {\n\t\t\t_: function ( settings, host, idx, buttons, page, pages ) {\n\t\t\t\tvar classes = settings.oClasses;\n\t\t\t\tvar lang = settings.oLanguage.oPaginate;\n\t\t\t\tvar aria = settings.oLanguage.oAria.paginate || {};\n\t\t\t\tvar btnDisplay, btnClass, counter=0;\n\t\n\t\t\t\tvar attach = function( container, buttons ) {\n\t\t\t\t\tvar i, ien, node, button, tabIndex;\n\t\t\t\t\tvar disabledClass = classes.sPageButtonDisabled;\n\t\t\t\t\tvar clickHandler = function ( e ) {\n\t\t\t\t\t\t_fnPageChange( settings, e.data.action, true );\n\t\t\t\t\t};\n\t\n\t\t\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\t\t\tbutton = buttons[i];\n\t\n\t\t\t\t\t\tif ( Array.isArray( button ) ) {\n\t\t\t\t\t\t\tvar inner = $( '<'+(button.DT_el || 'div')+'/>' )\n\t\t\t\t\t\t\t\t.appendTo( container );\n\t\t\t\t\t\t\tattach( inner, button );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbtnDisplay = null;\n\t\t\t\t\t\t\tbtnClass = button;\n\t\t\t\t\t\t\ttabIndex = settings.iTabIndex;\n\t\n\t\t\t\t\t\t\tswitch ( button ) {\n\t\t\t\t\t\t\t\tcase 'ellipsis':\n\t\t\t\t\t\t\t\t\tcontainer.append('<span class=\"ellipsis\">&#x2026;</span>');\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'first':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sFirst;\n\t\n\t\t\t\t\t\t\t\t\tif ( page === 0 ) {\n\t\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'previous':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\n\t\n\t\t\t\t\t\t\t\t\tif ( page === 0 ) {\n\t\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'next':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sNext;\n\t\n\t\t\t\t\t\t\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'last':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sLast;\n\t\n\t\t\t\t\t\t\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\t\t\t\t\t\t\ttabIndex = -1;\n\t\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tbtnDisplay = settings.fnFormatNumber( button + 1 );\n\t\t\t\t\t\t\t\t\tbtnClass = page === button ?\n\t\t\t\t\t\t\t\t\t\tclasses.sPageButtonActive : '';\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif ( btnDisplay !== null ) {\n\t\t\t\t\t\t\t\tnode = $('<a>', {\n\t\t\t\t\t\t\t\t\t\t'class': classes.sPageButton+' '+btnClass,\n\t\t\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\n\t\t\t\t\t\t\t\t\t\t'aria-label': aria[ button ],\n\t\t\t\t\t\t\t\t\t\t'data-dt-idx': counter,\n\t\t\t\t\t\t\t\t\t\t'tabindex': tabIndex,\n\t\t\t\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\n\t\t\t\t\t\t\t\t\t\t\tsettings.sTableId +'_'+ button :\n\t\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t\t.html( btnDisplay )\n\t\t\t\t\t\t\t\t\t.appendTo( container );\n\t\n\t\t\t\t\t\t\t\t_fnBindAction(\n\t\t\t\t\t\t\t\t\tnode, {action: button}, clickHandler\n\t\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t// inside an iframe or frame. Try / catch the error. Not good for\n\t\t\t\t// accessibility, but neither are frames.\n\t\t\t\tvar activeEl;\n\t\n\t\t\t\ttry {\n\t\t\t\t\t// Because this approach is destroying and recreating the paging\n\t\t\t\t\t// elements, focus is lost on the select button which is bad for\n\t\t\t\t\t// accessibility. So we want to restore focus once the draw has\n\t\t\t\t\t// completed\n\t\t\t\t\tactiveEl = $(host).find(document.activeElement).data('dt-idx');\n\t\t\t\t}\n\t\t\t\tcatch (e) {}\n\t\n\t\t\t\tattach( $(host).empty(), buttons );\n\t\n\t\t\t\tif ( activeEl !== undefined ) {\n\t\t\t\t\t$(host).find( '[data-dt-idx='+activeEl+']' ).trigger('focus');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t\n\t\n\t// Built in type detection. See model.ext.aTypes for information about\n\t// what is required from this methods.\n\t$.extend( DataTable.ext.type.detect, [\n\t\t// Plain numbers - first since V8 detects some plain numbers as dates\n\t\t// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal ) ? 'num'+decimal : null;\n\t\t},\n\t\n\t\t// Dates (only those recognised by the browser's Date.parse)\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\n\t\t\t// valid, so we need to use a regex to restrict date formats. Use a\n\t\t\t// plug-in for anything other than ISO8601 style strings\n\t\t\tif ( d && !(d instanceof Date) && ! _re_date.test(d) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar parsed = Date.parse(d);\n\t\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\n\t\t},\n\t\n\t\t// Formatted numbers\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;\n\t\t},\n\t\n\t\t// HTML numeric\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;\n\t\t},\n\t\n\t\t// HTML numeric, formatted\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;\n\t\t},\n\t\n\t\t// HTML (this is strict checking - there must be html)\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\n\t\t\t\t'html' : null;\n\t\t}\n\t] );\n\t\n\t\n\t\n\t// Filter formatting functions. See model.ext.ofnSearch for information about\n\t// what is required from these methods.\n\t// \n\t// Note that additional search methods are added for the html numbers and\n\t// html formatted numbers by `_addNumericSort()` when we know what the decimal\n\t// place is\n\t\n\t\n\t$.extend( DataTable.ext.type.search, {\n\t\thtml: function ( data ) {\n\t\t\treturn _empty(data) ?\n\t\t\t\tdata :\n\t\t\t\ttypeof data === 'string' ?\n\t\t\t\t\tdata\n\t\t\t\t\t\t.replace( _re_new_lines, \" \" )\n\t\t\t\t\t\t.replace( _re_html, \"\" ) :\n\t\t\t\t\t'';\n\t\t},\n\t\n\t\tstring: function ( data ) {\n\t\t\treturn _empty(data) ?\n\t\t\t\tdata :\n\t\t\t\ttypeof data === 'string' ?\n\t\t\t\t\tdata.replace( _re_new_lines, \" \" ) :\n\t\t\t\t\tdata;\n\t\t}\n\t} );\n\t\n\t\n\t\n\tvar __numericReplace = function ( d, decimalPlace, re1, re2 ) {\n\t\tif ( d !== 0 && (!d || d === '-') ) {\n\t\t\treturn -Infinity;\n\t\t}\n\t\n\t\t// If a decimal place other than `.` is used, it needs to be given to the\n\t\t// function so we can detect it and replace with a `.` which is the only\n\t\t// decimal place Javascript recognises - it is not locale aware.\n\t\tif ( decimalPlace ) {\n\t\t\td = _numToDecimal( d, decimalPlace );\n\t\t}\n\t\n\t\tif ( d.replace ) {\n\t\t\tif ( re1 ) {\n\t\t\t\td = d.replace( re1, '' );\n\t\t\t}\n\t\n\t\t\tif ( re2 ) {\n\t\t\t\td = d.replace( re2, '' );\n\t\t\t}\n\t\t}\n\t\n\t\treturn d * 1;\n\t};\n\t\n\t\n\t// Add the numeric 'deformatting' functions for sorting and search. This is done\n\t// in a function to provide an easy ability for the language options to add\n\t// additional methods if a non-period decimal place is used.\n\tfunction _addNumericSort ( decimalPlace ) {\n\t\t$.each(\n\t\t\t{\n\t\t\t\t// Plain numbers\n\t\t\t\t\"num\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace );\n\t\t\t\t},\n\t\n\t\t\t\t// Formatted numbers\n\t\t\t\t\"num-fmt\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_formatted_numeric );\n\t\t\t\t},\n\t\n\t\t\t\t// HTML numeric\n\t\t\t\t\"html-num\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html );\n\t\t\t\t},\n\t\n\t\t\t\t// HTML numeric, formatted\n\t\t\t\t\"html-num-fmt\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction ( key, fn ) {\n\t\t\t\t// Add the ordering method\n\t\t\t\t_ext.type.order[ key+decimalPlace+'-pre' ] = fn;\n\t\n\t\t\t\t// For HTML types add a search formatter that will strip the HTML\n\t\t\t\tif ( key.match(/^html\\-/) ) {\n\t\t\t\t\t_ext.type.search[ key+decimalPlace ] = _ext.type.search.html;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\t\n\t\n\t// Default sort methods\n\t$.extend( _ext.type.order, {\n\t\t// Dates\n\t\t\"date-pre\": function ( d ) {\n\t\t\tvar ts = Date.parse( d );\n\t\t\treturn isNaN(ts) ? -Infinity : ts;\n\t\t},\n\t\n\t\t// html\n\t\t\"html-pre\": function ( a ) {\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ta.replace ?\n\t\t\t\t\ta.replace( /<.*?>/g, \"\" ).toLowerCase() :\n\t\t\t\t\ta+'';\n\t\t},\n\t\n\t\t// string\n\t\t\"string-pre\": function ( a ) {\n\t\t\t// This is a little complex, but faster than always calling toString,\n\t\t\t// http://jsperf.com/tostring-v-check\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ttypeof a === 'string' ?\n\t\t\t\t\ta.toLowerCase() :\n\t\t\t\t\t! a.toString ?\n\t\t\t\t\t\t'' :\n\t\t\t\t\t\ta.toString();\n\t\t},\n\t\n\t\t// string-asc and -desc are retained only for compatibility with the old\n\t\t// sort methods\n\t\t\"string-asc\": function ( x, y ) {\n\t\t\treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t},\n\t\n\t\t\"string-desc\": function ( x, y ) {\n\t\t\treturn ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t}\n\t} );\n\t\n\t\n\t// Numeric sorting types - order doesn't matter here\n\t_addNumericSort( '' );\n\t\n\t\n\t$.extend( true, DataTable.ext.renderer, {\n\t\theader: {\n\t\t\t_: function ( settings, cell, column, classes ) {\n\t\t\t\t// No additional mark-up required\n\t\t\t\t// Attach a sort listener to update on sort - note that using the\n\t\t\t\t// `DT` namespace will allow the event to be removed automatically\n\t\t\t\t// on destroy, while the `dt` namespaced event is the one we are\n\t\t\t\t// listening for\n\t\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\t\tif ( settings !== ctx ) { // need to check this this is the host\n\t\t\t\t\t\treturn;               // table, not a nested one\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar colIdx = column.idx;\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\tclasses.sSortAsc +' '+\n\t\t\t\t\t\t\tclasses.sSortDesc\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t},\n\t\n\t\t\tjqueryui: function ( settings, cell, column, classes ) {\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.addClass( classes.sSortJUIWrapper )\n\t\t\t\t\t.append( cell.contents() )\n\t\t\t\t\t.append( $('<span/>')\n\t\t\t\t\t\t.addClass( classes.sSortIcon+' '+column.sSortingClassJUI )\n\t\t\t\t\t)\n\t\t\t\t\t.appendTo( cell );\n\t\n\t\t\t\t// Attach a sort listener to update on sort\n\t\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar colIdx = column.idx;\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.removeClass( classes.sSortAsc +\" \"+classes.sSortDesc )\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t\t);\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.find( 'span.'+classes.sSortIcon )\n\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\tclasses.sSortJUIAsc +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIDesc +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUI +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIAscAllowed +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIDescAllowed\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortJUIAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortJUIDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClassJUI\n\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t/*\n\t * Public helper functions. These aren't used internally by DataTables, or\n\t * called by any of the options passed into DataTables, but they can be used\n\t * externally by developers working with DataTables. They are helper functions\n\t * to make working with DataTables a little bit easier.\n\t */\n\t\n\tvar __htmlEscapeEntities = function ( d ) {\n\t\tif (Array.isArray(d)) {\n\t\t\td = d.join(',');\n\t\t}\n\t\n\t\treturn typeof d === 'string' ?\n\t\t\td\n\t\t\t\t.replace(/&/g, '&amp;')\n\t\t\t\t.replace(/</g, '&lt;')\n\t\t\t\t.replace(/>/g, '&gt;')\n\t\t\t\t.replace(/\"/g, '&quot;') :\n\t\t\td;\n\t};\n\t\n\t// Common logic for moment, luxon or a date action\n\tfunction __mld( dt, momentFn, luxonFn, dateFn, arg1 ) {\n\t\tif (window.moment) {\n\t\t\treturn dt[momentFn]( arg1 );\n\t\t}\n\t\telse if (window.luxon) {\n\t\t\treturn dt[luxonFn]( arg1 );\n\t\t}\n\t\t\n\t\treturn dateFn ? dt[dateFn]( arg1 ) : dt;\n\t}\n\t\n\t\n\tvar __mlWarning = false;\n\tfunction __mldObj (d, format, locale) {\n\t\tvar dt;\n\t\n\t\tif (window.moment) {\n\t\t\tdt = window.moment.utc( d, format, locale, true );\n\t\n\t\t\tif (! dt.isValid()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\telse if (window.luxon) {\n\t\t\tdt = format\n\t\t\t\t? window.luxon.DateTime.fromFormat( d, format )\n\t\t\t\t: window.luxon.DateTime.fromISO( d );\n\t\n\t\t\tif (! dt.isValid) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\n\t\t\tdt.setLocale(locale);\n\t\t}\n\t\telse if (! format) {\n\t\t\t// No format given, must be ISO\n\t\t\tdt = new Date(d);\n\t\t}\n\t\telse {\n\t\t\tif (! __mlWarning) {\n\t\t\t\talert('DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17');\n\t\t\t}\n\t\n\t\t\t__mlWarning = true;\n\t\t}\n\t\n\t\treturn dt;\n\t}\n\t\n\t// Wrapper for date, datetime and time which all operate the same way with the exception of\n\t// the output string for auto locale support\n\tfunction __mlHelper (localeString) {\n\t\treturn function ( from, to, locale, def ) {\n\t\t\t// Luxon and Moment support\n\t\t\t// Argument shifting\n\t\t\tif ( arguments.length === 0 ) {\n\t\t\t\tlocale = 'en';\n\t\t\t\tto = null; // means toLocaleString\n\t\t\t\tfrom = null; // means iso8601\n\t\t\t}\n\t\t\telse if ( arguments.length === 1 ) {\n\t\t\t\tlocale = 'en';\n\t\t\t\tto = from;\n\t\t\t\tfrom = null;\n\t\t\t}\n\t\t\telse if ( arguments.length === 2 ) {\n\t\t\t\tlocale = to;\n\t\t\t\tto = from;\n\t\t\t\tfrom = null;\n\t\t\t}\n\t\n\t\t\tvar typeName = 'datetime-' + to;\n\t\n\t\t\t// Add type detection and sorting specific to this date format - we need to be able to identify\n\t\t\t// date type columns as such, rather than as numbers in extensions. Hence the need for this.\n\t\t\tif (! DataTable.ext.type.order[typeName]) {\n\t\t\t\t// The renderer will give the value to type detect as the type!\n\t\t\t\tDataTable.ext.type.detect.unshift(function (d) {\n\t\t\t\t\treturn d === typeName ? typeName : false;\n\t\t\t\t});\n\t\n\t\t\t\t// The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a\n\t\t\t\t// `valueOf` which gives milliseconds epoch\n\t\t\t\tDataTable.ext.type.order[typeName + '-asc'] = function (a, b) {\n\t\t\t\t\tvar x = a.valueOf();\n\t\t\t\t\tvar y = b.valueOf();\n\t\n\t\t\t\t\treturn x === y\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: x < y\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t}\n\t\n\t\t\t\tDataTable.ext.type.order[typeName + '-desc'] = function (a, b) {\n\t\t\t\t\tvar x = a.valueOf();\n\t\t\t\t\tvar y = b.valueOf();\n\t\n\t\t\t\t\treturn x === y\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: x > y\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\treturn function ( d, type ) {\n\t\t\t\t// Allow for a default value\n\t\t\t\tif (d === null || d === undefined) {\n\t\t\t\t\tif (def === '--now') {\n\t\t\t\t\t\t// We treat everything as UTC further down, so no changes are\n\t\t\t\t\t\t// made, as such need to get the local date / time as if it were\n\t\t\t\t\t\t// UTC\n\t\t\t\t\t\tvar local = new Date();\n\t\t\t\t\t\td = new Date( Date.UTC(\n\t\t\t\t\t\t\tlocal.getFullYear(), local.getMonth(), local.getDate(),\n\t\t\t\t\t\t\tlocal.getHours(), local.getMinutes(), local.getSeconds()\n\t\t\t\t\t\t) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\td = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif (type === 'type') {\n\t\t\t\t\t// Typing uses the type name for fast matching\n\t\t\t\t\treturn typeName;\n\t\t\t\t}\n\t\n\t\t\t\tif (d === '') {\n\t\t\t\t\treturn type !== 'sort'\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: __mldObj('0000-01-01 00:00:00', null, locale);\n\t\t\t\t}\n\t\n\t\t\t\t// Shortcut. If `from` and `to` are the same, we are using the renderer to\n\t\t\t\t// format for ordering, not display - its already in the display format.\n\t\t\t\tif ( to !== null && from === to && type !== 'sort' && type !== 'type' && ! (d instanceof Date) ) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\t\n\t\t\t\tvar dt = __mldObj(d, from, locale);\n\t\n\t\t\t\tif (dt === null) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\t\n\t\t\t\tif (type === 'sort') {\n\t\t\t\t\treturn dt;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar formatted = to === null\n\t\t\t\t\t? __mld(dt, 'toDate', 'toJSDate', '')[localeString]()\n\t\t\t\t\t: __mld(dt, 'format', 'toFormat', 'toISOString', to);\n\t\n\t\t\t\t// XSS protection\n\t\t\t\treturn type === 'display' ?\n\t\t\t\t\t__htmlEscapeEntities( formatted ) :\n\t\t\t\t\tformatted;\n\t\t\t};\n\t\t}\n\t}\n\t\n\t// Based on locale, determine standard number formatting\n\t// Fallback for legacy browsers is US English\n\tvar __thousands = ',';\n\tvar __decimal = '.';\n\t\n\tif (Intl) {\n\t\ttry {\n\t\t\tvar num = new Intl.NumberFormat().formatToParts(100000.1);\n\t\t\n\t\t\tfor (var i=0 ; i<num.length ; i++) {\n\t\t\t\tif (num[i].type === 'group') {\n\t\t\t\t\t__thousands = num[i].value;\n\t\t\t\t}\n\t\t\t\telse if (num[i].type === 'decimal') {\n\t\t\t\t\t__decimal = num[i].value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (e) {\n\t\t\t// noop\n\t\t}\n\t}\n\t\n\t// Formatted date time detection - use by declaring the formats you are going to use\n\tDataTable.datetime = function ( format, locale ) {\n\t\tvar typeName = 'datetime-detect-' + format;\n\t\n\t\tif (! locale) {\n\t\t\tlocale = 'en';\n\t\t}\n\t\n\t\tif (! DataTable.ext.type.order[typeName]) {\n\t\t\tDataTable.ext.type.detect.unshift(function (d) {\n\t\t\t\tvar dt = __mldObj(d, format, locale);\n\t\t\t\treturn d === '' || dt ? typeName : false;\n\t\t\t});\n\t\n\t\t\tDataTable.ext.type.order[typeName + '-pre'] = function (d) {\n\t\t\t\treturn __mldObj(d, format, locale) || 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Helpers for `columns.render`.\n\t *\n\t * The options defined here can be used with the `columns.render` initialisation\n\t * option to provide a display renderer. The following functions are defined:\n\t *\n\t * * `number` - Will format numeric data (defined by `columns.data`) for\n\t *   display, retaining the original unformatted data for sorting and filtering.\n\t *   It takes 5 parameters:\n\t *   * `string` - Thousands grouping separator\n\t *   * `string` - Decimal point indicator\n\t *   * `integer` - Number of decimal points to show\n\t *   * `string` (optional) - Prefix.\n\t *   * `string` (optional) - Postfix (/suffix).\n\t * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n\t *   parameters.\n\t *\n\t * @example\n\t *   // Column definition using the number renderer\n\t *   {\n\t *     data: \"salary\",\n\t *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n\t *   }\n\t *\n\t * @namespace\n\t */\n\tDataTable.render = {\n\t\tdate: __mlHelper('toLocaleDateString'),\n\t\tdatetime: __mlHelper('toLocaleString'),\n\t\ttime: __mlHelper('toLocaleTimeString'),\n\t\tnumber: function ( thousands, decimal, precision, prefix, postfix ) {\n\t\t\t// Auto locale detection\n\t\t\tif (thousands === null || thousands === undefined) {\n\t\t\t\tthousands = __thousands;\n\t\t\t}\n\t\n\t\t\tif (decimal === null || decimal === undefined) {\n\t\t\t\tdecimal = __decimal;\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tdisplay: function ( d ) {\n\t\t\t\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\n\t\t\t\t\t\treturn d;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (d === '' || d === null) {\n\t\t\t\t\t\treturn d;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar negative = d < 0 ? '-' : '';\n\t\t\t\t\tvar flo = parseFloat( d );\n\t\n\t\t\t\t\t// If NaN then there isn't much formatting that we can do - just\n\t\t\t\t\t// return immediately, escaping any HTML (this was supposed to\n\t\t\t\t\t// be a number after all)\n\t\t\t\t\tif ( isNaN( flo ) ) {\n\t\t\t\t\t\treturn __htmlEscapeEntities( d );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tflo = flo.toFixed( precision );\n\t\t\t\t\td = Math.abs( flo );\n\t\n\t\t\t\t\tvar intPart = parseInt( d, 10 );\n\t\t\t\t\tvar floatPart = precision ?\n\t\t\t\t\t\tdecimal+(d - intPart).toFixed( precision ).substring( 2 ):\n\t\t\t\t\t\t'';\n\t\n\t\t\t\t\t// If zero, then can't have a negative prefix\n\t\t\t\t\tif (intPart === 0 && parseFloat(floatPart) === 0) {\n\t\t\t\t\t\tnegative = '';\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn negative + (prefix||'') +\n\t\t\t\t\t\tintPart.toString().replace(\n\t\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\n\t\t\t\t\t\t) +\n\t\t\t\t\t\tfloatPart +\n\t\t\t\t\t\t(postfix||'');\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\n\t\ttext: function () {\n\t\t\treturn {\n\t\t\t\tdisplay: __htmlEscapeEntities,\n\t\t\t\tfilter: __htmlEscapeEntities\n\t\t\t};\n\t\t}\n\t};\n\t\n\t\n\t/*\n\t * This is really a good bit rubbish this method of exposing the internal methods\n\t * publicly... - To be fixed in 2.0 using methods on the prototype\n\t */\n\t\n\t\n\t/**\n\t * Create a wrapper function for exporting an internal functions to an external API.\n\t *  @param {string} fn API function name\n\t *  @returns {function} wrapped function\n\t *  @memberof DataTable#internal\n\t */\n\tfunction _fnExternApiFunc (fn)\n\t{\n\t\treturn function() {\n\t\t\tvar args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(\n\t\t\t\tArray.prototype.slice.call(arguments)\n\t\t\t);\n\t\t\treturn DataTable.ext.internal[fn].apply( this, args );\n\t\t};\n\t}\n\t\n\t\n\t/**\n\t * Reference to internal functions for use by plug-in developers. Note that\n\t * these methods are references to internal functions and are considered to be\n\t * private. If you use these methods, be aware that they are liable to change\n\t * between versions.\n\t *  @namespace\n\t */\n\t$.extend( DataTable.ext.internal, {\n\t\t_fnExternApiFunc: _fnExternApiFunc,\n\t\t_fnBuildAjax: _fnBuildAjax,\n\t\t_fnAjaxUpdate: _fnAjaxUpdate,\n\t\t_fnAjaxParameters: _fnAjaxParameters,\n\t\t_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\n\t\t_fnAjaxDataSrc: _fnAjaxDataSrc,\n\t\t_fnAddColumn: _fnAddColumn,\n\t\t_fnColumnOptions: _fnColumnOptions,\n\t\t_fnAdjustColumnSizing: _fnAdjustColumnSizing,\n\t\t_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\n\t\t_fnColumnIndexToVisible: _fnColumnIndexToVisible,\n\t\t_fnVisbleColumns: _fnVisbleColumns,\n\t\t_fnGetColumns: _fnGetColumns,\n\t\t_fnColumnTypes: _fnColumnTypes,\n\t\t_fnApplyColumnDefs: _fnApplyColumnDefs,\n\t\t_fnHungarianMap: _fnHungarianMap,\n\t\t_fnCamelToHungarian: _fnCamelToHungarian,\n\t\t_fnLanguageCompat: _fnLanguageCompat,\n\t\t_fnBrowserDetect: _fnBrowserDetect,\n\t\t_fnAddData: _fnAddData,\n\t\t_fnAddTr: _fnAddTr,\n\t\t_fnNodeToDataIndex: _fnNodeToDataIndex,\n\t\t_fnNodeToColumnIndex: _fnNodeToColumnIndex,\n\t\t_fnGetCellData: _fnGetCellData,\n\t\t_fnSetCellData: _fnSetCellData,\n\t\t_fnSplitObjNotation: _fnSplitObjNotation,\n\t\t_fnGetObjectDataFn: _fnGetObjectDataFn,\n\t\t_fnSetObjectDataFn: _fnSetObjectDataFn,\n\t\t_fnGetDataMaster: _fnGetDataMaster,\n\t\t_fnClearTable: _fnClearTable,\n\t\t_fnDeleteIndex: _fnDeleteIndex,\n\t\t_fnInvalidate: _fnInvalidate,\n\t\t_fnGetRowElements: _fnGetRowElements,\n\t\t_fnCreateTr: _fnCreateTr,\n\t\t_fnBuildHead: _fnBuildHead,\n\t\t_fnDrawHead: _fnDrawHead,\n\t\t_fnDraw: _fnDraw,\n\t\t_fnReDraw: _fnReDraw,\n\t\t_fnAddOptionsHtml: _fnAddOptionsHtml,\n\t\t_fnDetectHeader: _fnDetectHeader,\n\t\t_fnGetUniqueThs: _fnGetUniqueThs,\n\t\t_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\n\t\t_fnFilterComplete: _fnFilterComplete,\n\t\t_fnFilterCustom: _fnFilterCustom,\n\t\t_fnFilterColumn: _fnFilterColumn,\n\t\t_fnFilter: _fnFilter,\n\t\t_fnFilterCreateSearch: _fnFilterCreateSearch,\n\t\t_fnEscapeRegex: _fnEscapeRegex,\n\t\t_fnFilterData: _fnFilterData,\n\t\t_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\n\t\t_fnUpdateInfo: _fnUpdateInfo,\n\t\t_fnInfoMacros: _fnInfoMacros,\n\t\t_fnInitialise: _fnInitialise,\n\t\t_fnInitComplete: _fnInitComplete,\n\t\t_fnLengthChange: _fnLengthChange,\n\t\t_fnFeatureHtmlLength: _fnFeatureHtmlLength,\n\t\t_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\n\t\t_fnPageChange: _fnPageChange,\n\t\t_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\n\t\t_fnProcessingDisplay: _fnProcessingDisplay,\n\t\t_fnFeatureHtmlTable: _fnFeatureHtmlTable,\n\t\t_fnScrollDraw: _fnScrollDraw,\n\t\t_fnApplyToChildren: _fnApplyToChildren,\n\t\t_fnCalculateColumnWidths: _fnCalculateColumnWidths,\n\t\t_fnThrottle: _fnThrottle,\n\t\t_fnConvertToWidth: _fnConvertToWidth,\n\t\t_fnGetWidestNode: _fnGetWidestNode,\n\t\t_fnGetMaxLenString: _fnGetMaxLenString,\n\t\t_fnStringToCss: _fnStringToCss,\n\t\t_fnSortFlatten: _fnSortFlatten,\n\t\t_fnSort: _fnSort,\n\t\t_fnSortAria: _fnSortAria,\n\t\t_fnSortListener: _fnSortListener,\n\t\t_fnSortAttachListener: _fnSortAttachListener,\n\t\t_fnSortingClasses: _fnSortingClasses,\n\t\t_fnSortData: _fnSortData,\n\t\t_fnSaveState: _fnSaveState,\n\t\t_fnLoadState: _fnLoadState,\n\t\t_fnImplementState: _fnImplementState,\n\t\t_fnSettingsFromNode: _fnSettingsFromNode,\n\t\t_fnLog: _fnLog,\n\t\t_fnMap: _fnMap,\n\t\t_fnBindAction: _fnBindAction,\n\t\t_fnCallbackReg: _fnCallbackReg,\n\t\t_fnCallbackFire: _fnCallbackFire,\n\t\t_fnLengthOverflow: _fnLengthOverflow,\n\t\t_fnRenderer: _fnRenderer,\n\t\t_fnDataSource: _fnDataSource,\n\t\t_fnRowAttributes: _fnRowAttributes,\n\t\t_fnExtend: _fnExtend,\n\t\t_fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant\n\t\t                                // in 1.10, so this dead-end function is\n\t\t                                // added to prevent errors\n\t} );\n\t\n\t\n\t// jQuery access\n\t$.fn.dataTable = DataTable;\n\t\n\t// Provide access to the host jQuery object (circular reference)\n\tDataTable.$ = $;\n\t\n\t// Legacy aliases\n\t$.fn.dataTableSettings = DataTable.settings;\n\t$.fn.dataTableExt = DataTable.ext;\n\t\n\t// With a capital `D` we return a DataTables API instance rather than a\n\t// jQuery object\n\t$.fn.DataTable = function ( opts ) {\n\t\treturn $(this).dataTable( opts ).api();\n\t};\n\t\n\t// All properties that are available to $.fn.dataTable should also be\n\t// available on $.fn.DataTable\n\t$.each( DataTable, function ( prop, val ) {\n\t\t$.fn.DataTable[ prop ] = val;\n\t} );\n\t\n\treturn DataTable;\n}));\n", "/*! DataTables Bootstrap 4 integration\n * \u00A92011-2017 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * DataTables integration for Bootstrap 4. This requires Bootstrap 4 and\n * DataTables 1.10 or newer.\n *\n * This file sets the defaults and adds options to DataTables to style its\n * controls using Bootstrap. See http://datatables.net/manual/styling/bootstrap\n * for further information.\n */\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t// Require DataTables, which attaches to jQuery, including\n\t\t\t\t// jQuery if needed and have a $ property so we can access the\n\t\t\t\t// jQuery object that is used\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n/* Set the defaults for DataTables initialisation */\n$.extend( true, DataTable.defaults, {\n\tdom:\n\t\t\"<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>>\" +\n\t\t\"<'row'<'col-sm-12'tr>>\" +\n\t\t\"<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>\",\n\trenderer: 'bootstrap'\n} );\n\n\n/* Default class modification */\n$.extend( DataTable.ext.classes, {\n\tsWrapper:      \"dataTables_wrapper dt-bootstrap4\",\n\tsFilterInput:  \"form-control form-control-sm\",\n\tsLengthSelect: \"custom-select custom-select-sm form-control form-control-sm\",\n\tsProcessing:   \"dataTables_processing card\",\n\tsPageButton:   \"paginate_button page-item\"\n} );\n\n\n/* Bootstrap paging button renderer */\nDataTable.ext.renderer.pageButton.bootstrap = function ( settings, host, idx, buttons, page, pages ) {\n\tvar api     = new DataTable.Api( settings );\n\tvar classes = settings.oClasses;\n\tvar lang    = settings.oLanguage.oPaginate;\n\tvar aria = settings.oLanguage.oAria.paginate || {};\n\tvar btnDisplay, btnClass, counter=0;\n\n\tvar attach = function( container, buttons ) {\n\t\tvar i, ien, node, button;\n\t\tvar clickHandler = function ( e ) {\n\t\t\te.preventDefault();\n\t\t\tif ( !$(e.currentTarget).hasClass('disabled') && api.page() != e.data.action ) {\n\t\t\t\tapi.page( e.data.action ).draw( 'page' );\n\t\t\t}\n\t\t};\n\n\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tbutton = buttons[i];\n\n\t\t\tif ( Array.isArray( button ) ) {\n\t\t\t\tattach( container, button );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbtnDisplay = '';\n\t\t\t\tbtnClass = '';\n\n\t\t\t\tswitch ( button ) {\n\t\t\t\t\tcase 'ellipsis':\n\t\t\t\t\t\tbtnDisplay = '&#x2026;';\n\t\t\t\t\t\tbtnClass = 'disabled';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'first':\n\t\t\t\t\t\tbtnDisplay = lang.sFirst;\n\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t'' : ' disabled');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'previous':\n\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\n\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t'' : ' disabled');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'next':\n\t\t\t\t\t\tbtnDisplay = lang.sNext;\n\t\t\t\t\t\tbtnClass = button + (page < pages-1 ?\n\t\t\t\t\t\t\t'' : ' disabled');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'last':\n\t\t\t\t\t\tbtnDisplay = lang.sLast;\n\t\t\t\t\t\tbtnClass = button + (page < pages-1 ?\n\t\t\t\t\t\t\t'' : ' disabled');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbtnDisplay = button + 1;\n\t\t\t\t\t\tbtnClass = page === button ?\n\t\t\t\t\t\t\t'active' : '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif ( btnDisplay ) {\n\t\t\t\t\tnode = $('<li>', {\n\t\t\t\t\t\t\t'class': classes.sPageButton+' '+btnClass,\n\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\n\t\t\t\t\t\t\t\tsettings.sTableId +'_'+ button :\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append( $('<a>', {\n\t\t\t\t\t\t\t\t'href': '#',\n\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\n\t\t\t\t\t\t\t\t'aria-label': aria[ button ],\n\t\t\t\t\t\t\t\t'data-dt-idx': counter,\n\t\t\t\t\t\t\t\t'tabindex': settings.iTabIndex,\n\t\t\t\t\t\t\t\t'class': 'page-link'\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t.html( btnDisplay )\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.appendTo( container );\n\n\t\t\t\t\tsettings.oApi._fnBindAction(\n\t\t\t\t\t\tnode, {action: button}, clickHandler\n\t\t\t\t\t);\n\n\t\t\t\t\tcounter++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t// inside an iframe or frame. \n\tvar activeEl;\n\n\ttry {\n\t\t// Because this approach is destroying and recreating the paging\n\t\t// elements, focus is lost on the select button which is bad for\n\t\t// accessibility. So we want to restore focus once the draw has\n\t\t// completed\n\t\tactiveEl = $(host).find(document.activeElement).data('dt-idx');\n\t}\n\tcatch (e) {}\n\n\tattach(\n\t\t$(host).empty().html('<ul class=\"pagination\"/>').children('ul'),\n\t\tbuttons\n\t);\n\n\tif ( activeEl !== undefined ) {\n\t\t$(host).find( '[data-dt-idx='+activeEl+']' ).trigger('focus');\n\t}\n};\n\n\nreturn DataTable;\n}));\n"],
  "mappings": "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",
  "names": ["window", "document", "i", "num", "td", "attr", "k", "settings", "state", "col", "scope", "src", "name", "ien", "e", "idx", "buttons", "window", "document", "buttons"]
}
